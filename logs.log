2022-08-11 20:28:19,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 20:28:19,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 20:28:19,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 20:28:19,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 20:32:18,185:INFO:PyCaret ClassificationExperiment
2022-08-11 20:32:18,186:INFO:Logging name: clf-default-name
2022-08-11 20:32:18,186:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-08-11 20:32:18,186:INFO:version 3.0.0.rc3
2022-08-11 20:32:18,186:INFO:Initializing setup()
2022-08-11 20:32:18,186:INFO:self.USI: 0a89
2022-08-11 20:32:18,186:INFO:self.variable_keys: {'exp_name_log', 'html_param', 'memory', 'exp_id', 'logging_param', '_is_multiclass', '_all_metrics', 'y', '_all_models_internal', 'data', '_gpu_n_jobs_param', 'seed', 'y_train', '_all_models', 'fold_shuffle_param', 'idx', 'n_jobs_param', 'target_param', 'y_test', 'X_train', 'display_container', 'fold_groups_param', 'master_model_container', 'pipeline', 'X_test', '_available_plots', 'log_plots_param', 'USI', 'fix_imbalance', '_ml_usecase', 'X', 'gpu_param', 'fold_generator', 'variable_keys'}
2022-08-11 20:32:18,186:INFO:Checking environment
2022-08-11 20:32:18,186:INFO:python_version: 3.8.8
2022-08-11 20:32:18,187:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 20:32:18,187:INFO:machine: x86_64
2022-08-11 20:32:18,187:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:32:18,187:INFO:Memory: svmem(total=34359738368, available=5855182848, percent=83.0, used=2566594560, free=3562364928, active=2177867776, inactive=1549910016, wired=388726784)
2022-08-11 20:32:18,187:INFO:Physical Core: 10
2022-08-11 20:32:18,188:INFO:Logical Core: 10
2022-08-11 20:32:18,188:INFO:Checking libraries
2022-08-11 20:32:18,188:INFO:System:
2022-08-11 20:32:18,188:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 20:32:18,188:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 20:32:18,188:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:32:18,188:INFO:PyCaret required dependencies:
2022-08-11 20:32:18,188:INFO:                 pip: 22.1.2
2022-08-11 20:32:18,188:INFO:          setuptools: 61.2.0
2022-08-11 20:32:18,189:INFO:             pycaret: 3.0.0rc3
2022-08-11 20:32:18,189:INFO:             IPython: 8.4.0
2022-08-11 20:32:18,189:INFO:          ipywidgets: 7.6.5
2022-08-11 20:32:18,189:INFO:                tqdm: 4.64.0
2022-08-11 20:32:18,189:INFO:               numpy: 1.22.4
2022-08-11 20:32:18,189:INFO:              pandas: 1.4.3
2022-08-11 20:32:18,189:INFO:              jinja2: 3.0.3
2022-08-11 20:32:18,189:INFO:               scipy: 1.5.4
2022-08-11 20:32:18,189:INFO:              joblib: 1.1.0
2022-08-11 20:32:18,190:INFO:             sklearn: 1.1.1
2022-08-11 20:32:18,190:INFO:                pyod: 1.0.4
2022-08-11 20:32:18,190:INFO:            imblearn: 0.9.1
2022-08-11 20:32:18,190:INFO:   category_encoders: 2.5.0
2022-08-11 20:32:18,190:INFO:            lightgbm: 3.2.1
2022-08-11 20:32:18,191:INFO:               numba: 0.55.2
2022-08-11 20:32:18,191:INFO:            requests: 2.28.1
2022-08-11 20:32:18,191:INFO:          matplotlib: 3.5.1
2022-08-11 20:32:18,191:INFO:          scikitplot: 0.3.7
2022-08-11 20:32:18,191:INFO:         yellowbrick: 1.4
2022-08-11 20:32:18,191:INFO:              plotly: 5.9.0
2022-08-11 20:32:18,191:INFO:             kaleido: 0.2.1
2022-08-11 20:32:18,191:INFO:         statsmodels: 0.13.2
2022-08-11 20:32:18,191:INFO:              sktime: 0.13.0
2022-08-11 20:32:18,191:INFO:               tbats: 1.1.0
2022-08-11 20:32:18,191:INFO:            pmdarima: 1.8.5
2022-08-11 20:32:18,191:INFO:              psutil: 5.9.1
2022-08-11 20:32:18,191:INFO:PyCaret optional dependencies:
2022-08-11 20:32:18,194:INFO:                shap: Not installed
2022-08-11 20:32:18,194:INFO:           interpret: Not installed
2022-08-11 20:32:18,194:INFO:                umap: 0.5.3
2022-08-11 20:32:18,194:INFO:    pandas_profiling: 2.9.0
2022-08-11 20:32:18,194:INFO:  explainerdashboard: Not installed
2022-08-11 20:32:18,194:INFO:             autoviz: Not installed
2022-08-11 20:32:18,194:INFO:           fairlearn: Not installed
2022-08-11 20:32:18,194:INFO:             xgboost: 1.6.1
2022-08-11 20:32:18,194:INFO:            catboost: Not installed
2022-08-11 20:32:18,194:INFO:              kmodes: 0.12.1
2022-08-11 20:32:18,194:INFO:             mlxtend: 0.19.0
2022-08-11 20:32:18,194:INFO:       statsforecast: Not installed
2022-08-11 20:32:18,195:INFO:        tune_sklearn: Not installed
2022-08-11 20:32:18,195:INFO:                 ray: Not installed
2022-08-11 20:32:18,195:INFO:            hyperopt: Not installed
2022-08-11 20:32:18,195:INFO:              optuna: Not installed
2022-08-11 20:32:18,195:INFO:               skopt: Not installed
2022-08-11 20:32:18,195:INFO:              mlflow: 1.27.0
2022-08-11 20:32:18,195:INFO:              gradio: Not installed
2022-08-11 20:32:18,195:INFO:             fastapi: Not installed
2022-08-11 20:32:18,195:INFO:             uvicorn: Not installed
2022-08-11 20:32:18,195:INFO:              m2cgen: Not installed
2022-08-11 20:32:18,195:INFO:           evidently: Not installed
2022-08-11 20:32:18,195:INFO:                nltk: 3.7
2022-08-11 20:32:18,195:INFO:            pyLDAvis: 3.2.2
2022-08-11 20:32:18,195:INFO:              gensim: 3.8.3
2022-08-11 20:32:18,195:INFO:               spacy: 2.3.7
2022-08-11 20:32:18,195:INFO:           wordcloud: 1.8.2.2
2022-08-11 20:32:18,195:INFO:            textblob: 0.17.1
2022-08-11 20:32:18,195:INFO:               fugue: Not installed
2022-08-11 20:32:18,195:INFO:           streamlit: Not installed
2022-08-11 20:32:18,195:INFO:             prophet: Not installed
2022-08-11 20:32:18,195:INFO:None
2022-08-11 20:32:18,195:INFO:Set up data.
2022-08-11 20:32:18,269:INFO:Set up train/test split.
2022-08-11 20:35:53,832:INFO:PyCaret ClassificationExperiment
2022-08-11 20:35:53,832:INFO:Logging name: clf-default-name
2022-08-11 20:35:53,832:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-08-11 20:35:53,832:INFO:version 3.0.0.rc3
2022-08-11 20:35:53,833:INFO:Initializing setup()
2022-08-11 20:35:53,833:INFO:self.USI: 74b7
2022-08-11 20:35:53,833:INFO:self.variable_keys: {'exp_name_log', 'html_param', 'memory', 'exp_id', 'logging_param', '_is_multiclass', '_all_metrics', 'y', '_all_models_internal', 'data', '_gpu_n_jobs_param', 'seed', 'y_train', '_all_models', 'fold_shuffle_param', 'idx', 'n_jobs_param', 'target_param', 'y_test', 'X_train', 'display_container', 'fold_groups_param', 'master_model_container', 'pipeline', 'X_test', '_available_plots', 'log_plots_param', 'USI', 'fix_imbalance', '_ml_usecase', 'X', 'gpu_param', 'fold_generator', 'variable_keys'}
2022-08-11 20:35:53,833:INFO:Checking environment
2022-08-11 20:35:53,833:INFO:python_version: 3.8.8
2022-08-11 20:35:53,834:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 20:35:53,834:INFO:machine: x86_64
2022-08-11 20:35:53,834:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:35:53,834:INFO:Memory: svmem(total=34359738368, available=5359149056, percent=84.4, used=3062534144, free=2696159232, active=2669309952, inactive=1895641088, wired=393224192)
2022-08-11 20:35:53,834:INFO:Physical Core: 10
2022-08-11 20:35:53,834:INFO:Logical Core: 10
2022-08-11 20:35:53,834:INFO:Checking libraries
2022-08-11 20:35:53,834:INFO:System:
2022-08-11 20:35:53,834:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 20:35:53,835:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 20:35:53,835:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:35:53,835:INFO:PyCaret required dependencies:
2022-08-11 20:35:53,836:INFO:                 pip: 22.1.2
2022-08-11 20:35:53,836:INFO:          setuptools: 61.2.0
2022-08-11 20:35:53,836:INFO:             pycaret: 3.0.0rc3
2022-08-11 20:35:53,836:INFO:             IPython: 8.4.0
2022-08-11 20:35:53,836:INFO:          ipywidgets: 7.6.5
2022-08-11 20:35:53,836:INFO:                tqdm: 4.64.0
2022-08-11 20:35:53,836:INFO:               numpy: 1.22.4
2022-08-11 20:35:53,836:INFO:              pandas: 1.4.3
2022-08-11 20:35:53,837:INFO:              jinja2: 3.0.3
2022-08-11 20:35:53,837:INFO:               scipy: 1.5.4
2022-08-11 20:35:53,837:INFO:              joblib: 1.1.0
2022-08-11 20:35:53,837:INFO:             sklearn: 1.1.1
2022-08-11 20:35:53,837:INFO:                pyod: 1.0.4
2022-08-11 20:35:53,837:INFO:            imblearn: 0.9.1
2022-08-11 20:35:53,837:INFO:   category_encoders: 2.5.0
2022-08-11 20:35:53,837:INFO:            lightgbm: 3.2.1
2022-08-11 20:35:53,837:INFO:               numba: 0.55.2
2022-08-11 20:35:53,837:INFO:            requests: 2.28.1
2022-08-11 20:35:53,837:INFO:          matplotlib: 3.5.1
2022-08-11 20:35:53,838:INFO:          scikitplot: 0.3.7
2022-08-11 20:35:53,839:INFO:         yellowbrick: 1.4
2022-08-11 20:35:53,839:INFO:              plotly: 5.9.0
2022-08-11 20:35:53,839:INFO:             kaleido: 0.2.1
2022-08-11 20:35:53,839:INFO:         statsmodels: 0.13.2
2022-08-11 20:35:53,839:INFO:              sktime: 0.13.0
2022-08-11 20:35:53,839:INFO:               tbats: 1.1.0
2022-08-11 20:35:53,839:INFO:            pmdarima: 1.8.5
2022-08-11 20:35:53,839:INFO:              psutil: 5.9.1
2022-08-11 20:35:53,839:INFO:PyCaret optional dependencies:
2022-08-11 20:35:53,839:INFO:                shap: Not installed
2022-08-11 20:35:53,839:INFO:           interpret: Not installed
2022-08-11 20:35:53,840:INFO:                umap: 0.5.3
2022-08-11 20:35:53,840:INFO:    pandas_profiling: 2.9.0
2022-08-11 20:35:53,840:INFO:  explainerdashboard: Not installed
2022-08-11 20:35:53,840:INFO:             autoviz: Not installed
2022-08-11 20:35:53,840:INFO:           fairlearn: Not installed
2022-08-11 20:35:53,840:INFO:             xgboost: 1.6.1
2022-08-11 20:35:53,840:INFO:            catboost: Not installed
2022-08-11 20:35:53,840:INFO:              kmodes: 0.12.1
2022-08-11 20:35:53,840:INFO:             mlxtend: 0.19.0
2022-08-11 20:35:53,840:INFO:       statsforecast: Not installed
2022-08-11 20:35:53,841:INFO:        tune_sklearn: Not installed
2022-08-11 20:35:53,841:INFO:                 ray: Not installed
2022-08-11 20:35:53,841:INFO:            hyperopt: Not installed
2022-08-11 20:35:53,841:INFO:              optuna: Not installed
2022-08-11 20:35:53,841:INFO:               skopt: Not installed
2022-08-11 20:35:53,841:INFO:              mlflow: 1.27.0
2022-08-11 20:35:53,841:INFO:              gradio: Not installed
2022-08-11 20:35:53,841:INFO:             fastapi: Not installed
2022-08-11 20:35:53,841:INFO:             uvicorn: Not installed
2022-08-11 20:35:53,842:INFO:              m2cgen: Not installed
2022-08-11 20:35:53,842:INFO:           evidently: Not installed
2022-08-11 20:35:53,842:INFO:                nltk: 3.7
2022-08-11 20:35:53,843:INFO:            pyLDAvis: 3.2.2
2022-08-11 20:35:53,843:INFO:              gensim: 3.8.3
2022-08-11 20:35:53,843:INFO:               spacy: 2.3.7
2022-08-11 20:35:53,843:INFO:           wordcloud: 1.8.2.2
2022-08-11 20:35:53,843:INFO:            textblob: 0.17.1
2022-08-11 20:35:53,843:INFO:               fugue: Not installed
2022-08-11 20:35:53,843:INFO:           streamlit: Not installed
2022-08-11 20:35:53,843:INFO:             prophet: Not installed
2022-08-11 20:35:53,843:INFO:None
2022-08-11 20:35:53,843:INFO:Set up data.
2022-08-11 20:35:53,907:INFO:Set up train/test split.
2022-08-11 20:38:32,415:INFO:PyCaret ClassificationExperiment
2022-08-11 20:38:32,415:INFO:Logging name: clf-default-name
2022-08-11 20:38:32,415:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-08-11 20:38:32,415:INFO:version 3.0.0.rc3
2022-08-11 20:38:32,415:INFO:Initializing setup()
2022-08-11 20:38:32,415:INFO:self.USI: 16f4
2022-08-11 20:38:32,416:INFO:self.variable_keys: {'exp_name_log', 'html_param', 'memory', 'exp_id', 'logging_param', '_is_multiclass', '_all_metrics', 'y', '_all_models_internal', 'data', '_gpu_n_jobs_param', 'seed', 'y_train', '_all_models', 'fold_shuffle_param', 'idx', 'n_jobs_param', 'target_param', 'y_test', 'X_train', 'display_container', 'fold_groups_param', 'master_model_container', 'pipeline', 'X_test', '_available_plots', 'log_plots_param', 'USI', 'fix_imbalance', '_ml_usecase', 'X', 'gpu_param', 'fold_generator', 'variable_keys'}
2022-08-11 20:38:32,416:INFO:Checking environment
2022-08-11 20:38:32,416:INFO:python_version: 3.8.8
2022-08-11 20:38:32,416:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 20:38:32,416:INFO:machine: x86_64
2022-08-11 20:38:32,416:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:38:32,416:INFO:Memory: svmem(total=34359738368, available=5335912448, percent=84.5, used=3085983744, free=2645274624, active=2694946816, inactive=1922871296, wired=391036928)
2022-08-11 20:38:32,417:INFO:Physical Core: 10
2022-08-11 20:38:32,417:INFO:Logical Core: 10
2022-08-11 20:38:32,417:INFO:Checking libraries
2022-08-11 20:38:32,417:INFO:System:
2022-08-11 20:38:32,417:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 20:38:32,417:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 20:38:32,417:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:38:32,417:INFO:PyCaret required dependencies:
2022-08-11 20:38:32,418:INFO:                 pip: 22.1.2
2022-08-11 20:38:32,418:INFO:          setuptools: 61.2.0
2022-08-11 20:38:32,418:INFO:             pycaret: 3.0.0rc3
2022-08-11 20:38:32,418:INFO:             IPython: 8.4.0
2022-08-11 20:38:32,418:INFO:          ipywidgets: 7.6.5
2022-08-11 20:38:32,418:INFO:                tqdm: 4.64.0
2022-08-11 20:38:32,418:INFO:               numpy: 1.22.4
2022-08-11 20:38:32,418:INFO:              pandas: 1.4.3
2022-08-11 20:38:32,418:INFO:              jinja2: 3.0.3
2022-08-11 20:38:32,418:INFO:               scipy: 1.5.4
2022-08-11 20:38:32,418:INFO:              joblib: 1.1.0
2022-08-11 20:38:32,418:INFO:             sklearn: 1.1.1
2022-08-11 20:38:32,419:INFO:                pyod: 1.0.4
2022-08-11 20:38:32,419:INFO:            imblearn: 0.9.1
2022-08-11 20:38:32,419:INFO:   category_encoders: 2.5.0
2022-08-11 20:38:32,419:INFO:            lightgbm: 3.2.1
2022-08-11 20:38:32,419:INFO:               numba: 0.55.2
2022-08-11 20:38:32,419:INFO:            requests: 2.28.1
2022-08-11 20:38:32,419:INFO:          matplotlib: 3.5.1
2022-08-11 20:38:32,419:INFO:          scikitplot: 0.3.7
2022-08-11 20:38:32,419:INFO:         yellowbrick: 1.4
2022-08-11 20:38:32,419:INFO:              plotly: 5.9.0
2022-08-11 20:38:32,419:INFO:             kaleido: 0.2.1
2022-08-11 20:38:32,419:INFO:         statsmodels: 0.13.2
2022-08-11 20:38:32,419:INFO:              sktime: 0.13.0
2022-08-11 20:38:32,420:INFO:               tbats: 1.1.0
2022-08-11 20:38:32,420:INFO:            pmdarima: 1.8.5
2022-08-11 20:38:32,420:INFO:              psutil: 5.9.1
2022-08-11 20:38:32,420:INFO:PyCaret optional dependencies:
2022-08-11 20:38:32,420:INFO:                shap: Not installed
2022-08-11 20:38:32,420:INFO:           interpret: Not installed
2022-08-11 20:38:32,420:INFO:                umap: 0.5.3
2022-08-11 20:38:32,420:INFO:    pandas_profiling: 2.9.0
2022-08-11 20:38:32,420:INFO:  explainerdashboard: Not installed
2022-08-11 20:38:32,421:INFO:             autoviz: Not installed
2022-08-11 20:38:32,421:INFO:           fairlearn: Not installed
2022-08-11 20:38:32,421:INFO:             xgboost: 1.6.1
2022-08-11 20:38:32,421:INFO:            catboost: Not installed
2022-08-11 20:38:32,424:INFO:              kmodes: 0.12.1
2022-08-11 20:38:32,424:INFO:             mlxtend: 0.19.0
2022-08-11 20:38:32,425:INFO:       statsforecast: Not installed
2022-08-11 20:38:32,425:INFO:        tune_sklearn: Not installed
2022-08-11 20:38:32,425:INFO:                 ray: Not installed
2022-08-11 20:38:32,425:INFO:            hyperopt: Not installed
2022-08-11 20:38:32,425:INFO:              optuna: Not installed
2022-08-11 20:38:32,425:INFO:               skopt: Not installed
2022-08-11 20:38:32,425:INFO:              mlflow: 1.27.0
2022-08-11 20:38:32,425:INFO:              gradio: Not installed
2022-08-11 20:38:32,425:INFO:             fastapi: Not installed
2022-08-11 20:38:32,425:INFO:             uvicorn: Not installed
2022-08-11 20:38:32,425:INFO:              m2cgen: Not installed
2022-08-11 20:38:32,425:INFO:           evidently: Not installed
2022-08-11 20:38:32,425:INFO:                nltk: 3.7
2022-08-11 20:38:32,425:INFO:            pyLDAvis: 3.2.2
2022-08-11 20:38:32,425:INFO:              gensim: 3.8.3
2022-08-11 20:38:32,425:INFO:               spacy: 2.3.7
2022-08-11 20:38:32,425:INFO:           wordcloud: 1.8.2.2
2022-08-11 20:38:32,425:INFO:            textblob: 0.17.1
2022-08-11 20:38:32,425:INFO:               fugue: Not installed
2022-08-11 20:38:32,425:INFO:           streamlit: Not installed
2022-08-11 20:38:32,426:INFO:             prophet: Not installed
2022-08-11 20:38:32,426:INFO:None
2022-08-11 20:38:32,426:INFO:Set up data.
2022-08-11 20:38:32,494:INFO:Set up train/test split.
2022-08-11 20:43:48,124:INFO:PyCaret ClassificationExperiment
2022-08-11 20:43:48,125:INFO:Logging name: clf-default-name
2022-08-11 20:43:48,126:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-08-11 20:43:48,128:INFO:version 3.0.0.rc3
2022-08-11 20:43:48,128:INFO:Initializing setup()
2022-08-11 20:43:48,128:INFO:self.USI: dd29
2022-08-11 20:43:48,128:INFO:self.variable_keys: {'exp_name_log', 'html_param', 'memory', 'exp_id', 'logging_param', '_is_multiclass', '_all_metrics', 'y', '_all_models_internal', 'data', '_gpu_n_jobs_param', 'seed', 'y_train', '_all_models', 'fold_shuffle_param', 'idx', 'n_jobs_param', 'target_param', 'y_test', 'X_train', 'display_container', 'fold_groups_param', 'master_model_container', 'pipeline', 'X_test', '_available_plots', 'log_plots_param', 'USI', 'fix_imbalance', '_ml_usecase', 'X', 'gpu_param', 'fold_generator', 'variable_keys'}
2022-08-11 20:43:48,128:INFO:Checking environment
2022-08-11 20:43:48,128:INFO:python_version: 3.8.8
2022-08-11 20:43:48,128:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 20:43:48,129:INFO:machine: x86_64
2022-08-11 20:43:48,129:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:43:48,129:INFO:Memory: svmem(total=34359738368, available=5283434496, percent=84.6, used=3138576384, free=2531328000, active=2741792768, inactive=1983447040, wired=396783616)
2022-08-11 20:43:48,129:INFO:Physical Core: 10
2022-08-11 20:43:48,129:INFO:Logical Core: 10
2022-08-11 20:43:48,129:INFO:Checking libraries
2022-08-11 20:43:48,129:INFO:System:
2022-08-11 20:43:48,129:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 20:43:48,129:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 20:43:48,129:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:43:48,130:INFO:PyCaret required dependencies:
2022-08-11 20:43:48,130:INFO:                 pip: 22.1.2
2022-08-11 20:43:48,130:INFO:          setuptools: 61.2.0
2022-08-11 20:43:48,130:INFO:             pycaret: 3.0.0rc3
2022-08-11 20:43:48,130:INFO:             IPython: 8.4.0
2022-08-11 20:43:48,130:INFO:          ipywidgets: 7.6.5
2022-08-11 20:43:48,130:INFO:                tqdm: 4.64.0
2022-08-11 20:43:48,130:INFO:               numpy: 1.22.4
2022-08-11 20:43:48,131:INFO:              pandas: 1.4.3
2022-08-11 20:43:48,131:INFO:              jinja2: 3.0.3
2022-08-11 20:43:48,131:INFO:               scipy: 1.5.4
2022-08-11 20:43:48,131:INFO:              joblib: 1.1.0
2022-08-11 20:43:48,131:INFO:             sklearn: 1.1.1
2022-08-11 20:43:48,131:INFO:                pyod: 1.0.4
2022-08-11 20:43:48,131:INFO:            imblearn: 0.9.1
2022-08-11 20:43:48,131:INFO:   category_encoders: 2.5.0
2022-08-11 20:43:48,131:INFO:            lightgbm: 3.2.1
2022-08-11 20:43:48,131:INFO:               numba: 0.55.2
2022-08-11 20:43:48,132:INFO:            requests: 2.28.1
2022-08-11 20:43:48,132:INFO:          matplotlib: 3.5.1
2022-08-11 20:43:48,132:INFO:          scikitplot: 0.3.7
2022-08-11 20:43:48,132:INFO:         yellowbrick: 1.4
2022-08-11 20:43:48,132:INFO:              plotly: 5.9.0
2022-08-11 20:43:48,132:INFO:             kaleido: 0.2.1
2022-08-11 20:43:48,132:INFO:         statsmodels: 0.13.2
2022-08-11 20:43:48,132:INFO:              sktime: 0.13.0
2022-08-11 20:43:48,132:INFO:               tbats: 1.1.0
2022-08-11 20:43:48,132:INFO:            pmdarima: 1.8.5
2022-08-11 20:43:48,132:INFO:              psutil: 5.9.1
2022-08-11 20:43:48,132:INFO:PyCaret optional dependencies:
2022-08-11 20:43:48,132:INFO:                shap: Not installed
2022-08-11 20:43:48,133:INFO:           interpret: Not installed
2022-08-11 20:43:48,133:INFO:                umap: 0.5.3
2022-08-11 20:43:48,133:INFO:    pandas_profiling: 2.9.0
2022-08-11 20:43:48,133:INFO:  explainerdashboard: Not installed
2022-08-11 20:43:48,133:INFO:             autoviz: Not installed
2022-08-11 20:43:48,133:INFO:           fairlearn: Not installed
2022-08-11 20:43:48,133:INFO:             xgboost: 1.6.1
2022-08-11 20:43:48,133:INFO:            catboost: Not installed
2022-08-11 20:43:48,133:INFO:              kmodes: 0.12.1
2022-08-11 20:43:48,133:INFO:             mlxtend: 0.19.0
2022-08-11 20:43:48,133:INFO:       statsforecast: Not installed
2022-08-11 20:43:48,133:INFO:        tune_sklearn: Not installed
2022-08-11 20:43:48,134:INFO:                 ray: Not installed
2022-08-11 20:43:48,134:INFO:            hyperopt: Not installed
2022-08-11 20:43:48,134:INFO:              optuna: Not installed
2022-08-11 20:43:48,134:INFO:               skopt: Not installed
2022-08-11 20:43:48,134:INFO:              mlflow: 1.27.0
2022-08-11 20:43:48,134:INFO:              gradio: Not installed
2022-08-11 20:43:48,134:INFO:             fastapi: Not installed
2022-08-11 20:43:48,134:INFO:             uvicorn: Not installed
2022-08-11 20:43:48,135:INFO:              m2cgen: Not installed
2022-08-11 20:43:48,135:INFO:           evidently: Not installed
2022-08-11 20:43:48,135:INFO:                nltk: 3.7
2022-08-11 20:43:48,135:INFO:            pyLDAvis: 3.2.2
2022-08-11 20:43:48,135:INFO:              gensim: 3.8.3
2022-08-11 20:43:48,135:INFO:               spacy: 2.3.7
2022-08-11 20:43:48,135:INFO:           wordcloud: 1.8.2.2
2022-08-11 20:43:48,135:INFO:            textblob: 0.17.1
2022-08-11 20:43:48,135:INFO:               fugue: Not installed
2022-08-11 20:43:48,135:INFO:           streamlit: Not installed
2022-08-11 20:43:48,135:INFO:             prophet: Not installed
2022-08-11 20:43:48,135:INFO:None
2022-08-11 20:43:48,136:INFO:Set up data.
2022-08-11 20:43:48,210:INFO:Set up train/test split.
2022-08-11 20:44:12,953:INFO:PyCaret RegressionExperiment
2022-08-11 20:44:12,957:INFO:Logging name: reg-default-name
2022-08-11 20:44:12,957:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 20:44:12,957:INFO:version 3.0.0.rc3
2022-08-11 20:44:12,957:INFO:Initializing setup()
2022-08-11 20:44:12,958:INFO:self.USI: f196
2022-08-11 20:44:12,958:INFO:self.variable_keys: {'exp_name_log', 'html_param', 'memory', 'exp_id', 'logging_param', '_all_metrics', 'y', '_all_models_internal', 'data', '_gpu_n_jobs_param', 'seed', 'y_train', '_all_models', 'fold_shuffle_param', 'idx', 'n_jobs_param', 'target_param', 'y_test', 'X_train', 'display_container', 'fold_groups_param', 'master_model_container', 'pipeline', 'X_test', 'transform_target_method_param', '_available_plots', 'log_plots_param', 'USI', '_ml_usecase', 'X', 'transform_target_param', 'gpu_param', 'fold_generator', 'variable_keys'}
2022-08-11 20:44:12,958:INFO:Checking environment
2022-08-11 20:44:12,961:INFO:python_version: 3.8.8
2022-08-11 20:44:12,961:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 20:44:12,961:INFO:machine: x86_64
2022-08-11 20:44:12,961:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:44:12,961:INFO:Memory: svmem(total=34359738368, available=5260382208, percent=84.7, used=3161477120, free=2495270912, active=2770735104, inactive=1996365824, wired=390742016)
2022-08-11 20:44:12,962:INFO:Physical Core: 10
2022-08-11 20:44:12,962:INFO:Logical Core: 10
2022-08-11 20:44:12,962:INFO:Checking libraries
2022-08-11 20:44:12,962:INFO:System:
2022-08-11 20:44:12,962:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 20:44:12,962:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 20:44:12,962:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 20:44:12,962:INFO:PyCaret required dependencies:
2022-08-11 20:44:12,962:INFO:                 pip: 22.1.2
2022-08-11 20:44:12,962:INFO:          setuptools: 61.2.0
2022-08-11 20:44:12,962:INFO:             pycaret: 3.0.0rc3
2022-08-11 20:44:12,963:INFO:             IPython: 8.4.0
2022-08-11 20:44:12,963:INFO:          ipywidgets: 7.6.5
2022-08-11 20:44:12,963:INFO:                tqdm: 4.64.0
2022-08-11 20:44:12,963:INFO:               numpy: 1.22.4
2022-08-11 20:44:12,964:INFO:              pandas: 1.4.3
2022-08-11 20:44:12,964:INFO:              jinja2: 3.0.3
2022-08-11 20:44:12,964:INFO:               scipy: 1.5.4
2022-08-11 20:44:12,964:INFO:              joblib: 1.1.0
2022-08-11 20:44:12,964:INFO:             sklearn: 1.1.1
2022-08-11 20:44:12,964:INFO:                pyod: 1.0.4
2022-08-11 20:44:12,964:INFO:            imblearn: 0.9.1
2022-08-11 20:44:12,964:INFO:   category_encoders: 2.5.0
2022-08-11 20:44:12,964:INFO:            lightgbm: 3.2.1
2022-08-11 20:44:12,964:INFO:               numba: 0.55.2
2022-08-11 20:44:12,964:INFO:            requests: 2.28.1
2022-08-11 20:44:12,965:INFO:          matplotlib: 3.5.1
2022-08-11 20:44:12,965:INFO:          scikitplot: 0.3.7
2022-08-11 20:44:12,965:INFO:         yellowbrick: 1.4
2022-08-11 20:44:12,965:INFO:              plotly: 5.9.0
2022-08-11 20:44:12,965:INFO:             kaleido: 0.2.1
2022-08-11 20:44:12,966:INFO:         statsmodels: 0.13.2
2022-08-11 20:44:12,966:INFO:              sktime: 0.13.0
2022-08-11 20:44:12,966:INFO:               tbats: 1.1.0
2022-08-11 20:44:12,966:INFO:            pmdarima: 1.8.5
2022-08-11 20:44:12,966:INFO:              psutil: 5.9.1
2022-08-11 20:44:12,966:INFO:PyCaret optional dependencies:
2022-08-11 20:44:12,966:INFO:                shap: Not installed
2022-08-11 20:44:12,966:INFO:           interpret: Not installed
2022-08-11 20:44:12,966:INFO:                umap: 0.5.3
2022-08-11 20:44:12,966:INFO:    pandas_profiling: 2.9.0
2022-08-11 20:44:12,966:INFO:  explainerdashboard: Not installed
2022-08-11 20:44:12,966:INFO:             autoviz: Not installed
2022-08-11 20:44:12,966:INFO:           fairlearn: Not installed
2022-08-11 20:44:12,966:INFO:             xgboost: 1.6.1
2022-08-11 20:44:12,966:INFO:            catboost: Not installed
2022-08-11 20:44:12,966:INFO:              kmodes: 0.12.1
2022-08-11 20:44:12,966:INFO:             mlxtend: 0.19.0
2022-08-11 20:44:12,966:INFO:       statsforecast: Not installed
2022-08-11 20:44:12,966:INFO:        tune_sklearn: Not installed
2022-08-11 20:44:12,966:INFO:                 ray: Not installed
2022-08-11 20:44:12,967:INFO:            hyperopt: Not installed
2022-08-11 20:44:12,967:INFO:              optuna: Not installed
2022-08-11 20:44:12,967:INFO:               skopt: Not installed
2022-08-11 20:44:12,967:INFO:              mlflow: 1.27.0
2022-08-11 20:44:12,967:INFO:              gradio: Not installed
2022-08-11 20:44:12,967:INFO:             fastapi: Not installed
2022-08-11 20:44:12,967:INFO:             uvicorn: Not installed
2022-08-11 20:44:12,967:INFO:              m2cgen: Not installed
2022-08-11 20:44:12,967:INFO:           evidently: Not installed
2022-08-11 20:44:12,967:INFO:                nltk: 3.7
2022-08-11 20:44:12,967:INFO:            pyLDAvis: 3.2.2
2022-08-11 20:44:12,967:INFO:              gensim: 3.8.3
2022-08-11 20:44:12,967:INFO:               spacy: 2.3.7
2022-08-11 20:44:12,967:INFO:           wordcloud: 1.8.2.2
2022-08-11 20:44:12,967:INFO:            textblob: 0.17.1
2022-08-11 20:44:12,967:INFO:               fugue: Not installed
2022-08-11 20:44:12,967:INFO:           streamlit: Not installed
2022-08-11 20:44:12,967:INFO:             prophet: Not installed
2022-08-11 20:44:12,967:INFO:None
2022-08-11 20:44:12,967:INFO:Set up data.
2022-08-11 20:44:13,047:INFO:Set up train/test split.
2022-08-11 20:44:13,083:INFO:Set up folding strategy.
2022-08-11 20:44:13,083:INFO:Assigning column types.
2022-08-11 20:44:13,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 20:44:13,090:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 20:44:13,095:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 20:44:13,099:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 20:44:13,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:13,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:13,199:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:14,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:14,493:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,498:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,559:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,600:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,605:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:14,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:14,608:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 20:44:14,612:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,616:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,673:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,714:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:14,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:14,720:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,724:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,781:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,821:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,822:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:14,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:14,824:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 20:44:14,832:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,889:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,931:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:14,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:14,942:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 20:44:14,999:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,041:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,043:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 20:44:15,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,151:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,151:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,219:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,261:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,261:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,264:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 20:44:15,333:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,376:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 20:44:15,487:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,490:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 20:44:15,596:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,704:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:15,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:15,707:INFO:Preparing preprocessing pipeline...
2022-08-11 20:44:15,708:INFO:Set up simple imputation.
2022-08-11 20:44:15,736:INFO:Set up encoding of ordinal features.
2022-08-11 20:44:15,738:INFO:Set up encoding of categorical features.
2022-08-11 20:44:15,738:INFO:Set up variance threshold.
2022-08-11 20:44:17,595:INFO:Finished creating preprocessing pipeline.
2022-08-11 20:44:17,602:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['index', 'X_01', 'X_02', 'X_03',
                                             'X_04', 'X_05', 'X_06', 'X_07',
                                             'X_08', 'X_09', 'X_10', 'X_11',
                                             'X_12', 'X_13', 'X_14', 'X_15',
                                             'X_16', 'X_17', 'X_18', 'X_19',
                                             'X_20', 'X_21', 'X_22', 'X_23',
                                             'X_24', 'X_25', 'X_26', 'X...
                                             'X_22', 'X_24', 'X_25', 'X_26',
                                             'X_27', 'X_28', 'X_29', 'X_30',
                                             'X_31', 'X_32', ...],
                                    transformer=LeaveOneOutEncoder(cols=['ID'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-08-11 20:44:17,602:INFO:Creating final display dataframe.
2022-08-11 20:44:23,624:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target              Y_05
2                Target type        Regression
3                 Data shape       (39607, 67)
4           Train data shape       (27724, 67)
5            Test data shape       (11883, 67)
6           Ordinal features                 1
7           Numeric features                70
8       Categorical features                 1
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              f196
2022-08-11 20:44:23,738:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:23,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:23,846:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 20:44:23,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 20:44:23,863:INFO:setup() successfully completed in 10.91s...............
2022-08-11 20:44:42,682:INFO:Initializing compare_models()
2022-08-11 20:44:42,683:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 20:44:42,683:INFO:Checking exceptions
2022-08-11 20:44:42,706:INFO:Preparing display monitor
2022-08-11 20:44:43,021:INFO:Initializing Linear Regression
2022-08-11 20:44:43,022:INFO:Total runtime is 6.0478846232096355e-06 minutes
2022-08-11 20:44:43,024:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:43,025:INFO:Initializing create_model()
2022-08-11 20:44:43,025:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:43,025:INFO:Checking exceptions
2022-08-11 20:44:43,042:INFO:Importing libraries
2022-08-11 20:44:43,042:INFO:Copying training dataset
2022-08-11 20:44:43,058:INFO:Defining folds
2022-08-11 20:44:43,058:INFO:Declaring metric variables
2022-08-11 20:44:43,061:INFO:Importing untrained model
2022-08-11 20:44:43,063:INFO:Linear Regression Imported successfully
2022-08-11 20:44:43,067:INFO:Starting cross validation
2022-08-11 20:44:43,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:47,760:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:47,809:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:47,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:47,912:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:47,937:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:48,048:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:48,058:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:48,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:48,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:48,125:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:49,528:INFO:Calculating mean and std
2022-08-11 20:44:49,530:INFO:Creating metrics dataframe
2022-08-11 20:44:49,534:INFO:Uploading results into container
2022-08-11 20:44:49,535:INFO:Uploading model into container now
2022-08-11 20:44:49,535:INFO:master_model_container: 1
2022-08-11 20:44:49,535:INFO:display_container: 2
2022-08-11 20:44:49,536:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1,
                 normalize='deprecated', positive=False)
2022-08-11 20:44:49,536:INFO:create_model() successfully completed......................................
2022-08-11 20:44:49,640:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:49,640:INFO:Creating metrics dataframe
2022-08-11 20:44:49,647:INFO:Initializing Lasso Regression
2022-08-11 20:44:49,647:INFO:Total runtime is 0.11042327086130778 minutes
2022-08-11 20:44:49,649:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:49,649:INFO:Initializing create_model()
2022-08-11 20:44:49,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:49,649:INFO:Checking exceptions
2022-08-11 20:44:49,661:INFO:Importing libraries
2022-08-11 20:44:49,662:INFO:Copying training dataset
2022-08-11 20:44:49,672:INFO:Defining folds
2022-08-11 20:44:49,672:INFO:Declaring metric variables
2022-08-11 20:44:49,675:INFO:Importing untrained model
2022-08-11 20:44:49,677:INFO:Lasso Regression Imported successfully
2022-08-11 20:44:49,681:INFO:Starting cross validation
2022-08-11 20:44:49,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:50,349:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,355:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,356:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,364:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,366:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,387:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,421:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:50,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,093:INFO:Calculating mean and std
2022-08-11 20:44:51,095:INFO:Creating metrics dataframe
2022-08-11 20:44:51,099:INFO:Uploading results into container
2022-08-11 20:44:51,099:INFO:Uploading model into container now
2022-08-11 20:44:51,099:INFO:master_model_container: 2
2022-08-11 20:44:51,099:INFO:display_container: 2
2022-08-11 20:44:51,100:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize='deprecated', positive=False, precompute=False,
      random_state=123, selection='cyclic', tol=0.0001, warm_start=False)
2022-08-11 20:44:51,100:INFO:create_model() successfully completed......................................
2022-08-11 20:44:51,185:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:51,190:INFO:Creating metrics dataframe
2022-08-11 20:44:51,196:INFO:Initializing Ridge Regression
2022-08-11 20:44:51,196:INFO:Total runtime is 0.13624021609624226 minutes
2022-08-11 20:44:51,197:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:51,198:INFO:Initializing create_model()
2022-08-11 20:44:51,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:51,198:INFO:Checking exceptions
2022-08-11 20:44:51,205:INFO:Importing libraries
2022-08-11 20:44:51,206:INFO:Copying training dataset
2022-08-11 20:44:51,215:INFO:Defining folds
2022-08-11 20:44:51,216:INFO:Declaring metric variables
2022-08-11 20:44:51,218:INFO:Importing untrained model
2022-08-11 20:44:51,222:INFO:Ridge Regression Imported successfully
2022-08-11 20:44:51,227:INFO:Starting cross validation
2022-08-11 20:44:51,228:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:51,940:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,940:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,980:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:51,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:52,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:52,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:52,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:52,519:INFO:Calculating mean and std
2022-08-11 20:44:52,520:INFO:Creating metrics dataframe
2022-08-11 20:44:52,524:INFO:Uploading results into container
2022-08-11 20:44:52,524:INFO:Uploading model into container now
2022-08-11 20:44:52,525:INFO:master_model_container: 3
2022-08-11 20:44:52,525:INFO:display_container: 2
2022-08-11 20:44:52,525:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize='deprecated', positive=False, random_state=123, solver='auto',
      tol=0.001)
2022-08-11 20:44:52,525:INFO:create_model() successfully completed......................................
2022-08-11 20:44:52,613:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:52,613:INFO:Creating metrics dataframe
2022-08-11 20:44:52,620:INFO:Initializing Elastic Net
2022-08-11 20:44:52,620:INFO:Total runtime is 0.15997845331827798 minutes
2022-08-11 20:44:52,622:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:52,623:INFO:Initializing create_model()
2022-08-11 20:44:52,623:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:52,623:INFO:Checking exceptions
2022-08-11 20:44:52,627:INFO:Importing libraries
2022-08-11 20:44:52,627:INFO:Copying training dataset
2022-08-11 20:44:52,635:INFO:Defining folds
2022-08-11 20:44:52,635:INFO:Declaring metric variables
2022-08-11 20:44:52,638:INFO:Importing untrained model
2022-08-11 20:44:52,640:INFO:Elastic Net Imported successfully
2022-08-11 20:44:52,645:INFO:Starting cross validation
2022-08-11 20:44:52,646:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:53,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,332:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,343:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,356:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,378:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,405:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,443:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:53,916:INFO:Calculating mean and std
2022-08-11 20:44:53,918:INFO:Creating metrics dataframe
2022-08-11 20:44:53,921:INFO:Uploading results into container
2022-08-11 20:44:53,922:INFO:Uploading model into container now
2022-08-11 20:44:53,922:INFO:master_model_container: 4
2022-08-11 20:44:53,922:INFO:display_container: 2
2022-08-11 20:44:53,922:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize='deprecated', positive=False,
           precompute=False, random_state=123, selection='cyclic', tol=0.0001,
           warm_start=False)
2022-08-11 20:44:53,922:INFO:create_model() successfully completed......................................
2022-08-11 20:44:54,008:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:54,008:INFO:Creating metrics dataframe
2022-08-11 20:44:54,015:INFO:Initializing Least Angle Regression
2022-08-11 20:44:54,015:INFO:Total runtime is 0.18322643438975014 minutes
2022-08-11 20:44:54,017:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:54,018:INFO:Initializing create_model()
2022-08-11 20:44:54,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:54,018:INFO:Checking exceptions
2022-08-11 20:44:54,022:INFO:Importing libraries
2022-08-11 20:44:54,022:INFO:Copying training dataset
2022-08-11 20:44:54,033:INFO:Defining folds
2022-08-11 20:44:54,033:INFO:Declaring metric variables
2022-08-11 20:44:54,036:INFO:Importing untrained model
2022-08-11 20:44:54,038:INFO:Least Angle Regression Imported successfully
2022-08-11 20:44:54,043:INFO:Starting cross validation
2022-08-11 20:44:54,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:54,624:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,649:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,654:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,782:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,798:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,803:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,814:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,835:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,855:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,855:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,856:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:54,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:54,919:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:55,013:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:55,033:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:55,401:INFO:Calculating mean and std
2022-08-11 20:44:55,403:INFO:Creating metrics dataframe
2022-08-11 20:44:55,407:INFO:Uploading results into container
2022-08-11 20:44:55,407:INFO:Uploading model into container now
2022-08-11 20:44:55,408:INFO:master_model_container: 5
2022-08-11 20:44:55,408:INFO:display_container: 2
2022-08-11 20:44:55,408:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=123, verbose=False)
2022-08-11 20:44:55,408:INFO:create_model() successfully completed......................................
2022-08-11 20:44:55,491:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:55,491:INFO:Creating metrics dataframe
2022-08-11 20:44:55,497:INFO:Initializing Lasso Least Angle Regression
2022-08-11 20:44:55,497:INFO:Total runtime is 0.20792971849441527 minutes
2022-08-11 20:44:55,499:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:55,499:INFO:Initializing create_model()
2022-08-11 20:44:55,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:55,499:INFO:Checking exceptions
2022-08-11 20:44:55,505:INFO:Importing libraries
2022-08-11 20:44:55,505:INFO:Copying training dataset
2022-08-11 20:44:55,514:INFO:Defining folds
2022-08-11 20:44:55,514:INFO:Declaring metric variables
2022-08-11 20:44:55,516:INFO:Importing untrained model
2022-08-11 20:44:55,519:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 20:44:55,522:INFO:Starting cross validation
2022-08-11 20:44:55,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:56,100:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,112:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,114:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,118:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,131:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,134:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,234:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,328:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,341:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,366:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,381:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,436:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,450:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,475:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 20:44:56,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:56,860:INFO:Calculating mean and std
2022-08-11 20:44:56,861:INFO:Creating metrics dataframe
2022-08-11 20:44:56,864:INFO:Uploading results into container
2022-08-11 20:44:56,865:INFO:Uploading model into container now
2022-08-11 20:44:56,865:INFO:master_model_container: 6
2022-08-11 20:44:56,865:INFO:display_container: 2
2022-08-11 20:44:56,866:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=123, verbose=False)
2022-08-11 20:44:56,866:INFO:create_model() successfully completed......................................
2022-08-11 20:44:56,952:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:56,952:INFO:Creating metrics dataframe
2022-08-11 20:44:56,959:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 20:44:56,959:INFO:Total runtime is 0.23229330380757648 minutes
2022-08-11 20:44:56,961:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:56,961:INFO:Initializing create_model()
2022-08-11 20:44:56,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:56,961:INFO:Checking exceptions
2022-08-11 20:44:56,967:INFO:Importing libraries
2022-08-11 20:44:56,967:INFO:Copying training dataset
2022-08-11 20:44:56,977:INFO:Defining folds
2022-08-11 20:44:56,977:INFO:Declaring metric variables
2022-08-11 20:44:56,979:INFO:Importing untrained model
2022-08-11 20:44:56,982:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 20:44:56,986:INFO:Starting cross validation
2022-08-11 20:44:56,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:57,587:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,606:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,624:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,638:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,640:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,654:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,669:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,673:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,764:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,780:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,788:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:57,866:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 20:44:57,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:58,280:INFO:Calculating mean and std
2022-08-11 20:44:58,282:INFO:Creating metrics dataframe
2022-08-11 20:44:58,286:INFO:Uploading results into container
2022-08-11 20:44:58,286:INFO:Uploading model into container now
2022-08-11 20:44:58,286:INFO:master_model_container: 7
2022-08-11 20:44:58,286:INFO:display_container: 2
2022-08-11 20:44:58,287:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2022-08-11 20:44:58,287:INFO:create_model() successfully completed......................................
2022-08-11 20:44:58,372:INFO:SubProcess create_model() end ==================================
2022-08-11 20:44:58,372:INFO:Creating metrics dataframe
2022-08-11 20:44:58,379:INFO:Initializing Bayesian Ridge
2022-08-11 20:44:58,379:INFO:Total runtime is 0.25596238374710084 minutes
2022-08-11 20:44:58,381:INFO:SubProcess create_model() called ==================================
2022-08-11 20:44:58,381:INFO:Initializing create_model()
2022-08-11 20:44:58,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:44:58,381:INFO:Checking exceptions
2022-08-11 20:44:58,386:INFO:Importing libraries
2022-08-11 20:44:58,386:INFO:Copying training dataset
2022-08-11 20:44:58,394:INFO:Defining folds
2022-08-11 20:44:58,394:INFO:Declaring metric variables
2022-08-11 20:44:58,396:INFO:Importing untrained model
2022-08-11 20:44:58,399:INFO:Bayesian Ridge Imported successfully
2022-08-11 20:44:58,403:INFO:Starting cross validation
2022-08-11 20:44:58,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:44:59,233:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,351:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,363:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,391:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,393:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,527:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,547:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:44:59,925:INFO:Calculating mean and std
2022-08-11 20:44:59,927:INFO:Creating metrics dataframe
2022-08-11 20:44:59,930:INFO:Uploading results into container
2022-08-11 20:44:59,931:INFO:Uploading model into container now
2022-08-11 20:44:59,931:INFO:master_model_container: 8
2022-08-11 20:44:59,931:INFO:display_container: 2
2022-08-11 20:44:59,932:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize='deprecated', tol=0.001, verbose=False)
2022-08-11 20:44:59,932:INFO:create_model() successfully completed......................................
2022-08-11 20:45:00,016:INFO:SubProcess create_model() end ==================================
2022-08-11 20:45:00,016:INFO:Creating metrics dataframe
2022-08-11 20:45:00,024:INFO:Initializing Passive Aggressive Regressor
2022-08-11 20:45:00,024:INFO:Total runtime is 0.2833805521329244 minutes
2022-08-11 20:45:00,026:INFO:SubProcess create_model() called ==================================
2022-08-11 20:45:00,026:INFO:Initializing create_model()
2022-08-11 20:45:00,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:45:00,026:INFO:Checking exceptions
2022-08-11 20:45:00,031:INFO:Importing libraries
2022-08-11 20:45:00,031:INFO:Copying training dataset
2022-08-11 20:45:00,039:INFO:Defining folds
2022-08-11 20:45:00,040:INFO:Declaring metric variables
2022-08-11 20:45:00,042:INFO:Importing untrained model
2022-08-11 20:45:00,044:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 20:45:00,049:INFO:Starting cross validation
2022-08-11 20:45:00,050:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:45:00,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:00,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:00,759:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:00,768:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:00,777:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:00,845:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:00,854:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:01,043:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:01,093:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:01,102:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:01,472:INFO:Calculating mean and std
2022-08-11 20:45:01,474:INFO:Creating metrics dataframe
2022-08-11 20:45:01,478:INFO:Uploading results into container
2022-08-11 20:45:01,479:INFO:Uploading model into container now
2022-08-11 20:45:01,479:INFO:master_model_container: 9
2022-08-11 20:45:01,479:INFO:display_container: 2
2022-08-11 20:45:01,480:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=123, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-08-11 20:45:01,480:INFO:create_model() successfully completed......................................
2022-08-11 20:45:01,566:INFO:SubProcess create_model() end ==================================
2022-08-11 20:45:01,566:INFO:Creating metrics dataframe
2022-08-11 20:45:01,573:INFO:Initializing Huber Regressor
2022-08-11 20:45:01,574:INFO:Total runtime is 0.3092039664586385 minutes
2022-08-11 20:45:01,576:INFO:SubProcess create_model() called ==================================
2022-08-11 20:45:01,576:INFO:Initializing create_model()
2022-08-11 20:45:01,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:45:01,576:INFO:Checking exceptions
2022-08-11 20:45:01,581:INFO:Importing libraries
2022-08-11 20:45:01,581:INFO:Copying training dataset
2022-08-11 20:45:01,592:INFO:Defining folds
2022-08-11 20:45:01,592:INFO:Declaring metric variables
2022-08-11 20:45:01,595:INFO:Importing untrained model
2022-08-11 20:45:01,597:INFO:Huber Regressor Imported successfully
2022-08-11 20:45:01,601:INFO:Starting cross validation
2022-08-11 20:45:01,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:45:03,075:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,134:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,164:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,224:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,283:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,407:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,455:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,591:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,592:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:03,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 20:45:03,644:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,018:INFO:Calculating mean and std
2022-08-11 20:45:04,020:INFO:Creating metrics dataframe
2022-08-11 20:45:04,022:INFO:Uploading results into container
2022-08-11 20:45:04,022:INFO:Uploading model into container now
2022-08-11 20:45:04,023:INFO:master_model_container: 10
2022-08-11 20:45:04,023:INFO:display_container: 2
2022-08-11 20:45:04,023:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-08-11 20:45:04,023:INFO:create_model() successfully completed......................................
2022-08-11 20:45:04,112:INFO:SubProcess create_model() end ==================================
2022-08-11 20:45:04,112:INFO:Creating metrics dataframe
2022-08-11 20:45:04,120:INFO:Initializing K Neighbors Regressor
2022-08-11 20:45:04,120:INFO:Total runtime is 0.3516489346822103 minutes
2022-08-11 20:45:04,123:INFO:SubProcess create_model() called ==================================
2022-08-11 20:45:04,139:INFO:Initializing create_model()
2022-08-11 20:45:04,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:45:04,140:INFO:Checking exceptions
2022-08-11 20:45:04,145:INFO:Importing libraries
2022-08-11 20:45:04,145:INFO:Copying training dataset
2022-08-11 20:45:04,154:INFO:Defining folds
2022-08-11 20:45:04,154:INFO:Declaring metric variables
2022-08-11 20:45:04,156:INFO:Importing untrained model
2022-08-11 20:45:04,158:INFO:K Neighbors Regressor Imported successfully
2022-08-11 20:45:04,162:INFO:Starting cross validation
2022-08-11 20:45:04,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:45:04,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,774:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,776:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,778:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,807:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,833:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:04,869:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:05,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:05,160:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:05,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:06,452:INFO:Calculating mean and std
2022-08-11 20:45:06,454:INFO:Creating metrics dataframe
2022-08-11 20:45:06,458:INFO:Uploading results into container
2022-08-11 20:45:06,458:INFO:Uploading model into container now
2022-08-11 20:45:06,459:INFO:master_model_container: 11
2022-08-11 20:45:06,459:INFO:display_container: 2
2022-08-11 20:45:06,459:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-08-11 20:45:06,459:INFO:create_model() successfully completed......................................
2022-08-11 20:45:06,544:INFO:SubProcess create_model() end ==================================
2022-08-11 20:45:06,544:INFO:Creating metrics dataframe
2022-08-11 20:45:06,552:INFO:Initializing Decision Tree Regressor
2022-08-11 20:45:06,552:INFO:Total runtime is 0.392179016272227 minutes
2022-08-11 20:45:06,554:INFO:SubProcess create_model() called ==================================
2022-08-11 20:45:06,555:INFO:Initializing create_model()
2022-08-11 20:45:06,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:45:06,555:INFO:Checking exceptions
2022-08-11 20:45:06,559:INFO:Importing libraries
2022-08-11 20:45:06,559:INFO:Copying training dataset
2022-08-11 20:45:06,567:INFO:Defining folds
2022-08-11 20:45:06,567:INFO:Declaring metric variables
2022-08-11 20:45:06,569:INFO:Importing untrained model
2022-08-11 20:45:06,572:INFO:Decision Tree Regressor Imported successfully
2022-08-11 20:45:06,575:INFO:Starting cross validation
2022-08-11 20:45:06,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:45:08,494:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,501:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,601:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,678:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,736:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:08,848:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:45:09,219:INFO:Calculating mean and std
2022-08-11 20:45:09,221:INFO:Creating metrics dataframe
2022-08-11 20:45:09,224:INFO:Uploading results into container
2022-08-11 20:45:09,225:INFO:Uploading model into container now
2022-08-11 20:45:09,225:INFO:master_model_container: 12
2022-08-11 20:45:09,225:INFO:display_container: 2
2022-08-11 20:45:09,226:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=123, splitter='best')
2022-08-11 20:45:09,226:INFO:create_model() successfully completed......................................
2022-08-11 20:45:09,309:INFO:SubProcess create_model() end ==================================
2022-08-11 20:45:09,309:INFO:Creating metrics dataframe
2022-08-11 20:45:09,317:INFO:Initializing Random Forest Regressor
2022-08-11 20:45:09,317:INFO:Total runtime is 0.4382577816645305 minutes
2022-08-11 20:45:09,319:INFO:SubProcess create_model() called ==================================
2022-08-11 20:45:09,319:INFO:Initializing create_model()
2022-08-11 20:45:09,319:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:45:09,319:INFO:Checking exceptions
2022-08-11 20:45:09,324:INFO:Importing libraries
2022-08-11 20:45:09,325:INFO:Copying training dataset
2022-08-11 20:45:09,332:INFO:Defining folds
2022-08-11 20:45:09,332:INFO:Declaring metric variables
2022-08-11 20:45:09,334:INFO:Importing untrained model
2022-08-11 20:45:09,337:INFO:Random Forest Regressor Imported successfully
2022-08-11 20:45:09,341:INFO:Starting cross validation
2022-08-11 20:45:09,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:46:38,144:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,386:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,548:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,639:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,677:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:38,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:46:39,132:INFO:Calculating mean and std
2022-08-11 20:46:39,134:INFO:Creating metrics dataframe
2022-08-11 20:46:39,137:INFO:Uploading results into container
2022-08-11 20:46:39,138:INFO:Uploading model into container now
2022-08-11 20:46:39,138:INFO:master_model_container: 13
2022-08-11 20:46:39,138:INFO:display_container: 2
2022-08-11 20:46:39,139:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=123, verbose=0,
                      warm_start=False)
2022-08-11 20:46:39,139:INFO:create_model() successfully completed......................................
2022-08-11 20:46:39,223:INFO:SubProcess create_model() end ==================================
2022-08-11 20:46:39,223:INFO:Creating metrics dataframe
2022-08-11 20:46:39,231:INFO:Initializing Extra Trees Regressor
2022-08-11 20:46:39,232:INFO:Total runtime is 1.936841134230296 minutes
2022-08-11 20:46:39,234:INFO:SubProcess create_model() called ==================================
2022-08-11 20:46:39,234:INFO:Initializing create_model()
2022-08-11 20:46:39,234:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:46:39,234:INFO:Checking exceptions
2022-08-11 20:46:39,239:INFO:Importing libraries
2022-08-11 20:46:39,239:INFO:Copying training dataset
2022-08-11 20:46:39,248:INFO:Defining folds
2022-08-11 20:46:39,248:INFO:Declaring metric variables
2022-08-11 20:46:39,251:INFO:Importing untrained model
2022-08-11 20:46:39,253:INFO:Extra Trees Regressor Imported successfully
2022-08-11 20:46:39,257:INFO:Starting cross validation
2022-08-11 20:46:39,258:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:47:14,513:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:14,609:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:14,941:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:14,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:15,037:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:15,048:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:15,087:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:15,091:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:15,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:15,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:16,522:INFO:Calculating mean and std
2022-08-11 20:47:16,523:INFO:Creating metrics dataframe
2022-08-11 20:47:16,525:INFO:Uploading results into container
2022-08-11 20:47:16,526:INFO:Uploading model into container now
2022-08-11 20:47:16,526:INFO:master_model_container: 14
2022-08-11 20:47:16,526:INFO:display_container: 2
2022-08-11 20:47:16,526:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=123, verbose=0,
                    warm_start=False)
2022-08-11 20:47:16,526:INFO:create_model() successfully completed......................................
2022-08-11 20:47:16,613:INFO:SubProcess create_model() end ==================================
2022-08-11 20:47:16,613:INFO:Creating metrics dataframe
2022-08-11 20:47:16,622:INFO:Initializing AdaBoost Regressor
2022-08-11 20:47:16,622:INFO:Total runtime is 2.56001801888148 minutes
2022-08-11 20:47:16,625:INFO:SubProcess create_model() called ==================================
2022-08-11 20:47:16,626:INFO:Initializing create_model()
2022-08-11 20:47:16,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:47:16,626:INFO:Checking exceptions
2022-08-11 20:47:16,631:INFO:Importing libraries
2022-08-11 20:47:16,631:INFO:Copying training dataset
2022-08-11 20:47:16,639:INFO:Defining folds
2022-08-11 20:47:16,640:INFO:Declaring metric variables
2022-08-11 20:47:16,642:INFO:Importing untrained model
2022-08-11 20:47:16,645:INFO:AdaBoost Regressor Imported successfully
2022-08-11 20:47:16,650:INFO:Starting cross validation
2022-08-11 20:47:16,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:47:17,076:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:702: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2022-08-11 20:47:23,973:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,122:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,126:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,259:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,477:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:27,779:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:28,054:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:29,112:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:29,489:INFO:Calculating mean and std
2022-08-11 20:47:29,491:INFO:Creating metrics dataframe
2022-08-11 20:47:29,495:INFO:Uploading results into container
2022-08-11 20:47:29,495:INFO:Uploading model into container now
2022-08-11 20:47:29,496:INFO:master_model_container: 15
2022-08-11 20:47:29,496:INFO:display_container: 2
2022-08-11 20:47:29,496:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=123)
2022-08-11 20:47:29,496:INFO:create_model() successfully completed......................................
2022-08-11 20:47:29,598:INFO:SubProcess create_model() end ==================================
2022-08-11 20:47:29,598:INFO:Creating metrics dataframe
2022-08-11 20:47:29,606:INFO:Initializing Gradient Boosting Regressor
2022-08-11 20:47:29,606:INFO:Total runtime is 2.7764185349146526 minutes
2022-08-11 20:47:29,609:INFO:SubProcess create_model() called ==================================
2022-08-11 20:47:29,609:INFO:Initializing create_model()
2022-08-11 20:47:29,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:47:29,609:INFO:Checking exceptions
2022-08-11 20:47:29,624:INFO:Importing libraries
2022-08-11 20:47:29,624:INFO:Copying training dataset
2022-08-11 20:47:29,640:INFO:Defining folds
2022-08-11 20:47:29,640:INFO:Declaring metric variables
2022-08-11 20:47:29,642:INFO:Importing untrained model
2022-08-11 20:47:29,644:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 20:47:29,649:INFO:Starting cross validation
2022-08-11 20:47:29,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:47:52,184:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,335:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,371:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,417:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,512:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:47:52,657:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:04,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:04,370:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:04,739:INFO:Calculating mean and std
2022-08-11 20:48:04,741:INFO:Creating metrics dataframe
2022-08-11 20:48:04,744:INFO:Uploading results into container
2022-08-11 20:48:04,745:INFO:Uploading model into container now
2022-08-11 20:48:04,745:INFO:master_model_container: 16
2022-08-11 20:48:04,745:INFO:display_container: 2
2022-08-11 20:48:04,746:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=123, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-08-11 20:48:04,746:INFO:create_model() successfully completed......................................
2022-08-11 20:48:04,830:INFO:SubProcess create_model() end ==================================
2022-08-11 20:48:04,830:INFO:Creating metrics dataframe
2022-08-11 20:48:04,839:INFO:Initializing Extreme Gradient Boosting
2022-08-11 20:48:04,839:INFO:Total runtime is 3.363629400730133 minutes
2022-08-11 20:48:04,841:INFO:SubProcess create_model() called ==================================
2022-08-11 20:48:04,841:INFO:Initializing create_model()
2022-08-11 20:48:04,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:48:04,841:INFO:Checking exceptions
2022-08-11 20:48:04,846:INFO:Importing libraries
2022-08-11 20:48:04,847:INFO:Copying training dataset
2022-08-11 20:48:04,856:INFO:Defining folds
2022-08-11 20:48:04,856:INFO:Declaring metric variables
2022-08-11 20:48:04,858:INFO:Importing untrained model
2022-08-11 20:48:04,861:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 20:48:04,865:INFO:Starting cross validation
2022-08-11 20:48:04,866:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:48:17,223:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:17,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:17,383:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,552:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,658:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,703:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:19,712:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:20,092:INFO:Calculating mean and std
2022-08-11 20:48:20,094:INFO:Creating metrics dataframe
2022-08-11 20:48:20,098:INFO:Uploading results into container
2022-08-11 20:48:20,098:INFO:Uploading model into container now
2022-08-11 20:48:20,099:INFO:master_model_container: 17
2022-08-11 20:48:20,099:INFO:display_container: 2
2022-08-11 20:48:20,100:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, objective='reg:squarederror',
             predictor=None, random_state=123, reg_alpha=None, ...)
2022-08-11 20:48:20,100:INFO:create_model() successfully completed......................................
2022-08-11 20:48:20,184:INFO:SubProcess create_model() end ==================================
2022-08-11 20:48:20,184:INFO:Creating metrics dataframe
2022-08-11 20:48:20,193:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 20:48:20,193:INFO:Total runtime is 3.6195237318674724 minutes
2022-08-11 20:48:20,195:INFO:SubProcess create_model() called ==================================
2022-08-11 20:48:20,195:INFO:Initializing create_model()
2022-08-11 20:48:20,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:48:20,195:INFO:Checking exceptions
2022-08-11 20:48:20,201:INFO:Importing libraries
2022-08-11 20:48:20,201:INFO:Copying training dataset
2022-08-11 20:48:20,211:INFO:Defining folds
2022-08-11 20:48:20,211:INFO:Declaring metric variables
2022-08-11 20:48:20,215:INFO:Importing untrained model
2022-08-11 20:48:20,218:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 20:48:20,223:INFO:Starting cross validation
2022-08-11 20:48:20,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:48:21,469:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,481:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,670:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,766:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,782:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,806:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,812:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:21,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:22,236:INFO:Calculating mean and std
2022-08-11 20:48:22,238:INFO:Creating metrics dataframe
2022-08-11 20:48:22,241:INFO:Uploading results into container
2022-08-11 20:48:22,241:INFO:Uploading model into container now
2022-08-11 20:48:22,242:INFO:master_model_container: 18
2022-08-11 20:48:22,242:INFO:display_container: 2
2022-08-11 20:48:22,242:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-08-11 20:48:22,242:INFO:create_model() successfully completed......................................
2022-08-11 20:48:22,327:INFO:SubProcess create_model() end ==================================
2022-08-11 20:48:22,327:INFO:Creating metrics dataframe
2022-08-11 20:48:22,336:INFO:Initializing Dummy Regressor
2022-08-11 20:48:22,337:INFO:Total runtime is 3.655255218346914 minutes
2022-08-11 20:48:22,339:INFO:SubProcess create_model() called ==================================
2022-08-11 20:48:22,339:INFO:Initializing create_model()
2022-08-11 20:48:22,339:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8b39879dc0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:48:22,339:INFO:Checking exceptions
2022-08-11 20:48:22,344:INFO:Importing libraries
2022-08-11 20:48:22,344:INFO:Copying training dataset
2022-08-11 20:48:22,353:INFO:Defining folds
2022-08-11 20:48:22,353:INFO:Declaring metric variables
2022-08-11 20:48:22,355:INFO:Importing untrained model
2022-08-11 20:48:22,357:INFO:Dummy Regressor Imported successfully
2022-08-11 20:48:22,361:INFO:Starting cross validation
2022-08-11 20:48:22,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 20:48:22,934:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:22,949:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,021:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,057:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,061:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,062:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,127:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 20:48:23,514:INFO:Calculating mean and std
2022-08-11 20:48:23,516:INFO:Creating metrics dataframe
2022-08-11 20:48:23,520:INFO:Uploading results into container
2022-08-11 20:48:23,520:INFO:Uploading model into container now
2022-08-11 20:48:23,520:INFO:master_model_container: 19
2022-08-11 20:48:23,521:INFO:display_container: 2
2022-08-11 20:48:23,521:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-08-11 20:48:23,521:INFO:create_model() successfully completed......................................
2022-08-11 20:48:23,604:INFO:SubProcess create_model() end ==================================
2022-08-11 20:48:23,604:INFO:Creating metrics dataframe
2022-08-11 20:48:23,619:INFO:Initializing create_model()
2022-08-11 20:48:23,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f8b18150be0>, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 20:48:23,619:INFO:Checking exceptions
2022-08-11 20:48:23,628:INFO:Importing libraries
2022-08-11 20:48:23,628:INFO:Copying training dataset
2022-08-11 20:48:23,636:INFO:Defining folds
2022-08-11 20:48:23,636:INFO:Declaring metric variables
2022-08-11 20:48:23,636:INFO:Importing untrained model
2022-08-11 20:48:23,636:INFO:Declaring custom model
2022-08-11 20:48:23,637:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 20:48:23,638:INFO:Cross validation set to False
2022-08-11 20:48:23,638:INFO:Fitting Model
2022-08-11 20:48:28,646:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-08-11 20:48:28,646:INFO:create_model() successfully completed......................................
2022-08-11 20:48:28,747:INFO:master_model_container: 19
2022-08-11 20:48:28,747:INFO:display_container: 2
2022-08-11 20:48:28,747:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-08-11 20:48:28,747:INFO:compare_models() successfully completed......................................
2022-08-11 21:01:14,138:INFO:PyCaret RegressionExperiment
2022-08-11 21:01:14,139:INFO:Logging name: reg-default-name
2022-08-11 21:01:14,139:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:01:14,139:INFO:version 3.0.0.rc3
2022-08-11 21:01:14,139:INFO:Initializing setup()
2022-08-11 21:01:14,142:INFO:self.USI: 49fc
2022-08-11 21:01:14,142:INFO:self.variable_keys: {'exp_name_log', 'html_param', 'memory', 'exp_id', 'logging_param', '_all_metrics', 'y', '_all_models_internal', 'data', '_gpu_n_jobs_param', 'seed', 'y_train', '_all_models', 'fold_shuffle_param', 'idx', 'n_jobs_param', 'target_param', 'y_test', 'X_train', 'display_container', 'fold_groups_param', 'master_model_container', 'pipeline', 'X_test', 'transform_target_method_param', '_available_plots', 'log_plots_param', 'USI', '_ml_usecase', 'X', 'transform_target_param', 'gpu_param', 'fold_generator', 'variable_keys'}
2022-08-11 21:01:14,142:INFO:Checking environment
2022-08-11 21:01:14,142:INFO:python_version: 3.8.8
2022-08-11 21:01:14,142:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:01:14,142:INFO:machine: x86_64
2022-08-11 21:01:14,142:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:01:14,143:INFO:Memory: svmem(total=34359738368, available=5072211968, percent=85.2, used=3349991424, free=1848160256, active=2943262720, inactive=2424455168, wired=406728704)
2022-08-11 21:01:14,143:INFO:Physical Core: 10
2022-08-11 21:01:14,143:INFO:Logical Core: 10
2022-08-11 21:01:14,143:INFO:Checking libraries
2022-08-11 21:01:14,143:INFO:System:
2022-08-11 21:01:14,143:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:01:14,143:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:01:14,143:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:01:14,144:INFO:PyCaret required dependencies:
2022-08-11 21:01:14,144:INFO:                 pip: 22.1.2
2022-08-11 21:01:14,144:INFO:          setuptools: 61.2.0
2022-08-11 21:01:14,144:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:01:14,144:INFO:             IPython: 8.4.0
2022-08-11 21:01:14,144:INFO:          ipywidgets: 7.6.5
2022-08-11 21:01:14,145:INFO:                tqdm: 4.64.0
2022-08-11 21:01:14,145:INFO:               numpy: 1.22.4
2022-08-11 21:01:14,145:INFO:              pandas: 1.4.3
2022-08-11 21:01:14,145:INFO:              jinja2: 3.0.3
2022-08-11 21:01:14,145:INFO:               scipy: 1.5.4
2022-08-11 21:01:14,145:INFO:              joblib: 1.1.0
2022-08-11 21:01:14,145:INFO:             sklearn: 1.1.1
2022-08-11 21:01:14,145:INFO:                pyod: 1.0.4
2022-08-11 21:01:14,145:INFO:            imblearn: 0.9.1
2022-08-11 21:01:14,145:INFO:   category_encoders: 2.5.0
2022-08-11 21:01:14,145:INFO:            lightgbm: 3.2.1
2022-08-11 21:01:14,145:INFO:               numba: 0.55.2
2022-08-11 21:01:14,145:INFO:            requests: 2.28.1
2022-08-11 21:01:14,145:INFO:          matplotlib: 3.5.1
2022-08-11 21:01:14,145:INFO:          scikitplot: 0.3.7
2022-08-11 21:01:14,146:INFO:         yellowbrick: 1.4
2022-08-11 21:01:14,146:INFO:              plotly: 5.9.0
2022-08-11 21:01:14,146:INFO:             kaleido: 0.2.1
2022-08-11 21:01:14,146:INFO:         statsmodels: 0.13.2
2022-08-11 21:01:14,146:INFO:              sktime: 0.13.0
2022-08-11 21:01:14,146:INFO:               tbats: 1.1.0
2022-08-11 21:01:14,146:INFO:            pmdarima: 1.8.5
2022-08-11 21:01:14,146:INFO:              psutil: 5.9.1
2022-08-11 21:01:14,146:INFO:PyCaret optional dependencies:
2022-08-11 21:01:14,146:INFO:                shap: Not installed
2022-08-11 21:01:14,146:INFO:           interpret: Not installed
2022-08-11 21:01:14,146:INFO:                umap: 0.5.3
2022-08-11 21:01:14,146:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:01:14,147:INFO:  explainerdashboard: Not installed
2022-08-11 21:01:14,147:INFO:             autoviz: Not installed
2022-08-11 21:01:14,147:INFO:           fairlearn: Not installed
2022-08-11 21:01:14,147:INFO:             xgboost: 1.6.1
2022-08-11 21:01:14,147:INFO:            catboost: Not installed
2022-08-11 21:01:14,147:INFO:              kmodes: 0.12.1
2022-08-11 21:01:14,147:INFO:             mlxtend: 0.19.0
2022-08-11 21:01:14,147:INFO:       statsforecast: Not installed
2022-08-11 21:01:14,147:INFO:        tune_sklearn: Not installed
2022-08-11 21:01:14,148:INFO:                 ray: Not installed
2022-08-11 21:01:14,148:INFO:            hyperopt: Not installed
2022-08-11 21:01:14,148:INFO:              optuna: Not installed
2022-08-11 21:01:14,148:INFO:               skopt: Not installed
2022-08-11 21:01:14,148:INFO:              mlflow: 1.27.0
2022-08-11 21:01:14,148:INFO:              gradio: Not installed
2022-08-11 21:01:14,148:INFO:             fastapi: Not installed
2022-08-11 21:01:14,148:INFO:             uvicorn: Not installed
2022-08-11 21:01:14,148:INFO:              m2cgen: Not installed
2022-08-11 21:01:14,149:INFO:           evidently: Not installed
2022-08-11 21:01:14,149:INFO:                nltk: 3.7
2022-08-11 21:01:14,149:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:01:14,149:INFO:              gensim: 3.8.3
2022-08-11 21:01:14,149:INFO:               spacy: 2.3.7
2022-08-11 21:01:14,149:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:01:14,149:INFO:            textblob: 0.17.1
2022-08-11 21:01:14,149:INFO:               fugue: Not installed
2022-08-11 21:01:14,149:INFO:           streamlit: Not installed
2022-08-11 21:01:14,149:INFO:             prophet: Not installed
2022-08-11 21:01:14,149:INFO:None
2022-08-11 21:01:14,149:INFO:Set up data.
2022-08-11 21:01:14,185:INFO:Set up train/test split.
2022-08-11 21:01:14,213:INFO:Set up folding strategy.
2022-08-11 21:01:14,213:INFO:Assigning column types.
2022-08-11 21:01:14,220:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:01:14,220:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,225:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,229:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,287:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,328:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:14,331:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,335:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,339:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,398:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,440:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,440:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:14,443:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:01:14,447:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,451:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,509:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,550:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,550:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:14,556:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,561:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,659:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,659:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:14,662:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:01:14,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,769:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:14,780:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,838:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,880:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:14,883:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:01:14,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:14,990:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:14,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:15,057:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:15,098:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:15,098:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:15,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:15,101:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:01:15,169:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:15,210:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:15,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:15,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:15,319:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:15,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:15,321:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:01:15,428:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:15,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:15,538:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:15,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:15,541:INFO:Preparing preprocessing pipeline...
2022-08-11 21:01:15,542:INFO:Set up simple imputation.
2022-08-11 21:01:15,542:INFO:Set up variance threshold.
2022-08-11 21:01:15,715:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:01:15,718:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-08-11 21:01:15,718:INFO:Creating final display dataframe.
2022-08-11 21:01:16,380:INFO:Setup display_container:                Description             Value
0               Session id              7192
1                   Target              Y_01
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              49fc
2022-08-11 21:01:16,492:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:16,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:16,600:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:16,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:16,619:INFO:setup() successfully completed in 2.48s...............
2022-08-11 21:01:36,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 21:01:36,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 21:01:36,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 21:01:36,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-11 21:01:36,535:INFO:PyCaret RegressionExperiment
2022-08-11 21:01:36,536:INFO:Logging name: reg-default-name
2022-08-11 21:01:36,536:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:01:36,536:INFO:version 3.0.0.rc3
2022-08-11 21:01:36,536:INFO:Initializing setup()
2022-08-11 21:01:36,536:INFO:self.USI: 8146
2022-08-11 21:01:36,536:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:01:36,536:INFO:Checking environment
2022-08-11 21:01:36,536:INFO:python_version: 3.8.8
2022-08-11 21:01:36,536:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:01:36,536:INFO:machine: x86_64
2022-08-11 21:01:36,536:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:01:36,536:INFO:Memory: svmem(total=34359738368, available=5046489088, percent=85.3, used=3375087616, free=1907408896, active=2966052864, inactive=2342113280, wired=409034752)
2022-08-11 21:01:36,536:INFO:Physical Core: 10
2022-08-11 21:01:36,536:INFO:Logical Core: 10
2022-08-11 21:01:36,536:INFO:Checking libraries
2022-08-11 21:01:36,536:INFO:System:
2022-08-11 21:01:36,536:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:01:36,536:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:01:36,536:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:01:36,536:INFO:PyCaret required dependencies:
2022-08-11 21:01:36,536:INFO:                 pip: 22.1.2
2022-08-11 21:01:36,536:INFO:          setuptools: 61.2.0
2022-08-11 21:01:36,536:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:01:36,536:INFO:             IPython: 8.4.0
2022-08-11 21:01:36,536:INFO:          ipywidgets: 7.6.5
2022-08-11 21:01:36,536:INFO:                tqdm: 4.64.0
2022-08-11 21:01:36,536:INFO:               numpy: 1.22.4
2022-08-11 21:01:36,536:INFO:              pandas: 1.4.3
2022-08-11 21:01:36,536:INFO:              jinja2: 3.0.3
2022-08-11 21:01:36,536:INFO:               scipy: 1.5.4
2022-08-11 21:01:36,537:INFO:              joblib: 1.1.0
2022-08-11 21:01:36,537:INFO:             sklearn: 1.1.1
2022-08-11 21:01:36,537:INFO:                pyod: 1.0.4
2022-08-11 21:01:36,537:INFO:            imblearn: 0.9.1
2022-08-11 21:01:36,537:INFO:   category_encoders: 2.5.0
2022-08-11 21:01:36,537:INFO:            lightgbm: 3.2.1
2022-08-11 21:01:36,537:INFO:               numba: 0.55.2
2022-08-11 21:01:36,537:INFO:            requests: 2.28.1
2022-08-11 21:01:36,537:INFO:          matplotlib: 3.5.1
2022-08-11 21:01:36,537:INFO:          scikitplot: 0.3.7
2022-08-11 21:01:36,537:INFO:         yellowbrick: 1.4
2022-08-11 21:01:36,537:INFO:              plotly: 5.9.0
2022-08-11 21:01:36,537:INFO:             kaleido: 0.2.1
2022-08-11 21:01:36,537:INFO:         statsmodels: 0.13.2
2022-08-11 21:01:36,537:INFO:              sktime: 0.13.0
2022-08-11 21:01:36,537:INFO:               tbats: 1.1.0
2022-08-11 21:01:36,537:INFO:            pmdarima: 1.8.5
2022-08-11 21:01:36,537:INFO:              psutil: 5.9.1
2022-08-11 21:01:36,537:INFO:PyCaret optional dependencies:
2022-08-11 21:01:36,538:INFO:                shap: Not installed
2022-08-11 21:01:36,538:INFO:           interpret: Not installed
2022-08-11 21:01:36,538:INFO:                umap: 0.5.3
2022-08-11 21:01:36,538:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:01:36,538:INFO:  explainerdashboard: Not installed
2022-08-11 21:01:36,538:INFO:             autoviz: Not installed
2022-08-11 21:01:36,538:INFO:           fairlearn: Not installed
2022-08-11 21:01:36,538:INFO:             xgboost: 1.6.1
2022-08-11 21:01:36,539:INFO:            catboost: Not installed
2022-08-11 21:01:36,539:INFO:              kmodes: 0.12.1
2022-08-11 21:01:36,539:INFO:             mlxtend: 0.19.0
2022-08-11 21:01:36,539:INFO:       statsforecast: Not installed
2022-08-11 21:01:36,539:INFO:        tune_sklearn: Not installed
2022-08-11 21:01:36,539:INFO:                 ray: Not installed
2022-08-11 21:01:36,539:INFO:            hyperopt: Not installed
2022-08-11 21:01:36,539:INFO:              optuna: Not installed
2022-08-11 21:01:36,539:INFO:               skopt: Not installed
2022-08-11 21:01:36,539:INFO:              mlflow: 1.27.0
2022-08-11 21:01:36,539:INFO:              gradio: Not installed
2022-08-11 21:01:36,539:INFO:             fastapi: Not installed
2022-08-11 21:01:36,539:INFO:             uvicorn: Not installed
2022-08-11 21:01:36,539:INFO:              m2cgen: Not installed
2022-08-11 21:01:36,539:INFO:           evidently: Not installed
2022-08-11 21:01:36,539:INFO:                nltk: 3.7
2022-08-11 21:01:36,539:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:01:36,539:INFO:              gensim: 3.8.3
2022-08-11 21:01:36,539:INFO:               spacy: 2.3.7
2022-08-11 21:01:36,539:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:01:36,539:INFO:            textblob: 0.17.1
2022-08-11 21:01:36,539:INFO:               fugue: Not installed
2022-08-11 21:01:36,539:INFO:           streamlit: Not installed
2022-08-11 21:01:36,539:INFO:             prophet: Not installed
2022-08-11 21:01:36,539:INFO:None
2022-08-11 21:01:36,539:INFO:Set up data.
2022-08-11 21:01:36,577:INFO:Set up train/test split.
2022-08-11 21:01:36,596:INFO:Set up folding strategy.
2022-08-11 21:01:36,596:INFO:Assigning column types.
2022-08-11 21:01:36,602:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:01:36,603:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,607:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,611:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,707:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:36,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:36,756:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,760:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,764:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,826:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,866:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:36,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:36,868:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:01:36,872:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,876:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,971:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:36,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:36,978:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:01:36,982:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,082:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,085:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:01:37,093:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,150:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,190:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,190:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,201:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,297:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,300:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:01:37,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,405:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,471:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,512:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,514:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:01:37,579:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,619:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,687:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:01:37,727:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,730:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:01:37,834:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,940:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:37,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:37,943:INFO:Preparing preprocessing pipeline...
2022-08-11 21:01:37,944:INFO:Set up simple imputation.
2022-08-11 21:01:37,944:INFO:Set up variance threshold.
2022-08-11 21:01:38,126:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:01:38,129:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:01:38,129:INFO:Creating final display dataframe.
2022-08-11 21:01:38,802:INFO:Setup display_container:                Description             Value
0               Session id              2300
1                   Target              Y_01
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              8146
2022-08-11 21:01:38,913:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:38,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:39,018:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:01:39,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:01:39,037:INFO:setup() successfully completed in 2.5s...............
2022-08-11 21:01:39,040:INFO:Initializing compare_models()
2022-08-11 21:01:39,040:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:01:39,040:INFO:Checking exceptions
2022-08-11 21:01:39,048:INFO:Preparing display monitor
2022-08-11 21:01:39,095:INFO:Initializing Linear Regression
2022-08-11 21:01:39,095:INFO:Total runtime is 4.049142201741537e-06 minutes
2022-08-11 21:01:39,098:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:39,098:INFO:Initializing create_model()
2022-08-11 21:01:39,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:39,098:INFO:Checking exceptions
2022-08-11 21:01:39,111:INFO:Importing libraries
2022-08-11 21:01:39,111:INFO:Copying training dataset
2022-08-11 21:01:39,127:INFO:Defining folds
2022-08-11 21:01:39,127:INFO:Declaring metric variables
2022-08-11 21:01:39,129:INFO:Importing untrained model
2022-08-11 21:01:39,131:INFO:Linear Regression Imported successfully
2022-08-11 21:01:39,135:INFO:Starting cross validation
2022-08-11 21:01:39,139:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:41,570:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,586:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,594:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,605:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,615:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,624:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,639:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:41,790:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,027:INFO:Calculating mean and std
2022-08-11 21:01:42,029:INFO:Creating metrics dataframe
2022-08-11 21:01:42,033:INFO:Uploading results into container
2022-08-11 21:01:42,034:INFO:Uploading model into container now
2022-08-11 21:01:42,034:INFO:master_model_container: 1
2022-08-11 21:01:42,034:INFO:display_container: 2
2022-08-11 21:01:42,034:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:01:42,035:INFO:create_model() successfully completed......................................
2022-08-11 21:01:42,119:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:42,119:INFO:Creating metrics dataframe
2022-08-11 21:01:42,125:INFO:Initializing Lasso Regression
2022-08-11 21:01:42,125:INFO:Total runtime is 0.05049449602762858 minutes
2022-08-11 21:01:42,127:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:42,127:INFO:Initializing create_model()
2022-08-11 21:01:42,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:42,127:INFO:Checking exceptions
2022-08-11 21:01:42,138:INFO:Importing libraries
2022-08-11 21:01:42,138:INFO:Copying training dataset
2022-08-11 21:01:42,153:INFO:Defining folds
2022-08-11 21:01:42,153:INFO:Declaring metric variables
2022-08-11 21:01:42,156:INFO:Importing untrained model
2022-08-11 21:01:42,158:INFO:Lasso Regression Imported successfully
2022-08-11 21:01:42,162:INFO:Starting cross validation
2022-08-11 21:01:42,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:42,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,294:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,296:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,309:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,342:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,456:INFO:Calculating mean and std
2022-08-11 21:01:42,458:INFO:Creating metrics dataframe
2022-08-11 21:01:42,461:INFO:Uploading results into container
2022-08-11 21:01:42,461:INFO:Uploading model into container now
2022-08-11 21:01:42,462:INFO:master_model_container: 2
2022-08-11 21:01:42,462:INFO:display_container: 2
2022-08-11 21:01:42,462:INFO:Lasso(random_state=2300)
2022-08-11 21:01:42,462:INFO:create_model() successfully completed......................................
2022-08-11 21:01:42,525:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:42,525:INFO:Creating metrics dataframe
2022-08-11 21:01:42,531:INFO:Initializing Ridge Regression
2022-08-11 21:01:42,531:INFO:Total runtime is 0.057268897692362465 minutes
2022-08-11 21:01:42,534:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:42,534:INFO:Initializing create_model()
2022-08-11 21:01:42,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:42,534:INFO:Checking exceptions
2022-08-11 21:01:42,543:INFO:Importing libraries
2022-08-11 21:01:42,543:INFO:Copying training dataset
2022-08-11 21:01:42,551:INFO:Defining folds
2022-08-11 21:01:42,551:INFO:Declaring metric variables
2022-08-11 21:01:42,553:INFO:Importing untrained model
2022-08-11 21:01:42,556:INFO:Ridge Regression Imported successfully
2022-08-11 21:01:42,560:INFO:Starting cross validation
2022-08-11 21:01:42,561:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:42,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,687:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,704:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,709:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,725:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,734:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:42,851:INFO:Calculating mean and std
2022-08-11 21:01:42,853:INFO:Creating metrics dataframe
2022-08-11 21:01:42,856:INFO:Uploading results into container
2022-08-11 21:01:42,857:INFO:Uploading model into container now
2022-08-11 21:01:42,857:INFO:master_model_container: 3
2022-08-11 21:01:42,857:INFO:display_container: 2
2022-08-11 21:01:42,858:INFO:Ridge(random_state=2300)
2022-08-11 21:01:42,858:INFO:create_model() successfully completed......................................
2022-08-11 21:01:42,919:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:42,919:INFO:Creating metrics dataframe
2022-08-11 21:01:42,925:INFO:Initializing Elastic Net
2022-08-11 21:01:42,925:INFO:Total runtime is 0.0638386329015096 minutes
2022-08-11 21:01:42,927:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:42,927:INFO:Initializing create_model()
2022-08-11 21:01:42,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:42,927:INFO:Checking exceptions
2022-08-11 21:01:42,934:INFO:Importing libraries
2022-08-11 21:01:42,934:INFO:Copying training dataset
2022-08-11 21:01:42,946:INFO:Defining folds
2022-08-11 21:01:42,946:INFO:Declaring metric variables
2022-08-11 21:01:42,948:INFO:Importing untrained model
2022-08-11 21:01:42,950:INFO:Elastic Net Imported successfully
2022-08-11 21:01:42,955:INFO:Starting cross validation
2022-08-11 21:01:42,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:43,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,078:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,084:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,087:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,091:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,093:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,109:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,109:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,229:INFO:Calculating mean and std
2022-08-11 21:01:43,231:INFO:Creating metrics dataframe
2022-08-11 21:01:43,234:INFO:Uploading results into container
2022-08-11 21:01:43,235:INFO:Uploading model into container now
2022-08-11 21:01:43,235:INFO:master_model_container: 4
2022-08-11 21:01:43,235:INFO:display_container: 2
2022-08-11 21:01:43,236:INFO:ElasticNet(random_state=2300)
2022-08-11 21:01:43,236:INFO:create_model() successfully completed......................................
2022-08-11 21:01:43,298:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:43,299:INFO:Creating metrics dataframe
2022-08-11 21:01:43,305:INFO:Initializing Least Angle Regression
2022-08-11 21:01:43,305:INFO:Total runtime is 0.07016113599141438 minutes
2022-08-11 21:01:43,307:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:43,307:INFO:Initializing create_model()
2022-08-11 21:01:43,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:43,307:INFO:Checking exceptions
2022-08-11 21:01:43,312:INFO:Importing libraries
2022-08-11 21:01:43,312:INFO:Copying training dataset
2022-08-11 21:01:43,319:INFO:Defining folds
2022-08-11 21:01:43,319:INFO:Declaring metric variables
2022-08-11 21:01:43,321:INFO:Importing untrained model
2022-08-11 21:01:43,324:INFO:Least Angle Regression Imported successfully
2022-08-11 21:01:43,328:INFO:Starting cross validation
2022-08-11 21:01:43,329:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:43,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,443:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,445:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,458:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,454:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,445:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,465:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,475:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,478:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,484:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,485:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,501:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,501:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,534:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:43,549:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,665:INFO:Calculating mean and std
2022-08-11 21:01:43,668:INFO:Creating metrics dataframe
2022-08-11 21:01:43,671:INFO:Uploading results into container
2022-08-11 21:01:43,672:INFO:Uploading model into container now
2022-08-11 21:01:43,672:INFO:master_model_container: 5
2022-08-11 21:01:43,672:INFO:display_container: 2
2022-08-11 21:01:43,673:INFO:Lars(random_state=2300)
2022-08-11 21:01:43,673:INFO:create_model() successfully completed......................................
2022-08-11 21:01:43,735:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:43,736:INFO:Creating metrics dataframe
2022-08-11 21:01:43,742:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:01:43,742:INFO:Total runtime is 0.07744790315628051 minutes
2022-08-11 21:01:43,744:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:43,745:INFO:Initializing create_model()
2022-08-11 21:01:43,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:43,745:INFO:Checking exceptions
2022-08-11 21:01:43,752:INFO:Importing libraries
2022-08-11 21:01:43,753:INFO:Copying training dataset
2022-08-11 21:01:43,764:INFO:Defining folds
2022-08-11 21:01:43,764:INFO:Declaring metric variables
2022-08-11 21:01:43,766:INFO:Importing untrained model
2022-08-11 21:01:43,768:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:01:43,773:INFO:Starting cross validation
2022-08-11 21:01:43,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:43,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,889:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,889:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,892:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,901:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,902:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,908:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,908:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,908:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,909:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,910:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,915:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,929:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,939:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:43,951:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:01:43,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,078:INFO:Calculating mean and std
2022-08-11 21:01:44,078:INFO:Creating metrics dataframe
2022-08-11 21:01:44,083:INFO:Uploading results into container
2022-08-11 21:01:44,084:INFO:Uploading model into container now
2022-08-11 21:01:44,084:INFO:master_model_container: 6
2022-08-11 21:01:44,084:INFO:display_container: 2
2022-08-11 21:01:44,085:INFO:LassoLars(random_state=2300)
2022-08-11 21:01:44,085:INFO:create_model() successfully completed......................................
2022-08-11 21:01:44,149:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:44,149:INFO:Creating metrics dataframe
2022-08-11 21:01:44,156:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:01:44,156:INFO:Total runtime is 0.08434386650721232 minutes
2022-08-11 21:01:44,158:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:44,158:INFO:Initializing create_model()
2022-08-11 21:01:44,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:44,158:INFO:Checking exceptions
2022-08-11 21:01:44,163:INFO:Importing libraries
2022-08-11 21:01:44,163:INFO:Copying training dataset
2022-08-11 21:01:44,170:INFO:Defining folds
2022-08-11 21:01:44,170:INFO:Declaring metric variables
2022-08-11 21:01:44,172:INFO:Importing untrained model
2022-08-11 21:01:44,174:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:01:44,179:INFO:Starting cross validation
2022-08-11 21:01:44,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:44,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,294:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,301:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,306:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,310:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,310:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,315:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,321:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,335:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,346:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,361:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,364:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:01:44,373:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,491:INFO:Calculating mean and std
2022-08-11 21:01:44,493:INFO:Creating metrics dataframe
2022-08-11 21:01:44,496:INFO:Uploading results into container
2022-08-11 21:01:44,497:INFO:Uploading model into container now
2022-08-11 21:01:44,497:INFO:master_model_container: 7
2022-08-11 21:01:44,497:INFO:display_container: 2
2022-08-11 21:01:44,498:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:01:44,498:INFO:create_model() successfully completed......................................
2022-08-11 21:01:44,563:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:44,563:INFO:Creating metrics dataframe
2022-08-11 21:01:44,570:INFO:Initializing Bayesian Ridge
2022-08-11 21:01:44,570:INFO:Total runtime is 0.09125191768010457 minutes
2022-08-11 21:01:44,573:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:44,573:INFO:Initializing create_model()
2022-08-11 21:01:44,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:44,573:INFO:Checking exceptions
2022-08-11 21:01:44,578:INFO:Importing libraries
2022-08-11 21:01:44,578:INFO:Copying training dataset
2022-08-11 21:01:44,587:INFO:Defining folds
2022-08-11 21:01:44,587:INFO:Declaring metric variables
2022-08-11 21:01:44,589:INFO:Importing untrained model
2022-08-11 21:01:44,592:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:01:44,597:INFO:Starting cross validation
2022-08-11 21:01:44,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:44,916:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,921:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,924:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,927:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,932:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,935:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,944:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,969:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:44,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,004:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,120:INFO:Calculating mean and std
2022-08-11 21:01:45,120:INFO:Creating metrics dataframe
2022-08-11 21:01:45,124:INFO:Uploading results into container
2022-08-11 21:01:45,125:INFO:Uploading model into container now
2022-08-11 21:01:45,126:INFO:master_model_container: 8
2022-08-11 21:01:45,126:INFO:display_container: 2
2022-08-11 21:01:45,126:INFO:BayesianRidge()
2022-08-11 21:01:45,126:INFO:create_model() successfully completed......................................
2022-08-11 21:01:45,192:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:45,192:INFO:Creating metrics dataframe
2022-08-11 21:01:45,199:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:01:45,199:INFO:Total runtime is 0.10173649787902832 minutes
2022-08-11 21:01:45,202:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:45,202:INFO:Initializing create_model()
2022-08-11 21:01:45,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:45,202:INFO:Checking exceptions
2022-08-11 21:01:45,211:INFO:Importing libraries
2022-08-11 21:01:45,211:INFO:Copying training dataset
2022-08-11 21:01:45,220:INFO:Defining folds
2022-08-11 21:01:45,221:INFO:Declaring metric variables
2022-08-11 21:01:45,223:INFO:Importing untrained model
2022-08-11 21:01:45,226:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:01:45,231:INFO:Starting cross validation
2022-08-11 21:01:45,232:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:45,392:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,403:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,415:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,421:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,429:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,434:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,441:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,451:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:45,582:INFO:Calculating mean and std
2022-08-11 21:01:45,583:INFO:Creating metrics dataframe
2022-08-11 21:01:45,588:INFO:Uploading results into container
2022-08-11 21:01:45,588:INFO:Uploading model into container now
2022-08-11 21:01:45,589:INFO:master_model_container: 9
2022-08-11 21:01:45,589:INFO:display_container: 2
2022-08-11 21:01:45,589:INFO:PassiveAggressiveRegressor(random_state=2300)
2022-08-11 21:01:45,589:INFO:create_model() successfully completed......................................
2022-08-11 21:01:45,655:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:45,655:INFO:Creating metrics dataframe
2022-08-11 21:01:45,662:INFO:Initializing Huber Regressor
2022-08-11 21:01:45,662:INFO:Total runtime is 0.10944778124491374 minutes
2022-08-11 21:01:45,664:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:45,664:INFO:Initializing create_model()
2022-08-11 21:01:45,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:45,664:INFO:Checking exceptions
2022-08-11 21:01:45,669:INFO:Importing libraries
2022-08-11 21:01:45,669:INFO:Copying training dataset
2022-08-11 21:01:45,676:INFO:Defining folds
2022-08-11 21:01:45,676:INFO:Declaring metric variables
2022-08-11 21:01:45,679:INFO:Importing untrained model
2022-08-11 21:01:45,681:INFO:Huber Regressor Imported successfully
2022-08-11 21:01:45,684:INFO:Starting cross validation
2022-08-11 21:01:45,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:46,476:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,477:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,514:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,516:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,525:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,526:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,531:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,533:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,534:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,535:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,555:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,556:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,559:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,567:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,576:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:01:46,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,697:INFO:Calculating mean and std
2022-08-11 21:01:46,699:INFO:Creating metrics dataframe
2022-08-11 21:01:46,702:INFO:Uploading results into container
2022-08-11 21:01:46,703:INFO:Uploading model into container now
2022-08-11 21:01:46,703:INFO:master_model_container: 10
2022-08-11 21:01:46,703:INFO:display_container: 2
2022-08-11 21:01:46,704:INFO:HuberRegressor()
2022-08-11 21:01:46,704:INFO:create_model() successfully completed......................................
2022-08-11 21:01:46,770:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:46,770:INFO:Creating metrics dataframe
2022-08-11 21:01:46,778:INFO:Initializing K Neighbors Regressor
2022-08-11 21:01:46,778:INFO:Total runtime is 0.12804290056228637 minutes
2022-08-11 21:01:46,780:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:46,780:INFO:Initializing create_model()
2022-08-11 21:01:46,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:46,780:INFO:Checking exceptions
2022-08-11 21:01:46,784:INFO:Importing libraries
2022-08-11 21:01:46,785:INFO:Copying training dataset
2022-08-11 21:01:46,791:INFO:Defining folds
2022-08-11 21:01:46,791:INFO:Declaring metric variables
2022-08-11 21:01:46,793:INFO:Importing untrained model
2022-08-11 21:01:46,795:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:01:46,799:INFO:Starting cross validation
2022-08-11 21:01:46,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:46,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,914:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,916:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,916:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,918:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,920:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,927:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,928:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,957:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:46,969:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:47,937:INFO:Calculating mean and std
2022-08-11 21:01:47,939:INFO:Creating metrics dataframe
2022-08-11 21:01:47,943:INFO:Uploading results into container
2022-08-11 21:01:47,943:INFO:Uploading model into container now
2022-08-11 21:01:47,944:INFO:master_model_container: 11
2022-08-11 21:01:47,944:INFO:display_container: 2
2022-08-11 21:01:47,944:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:01:47,944:INFO:create_model() successfully completed......................................
2022-08-11 21:01:48,009:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:48,009:INFO:Creating metrics dataframe
2022-08-11 21:01:48,017:INFO:Initializing Decision Tree Regressor
2022-08-11 21:01:48,018:INFO:Total runtime is 0.1487074335416158 minutes
2022-08-11 21:01:48,020:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:48,020:INFO:Initializing create_model()
2022-08-11 21:01:48,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:48,020:INFO:Checking exceptions
2022-08-11 21:01:48,025:INFO:Importing libraries
2022-08-11 21:01:48,025:INFO:Copying training dataset
2022-08-11 21:01:48,033:INFO:Defining folds
2022-08-11 21:01:48,034:INFO:Declaring metric variables
2022-08-11 21:01:48,036:INFO:Importing untrained model
2022-08-11 21:01:48,038:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:01:48,044:INFO:Starting cross validation
2022-08-11 21:01:48,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:01:49,182:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,294:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,323:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,328:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,344:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:01:49,464:INFO:Calculating mean and std
2022-08-11 21:01:49,464:INFO:Creating metrics dataframe
2022-08-11 21:01:49,469:INFO:Uploading results into container
2022-08-11 21:01:49,469:INFO:Uploading model into container now
2022-08-11 21:01:49,470:INFO:master_model_container: 12
2022-08-11 21:01:49,470:INFO:display_container: 2
2022-08-11 21:01:49,470:INFO:DecisionTreeRegressor(random_state=2300)
2022-08-11 21:01:49,470:INFO:create_model() successfully completed......................................
2022-08-11 21:01:49,536:INFO:SubProcess create_model() end ==================================
2022-08-11 21:01:49,537:INFO:Creating metrics dataframe
2022-08-11 21:01:49,544:INFO:Initializing Random Forest Regressor
2022-08-11 21:01:49,544:INFO:Total runtime is 0.17415453592936198 minutes
2022-08-11 21:01:49,547:INFO:SubProcess create_model() called ==================================
2022-08-11 21:01:49,547:INFO:Initializing create_model()
2022-08-11 21:01:49,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:01:49,547:INFO:Checking exceptions
2022-08-11 21:01:49,551:INFO:Importing libraries
2022-08-11 21:01:49,551:INFO:Copying training dataset
2022-08-11 21:01:49,558:INFO:Defining folds
2022-08-11 21:01:49,558:INFO:Declaring metric variables
2022-08-11 21:01:49,561:INFO:Importing untrained model
2022-08-11 21:01:49,563:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:01:49,567:INFO:Starting cross validation
2022-08-11 21:01:49,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:02:56,250:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,531:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,640:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,673:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,752:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:02:56,979:INFO:Calculating mean and std
2022-08-11 21:02:56,981:INFO:Creating metrics dataframe
2022-08-11 21:02:56,985:INFO:Uploading results into container
2022-08-11 21:02:56,985:INFO:Uploading model into container now
2022-08-11 21:02:56,986:INFO:master_model_container: 13
2022-08-11 21:02:56,986:INFO:display_container: 2
2022-08-11 21:02:56,986:INFO:RandomForestRegressor(n_jobs=-1, random_state=2300)
2022-08-11 21:02:56,986:INFO:create_model() successfully completed......................................
2022-08-11 21:02:57,050:INFO:SubProcess create_model() end ==================================
2022-08-11 21:02:57,050:INFO:Creating metrics dataframe
2022-08-11 21:02:57,058:INFO:Initializing Extra Trees Regressor
2022-08-11 21:02:57,058:INFO:Total runtime is 1.2993751962979634 minutes
2022-08-11 21:02:57,060:INFO:SubProcess create_model() called ==================================
2022-08-11 21:02:57,060:INFO:Initializing create_model()
2022-08-11 21:02:57,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:02:57,060:INFO:Checking exceptions
2022-08-11 21:02:57,064:INFO:Importing libraries
2022-08-11 21:02:57,064:INFO:Copying training dataset
2022-08-11 21:02:57,071:INFO:Defining folds
2022-08-11 21:02:57,071:INFO:Declaring metric variables
2022-08-11 21:02:57,073:INFO:Importing untrained model
2022-08-11 21:02:57,075:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:02:57,080:INFO:Starting cross validation
2022-08-11 21:02:57,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:03:23,006:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,066:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,098:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,107:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,155:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,156:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,177:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:23,198:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:24,278:INFO:Calculating mean and std
2022-08-11 21:03:24,279:INFO:Creating metrics dataframe
2022-08-11 21:03:24,281:INFO:Uploading results into container
2022-08-11 21:03:24,282:INFO:Uploading model into container now
2022-08-11 21:03:24,282:INFO:master_model_container: 14
2022-08-11 21:03:24,282:INFO:display_container: 2
2022-08-11 21:03:24,282:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2300)
2022-08-11 21:03:24,282:INFO:create_model() successfully completed......................................
2022-08-11 21:03:24,345:INFO:SubProcess create_model() end ==================================
2022-08-11 21:03:24,345:INFO:Creating metrics dataframe
2022-08-11 21:03:24,354:INFO:Initializing AdaBoost Regressor
2022-08-11 21:03:24,354:INFO:Total runtime is 1.7543110648790994 minutes
2022-08-11 21:03:24,356:INFO:SubProcess create_model() called ==================================
2022-08-11 21:03:24,356:INFO:Initializing create_model()
2022-08-11 21:03:24,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:03:24,357:INFO:Checking exceptions
2022-08-11 21:03:24,362:INFO:Importing libraries
2022-08-11 21:03:24,362:INFO:Copying training dataset
2022-08-11 21:03:24,370:INFO:Defining folds
2022-08-11 21:03:24,371:INFO:Declaring metric variables
2022-08-11 21:03:24,373:INFO:Importing untrained model
2022-08-11 21:03:24,376:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:03:24,380:INFO:Starting cross validation
2022-08-11 21:03:24,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:03:24,775:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:702: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2022-08-11 21:03:30,634:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,640:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,668:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,677:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,819:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:31,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:32,246:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:32,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:32,646:INFO:Calculating mean and std
2022-08-11 21:03:32,648:INFO:Creating metrics dataframe
2022-08-11 21:03:32,652:INFO:Uploading results into container
2022-08-11 21:03:32,653:INFO:Uploading model into container now
2022-08-11 21:03:32,653:INFO:master_model_container: 15
2022-08-11 21:03:32,654:INFO:display_container: 2
2022-08-11 21:03:32,654:INFO:AdaBoostRegressor(random_state=2300)
2022-08-11 21:03:32,654:INFO:create_model() successfully completed......................................
2022-08-11 21:03:32,734:INFO:SubProcess create_model() end ==================================
2022-08-11 21:03:32,734:INFO:Creating metrics dataframe
2022-08-11 21:03:32,742:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:03:32,742:INFO:Total runtime is 1.894119850794474 minutes
2022-08-11 21:03:32,744:INFO:SubProcess create_model() called ==================================
2022-08-11 21:03:32,744:INFO:Initializing create_model()
2022-08-11 21:03:32,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:03:32,745:INFO:Checking exceptions
2022-08-11 21:03:32,756:INFO:Importing libraries
2022-08-11 21:03:32,756:INFO:Copying training dataset
2022-08-11 21:03:32,769:INFO:Defining folds
2022-08-11 21:03:32,769:INFO:Declaring metric variables
2022-08-11 21:03:32,771:INFO:Importing untrained model
2022-08-11 21:03:32,773:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:03:32,778:INFO:Starting cross validation
2022-08-11 21:03:32,779:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:03:48,356:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,380:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,412:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,442:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,447:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,512:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:48,766:INFO:Calculating mean and std
2022-08-11 21:03:48,768:INFO:Creating metrics dataframe
2022-08-11 21:03:48,771:INFO:Uploading results into container
2022-08-11 21:03:48,772:INFO:Uploading model into container now
2022-08-11 21:03:48,772:INFO:master_model_container: 16
2022-08-11 21:03:48,772:INFO:display_container: 2
2022-08-11 21:03:48,773:INFO:GradientBoostingRegressor(random_state=2300)
2022-08-11 21:03:48,773:INFO:create_model() successfully completed......................................
2022-08-11 21:03:48,839:INFO:SubProcess create_model() end ==================================
2022-08-11 21:03:48,839:INFO:Creating metrics dataframe
2022-08-11 21:03:48,847:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:03:48,848:INFO:Total runtime is 2.162541313966115 minutes
2022-08-11 21:03:48,850:INFO:SubProcess create_model() called ==================================
2022-08-11 21:03:48,850:INFO:Initializing create_model()
2022-08-11 21:03:48,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:03:48,850:INFO:Checking exceptions
2022-08-11 21:03:48,859:INFO:Importing libraries
2022-08-11 21:03:48,859:INFO:Copying training dataset
2022-08-11 21:03:48,869:INFO:Defining folds
2022-08-11 21:03:48,869:INFO:Declaring metric variables
2022-08-11 21:03:48,871:INFO:Importing untrained model
2022-08-11 21:03:48,874:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:03:48,879:INFO:Starting cross validation
2022-08-11 21:03:48,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:03:58,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,817:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,891:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,915:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,920:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,922:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:58,998:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,122:INFO:Calculating mean and std
2022-08-11 21:03:59,124:INFO:Creating metrics dataframe
2022-08-11 21:03:59,127:INFO:Uploading results into container
2022-08-11 21:03:59,128:INFO:Uploading model into container now
2022-08-11 21:03:59,128:INFO:master_model_container: 17
2022-08-11 21:03:59,128:INFO:display_container: 2
2022-08-11 21:03:59,129:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=2300,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:03:59,129:INFO:create_model() successfully completed......................................
2022-08-11 21:03:59,192:INFO:SubProcess create_model() end ==================================
2022-08-11 21:03:59,192:INFO:Creating metrics dataframe
2022-08-11 21:03:59,200:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:03:59,200:INFO:Total runtime is 2.3350864489873246 minutes
2022-08-11 21:03:59,202:INFO:SubProcess create_model() called ==================================
2022-08-11 21:03:59,202:INFO:Initializing create_model()
2022-08-11 21:03:59,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:03:59,203:INFO:Checking exceptions
2022-08-11 21:03:59,207:INFO:Importing libraries
2022-08-11 21:03:59,207:INFO:Copying training dataset
2022-08-11 21:03:59,214:INFO:Defining folds
2022-08-11 21:03:59,214:INFO:Declaring metric variables
2022-08-11 21:03:59,216:INFO:Importing untrained model
2022-08-11 21:03:59,218:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:03:59,223:INFO:Starting cross validation
2022-08-11 21:03:59,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:03:59,807:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,841:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,843:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,855:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,884:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:03:59,898:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,032:INFO:Calculating mean and std
2022-08-11 21:04:00,034:INFO:Creating metrics dataframe
2022-08-11 21:04:00,038:INFO:Uploading results into container
2022-08-11 21:04:00,038:INFO:Uploading model into container now
2022-08-11 21:04:00,039:INFO:master_model_container: 18
2022-08-11 21:04:00,039:INFO:display_container: 2
2022-08-11 21:04:00,039:INFO:LGBMRegressor(random_state=2300)
2022-08-11 21:04:00,039:INFO:create_model() successfully completed......................................
2022-08-11 21:04:00,105:INFO:SubProcess create_model() end ==================================
2022-08-11 21:04:00,106:INFO:Creating metrics dataframe
2022-08-11 21:04:00,114:INFO:Initializing Dummy Regressor
2022-08-11 21:04:00,114:INFO:Total runtime is 2.3503189166386917 minutes
2022-08-11 21:04:00,116:INFO:SubProcess create_model() called ==================================
2022-08-11 21:04:00,117:INFO:Initializing create_model()
2022-08-11 21:04:00,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf2920a0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:04:00,117:INFO:Checking exceptions
2022-08-11 21:04:00,123:INFO:Importing libraries
2022-08-11 21:04:00,123:INFO:Copying training dataset
2022-08-11 21:04:00,131:INFO:Defining folds
2022-08-11 21:04:00,131:INFO:Declaring metric variables
2022-08-11 21:04:00,133:INFO:Importing untrained model
2022-08-11 21:04:00,135:INFO:Dummy Regressor Imported successfully
2022-08-11 21:04:00,141:INFO:Starting cross validation
2022-08-11 21:04:00,141:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:04:00,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,257:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,285:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:04:00,414:INFO:Calculating mean and std
2022-08-11 21:04:00,415:INFO:Creating metrics dataframe
2022-08-11 21:04:00,419:INFO:Uploading results into container
2022-08-11 21:04:00,419:INFO:Uploading model into container now
2022-08-11 21:04:00,420:INFO:master_model_container: 19
2022-08-11 21:04:00,420:INFO:display_container: 2
2022-08-11 21:04:00,420:INFO:DummyRegressor()
2022-08-11 21:04:00,420:INFO:create_model() successfully completed......................................
2022-08-11 21:04:00,483:INFO:SubProcess create_model() end ==================================
2022-08-11 21:04:00,483:INFO:Creating metrics dataframe
2022-08-11 21:04:00,496:INFO:Initializing create_model()
2022-08-11 21:04:00,496:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=GradientBoostingRegressor(random_state=2300), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:04:00,496:INFO:Checking exceptions
2022-08-11 21:04:00,502:INFO:Importing libraries
2022-08-11 21:04:00,502:INFO:Copying training dataset
2022-08-11 21:04:00,511:INFO:Defining folds
2022-08-11 21:04:00,512:INFO:Declaring metric variables
2022-08-11 21:04:00,512:INFO:Importing untrained model
2022-08-11 21:04:00,512:INFO:Declaring custom model
2022-08-11 21:04:00,512:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:04:00,513:INFO:Cross validation set to False
2022-08-11 21:04:00,513:INFO:Fitting Model
2022-08-11 21:04:15,550:INFO:GradientBoostingRegressor(random_state=2300)
2022-08-11 21:04:15,551:INFO:create_model() successfully completed......................................
2022-08-11 21:04:15,629:INFO:master_model_container: 19
2022-08-11 21:04:15,629:INFO:display_container: 2
2022-08-11 21:04:15,629:INFO:GradientBoostingRegressor(random_state=2300)
2022-08-11 21:04:15,629:INFO:compare_models() successfully completed......................................
2022-08-11 21:04:47,323:INFO:Initializing create_model()
2022-08-11 21:04:47,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:04:47,324:INFO:Checking exceptions
2022-08-11 21:04:47,361:INFO:Importing libraries
2022-08-11 21:04:47,361:INFO:Copying training dataset
2022-08-11 21:04:47,376:INFO:Defining folds
2022-08-11 21:04:47,376:INFO:Declaring metric variables
2022-08-11 21:04:47,379:INFO:Importing untrained model
2022-08-11 21:04:47,382:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:04:47,387:INFO:Starting cross validation
2022-08-11 21:04:47,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:05:02,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,027:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,081:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,105:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,120:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,182:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,186:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,197:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,208:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:05:03,331:INFO:Calculating mean and std
2022-08-11 21:05:03,333:INFO:Creating metrics dataframe
2022-08-11 21:05:03,339:INFO:Finalizing model
2022-08-11 21:05:18,178:INFO:Uploading results into container
2022-08-11 21:05:18,178:INFO:Uploading model into container now
2022-08-11 21:05:18,184:INFO:master_model_container: 20
2022-08-11 21:05:18,184:INFO:display_container: 3
2022-08-11 21:05:18,184:INFO:GradientBoostingRegressor(random_state=2300)
2022-08-11 21:05:18,184:INFO:create_model() successfully completed......................................
2022-08-11 21:08:52,116:INFO:Initializing tune_model()
2022-08-11 21:08:52,118:INFO:tune_model(estimator=gbr, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>)
2022-08-11 21:08:52,118:INFO:Checking exceptions
2022-08-11 21:10:55,676:INFO:Initializing plot_model()
2022-08-11 21:10:55,676:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=2300), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, system=True)
2022-08-11 21:10:55,677:INFO:Checking exceptions
2022-08-11 21:10:55,700:INFO:Preloading libraries
2022-08-11 21:10:55,707:INFO:Copying training dataset
2022-08-11 21:10:55,708:INFO:Plot type: residuals
2022-08-11 21:10:55,973:INFO:Fitting Model
2022-08-11 21:10:55,974:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2022-08-11 21:10:56,061:INFO:Scoring test/hold-out set
2022-08-11 21:10:56,818:INFO:Visual Rendered Successfully
2022-08-11 21:10:56,904:INFO:plot_model() successfully completed......................................
2022-08-11 21:11:14,159:INFO:Initializing predict_model()
2022-08-11 21:11:14,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=GradientBoostingRegressor(random_state=2300), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9867160>)
2022-08-11 21:11:14,163:INFO:Checking exceptions
2022-08-11 21:11:14,164:INFO:Preloading libraries
2022-08-11 21:19:26,491:INFO:Initializing finalize_model()
2022-08-11 21:19:26,492:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=GradientBoostingRegressor(random_state=2300), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:19:26,492:INFO:Finalizing GradientBoostingRegressor(random_state=2300)
2022-08-11 21:19:26,514:INFO:Initializing create_model()
2022-08-11 21:19:26,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=GradientBoostingRegressor(random_state=2300), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:19:26,514:INFO:Checking exceptions
2022-08-11 21:19:26,516:INFO:Importing libraries
2022-08-11 21:19:26,516:INFO:Copying training dataset
2022-08-11 21:19:26,517:INFO:Defining folds
2022-08-11 21:19:26,517:INFO:Declaring metric variables
2022-08-11 21:19:26,517:INFO:Importing untrained model
2022-08-11 21:19:26,517:INFO:Declaring custom model
2022-08-11 21:19:26,518:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:19:26,519:INFO:Cross validation set to False
2022-08-11 21:19:26,519:INFO:Fitting Model
2022-08-11 21:19:47,886:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=2300))])
2022-08-11 21:19:47,886:INFO:create_model() successfully completed......................................
2022-08-11 21:19:47,975:INFO:Initializing predict_model()
2022-08-11 21:19:47,975:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=2300))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ee9923ca0>)
2022-08-11 21:19:47,975:INFO:Checking exceptions
2022-08-11 21:19:47,975:INFO:Preloading libraries
2022-08-11 21:19:47,980:INFO:Set up data.
2022-08-11 21:19:48,223:INFO:display_container: 5
2022-08-11 21:19:48,223:INFO:master_model_container: 20
2022-08-11 21:19:48,223:INFO:display_container: 5
2022-08-11 21:19:48,227:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=2300))])
2022-08-11 21:19:48,227:INFO:finalize_model() successfully completed......................................
2022-08-11 21:19:50,625:INFO:Initializing predict_model()
2022-08-11 21:19:50,625:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=2300))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9867160>)
2022-08-11 21:19:50,625:INFO:Checking exceptions
2022-08-11 21:19:50,626:INFO:Preloading libraries
2022-08-11 21:19:50,636:INFO:Set up data.
2022-08-11 21:23:29,754:INFO:Initializing predict_model()
2022-08-11 21:23:29,754:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf292130>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=2300))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9867160>)
2022-08-11 21:23:29,754:INFO:Checking exceptions
2022-08-11 21:23:29,754:INFO:Preloading libraries
2022-08-11 21:23:29,765:INFO:Set up data.
2022-08-11 21:23:30,044:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/761052367.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_01'] = predict_model(model_y01, data=test_df)['prediction_label']

2022-08-11 21:24:22,839:INFO:PyCaret RegressionExperiment
2022-08-11 21:24:22,840:INFO:Logging name: reg-default-name
2022-08-11 21:24:22,840:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:24:22,840:INFO:version 3.0.0.rc3
2022-08-11 21:24:22,840:INFO:Initializing setup()
2022-08-11 21:24:22,840:INFO:self.USI: 0158
2022-08-11 21:24:22,840:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:24:22,840:INFO:Checking environment
2022-08-11 21:24:22,841:INFO:python_version: 3.8.8
2022-08-11 21:24:22,841:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:24:22,841:INFO:machine: x86_64
2022-08-11 21:24:22,841:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:24:22,841:INFO:Memory: svmem(total=34359738368, available=4626432000, percent=86.5, used=3794898944, free=1217458176, active=3374936064, inactive=2566766592, wired=419962880)
2022-08-11 21:24:22,841:INFO:Physical Core: 10
2022-08-11 21:24:22,841:INFO:Logical Core: 10
2022-08-11 21:24:22,841:INFO:Checking libraries
2022-08-11 21:24:22,841:INFO:System:
2022-08-11 21:24:22,842:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:24:22,842:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:24:22,842:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:24:22,842:INFO:PyCaret required dependencies:
2022-08-11 21:24:22,842:INFO:                 pip: 22.1.2
2022-08-11 21:24:22,842:INFO:          setuptools: 61.2.0
2022-08-11 21:24:22,842:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:24:22,842:INFO:             IPython: 8.4.0
2022-08-11 21:24:22,842:INFO:          ipywidgets: 7.6.5
2022-08-11 21:24:22,842:INFO:                tqdm: 4.64.0
2022-08-11 21:24:22,842:INFO:               numpy: 1.22.4
2022-08-11 21:24:22,842:INFO:              pandas: 1.4.3
2022-08-11 21:24:22,843:INFO:              jinja2: 3.0.3
2022-08-11 21:24:22,843:INFO:               scipy: 1.5.4
2022-08-11 21:24:22,843:INFO:              joblib: 1.1.0
2022-08-11 21:24:22,843:INFO:             sklearn: 1.1.1
2022-08-11 21:24:22,843:INFO:                pyod: 1.0.4
2022-08-11 21:24:22,843:INFO:            imblearn: 0.9.1
2022-08-11 21:24:22,843:INFO:   category_encoders: 2.5.0
2022-08-11 21:24:22,843:INFO:            lightgbm: 3.2.1
2022-08-11 21:24:22,843:INFO:               numba: 0.55.2
2022-08-11 21:24:22,843:INFO:            requests: 2.28.1
2022-08-11 21:24:22,843:INFO:          matplotlib: 3.5.1
2022-08-11 21:24:22,843:INFO:          scikitplot: 0.3.7
2022-08-11 21:24:22,843:INFO:         yellowbrick: 1.4
2022-08-11 21:24:22,844:INFO:              plotly: 5.9.0
2022-08-11 21:24:22,844:INFO:             kaleido: 0.2.1
2022-08-11 21:24:22,844:INFO:         statsmodels: 0.13.2
2022-08-11 21:24:22,844:INFO:              sktime: 0.13.0
2022-08-11 21:24:22,844:INFO:               tbats: 1.1.0
2022-08-11 21:24:22,844:INFO:            pmdarima: 1.8.5
2022-08-11 21:24:22,844:INFO:              psutil: 5.9.1
2022-08-11 21:24:22,844:INFO:PyCaret optional dependencies:
2022-08-11 21:24:22,845:INFO:                shap: Not installed
2022-08-11 21:24:22,845:INFO:           interpret: Not installed
2022-08-11 21:24:22,845:INFO:                umap: 0.5.3
2022-08-11 21:24:22,846:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:24:22,846:INFO:  explainerdashboard: Not installed
2022-08-11 21:24:22,846:INFO:             autoviz: Not installed
2022-08-11 21:24:22,846:INFO:           fairlearn: Not installed
2022-08-11 21:24:22,846:INFO:             xgboost: 1.6.1
2022-08-11 21:24:22,846:INFO:            catboost: Not installed
2022-08-11 21:24:22,846:INFO:              kmodes: 0.12.1
2022-08-11 21:24:22,846:INFO:             mlxtend: 0.19.0
2022-08-11 21:24:22,846:INFO:       statsforecast: Not installed
2022-08-11 21:24:22,848:INFO:        tune_sklearn: Not installed
2022-08-11 21:24:22,848:INFO:                 ray: Not installed
2022-08-11 21:24:22,848:INFO:            hyperopt: Not installed
2022-08-11 21:24:22,848:INFO:              optuna: Not installed
2022-08-11 21:24:22,848:INFO:               skopt: Not installed
2022-08-11 21:24:22,849:INFO:              mlflow: 1.27.0
2022-08-11 21:24:22,849:INFO:              gradio: Not installed
2022-08-11 21:24:22,849:INFO:             fastapi: Not installed
2022-08-11 21:24:22,849:INFO:             uvicorn: Not installed
2022-08-11 21:24:22,849:INFO:              m2cgen: Not installed
2022-08-11 21:24:22,849:INFO:           evidently: Not installed
2022-08-11 21:24:22,849:INFO:                nltk: 3.7
2022-08-11 21:24:22,849:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:24:22,849:INFO:              gensim: 3.8.3
2022-08-11 21:24:22,849:INFO:               spacy: 2.3.7
2022-08-11 21:24:22,849:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:24:22,849:INFO:            textblob: 0.17.1
2022-08-11 21:24:22,849:INFO:               fugue: Not installed
2022-08-11 21:24:22,850:INFO:           streamlit: Not installed
2022-08-11 21:24:22,850:INFO:             prophet: Not installed
2022-08-11 21:24:22,850:INFO:None
2022-08-11 21:24:22,850:INFO:Set up data.
2022-08-11 21:24:22,886:INFO:Set up train/test split.
2022-08-11 21:24:22,902:INFO:Set up folding strategy.
2022-08-11 21:24:22,903:INFO:Assigning column types.
2022-08-11 21:24:22,911:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:24:22,911:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:24:22,916:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:24:22,920:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:24:22,980:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,022:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,024:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,029:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,033:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,090:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,131:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,131:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,133:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:24:23,138:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,199:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,240:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,247:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,251:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,308:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,348:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,350:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:24:23,358:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,457:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,468:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,527:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,567:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,568:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,570:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:24:23,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,678:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,678:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,747:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,787:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,789:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:24:23,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:23,893:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:23,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:23,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:24:24,001:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:24,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:24,003:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:24:24,109:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:24,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:24,218:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:24,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:24,221:INFO:Preparing preprocessing pipeline...
2022-08-11 21:24:24,222:INFO:Set up simple imputation.
2022-08-11 21:24:24,222:INFO:Set up variance threshold.
2022-08-11 21:24:24,396:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:24:24,399:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:24:24,399:INFO:Creating final display dataframe.
2022-08-11 21:24:25,076:INFO:Setup display_container:                Description             Value
0               Session id              4216
1                   Target              Y_02
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              0158
2022-08-11 21:24:25,187:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:25,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:25,291:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:24:25,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:24:25,309:INFO:setup() successfully completed in 2.47s...............
2022-08-11 21:24:30,397:INFO:Initializing compare_models()
2022-08-11 21:24:30,398:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:24:30,398:INFO:Checking exceptions
2022-08-11 21:24:30,413:INFO:Preparing display monitor
2022-08-11 21:24:30,441:INFO:Initializing Linear Regression
2022-08-11 21:24:30,442:INFO:Total runtime is 3.7829081217447918e-06 minutes
2022-08-11 21:24:30,444:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:30,444:INFO:Initializing create_model()
2022-08-11 21:24:30,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:30,444:INFO:Checking exceptions
2022-08-11 21:24:30,450:INFO:Importing libraries
2022-08-11 21:24:30,450:INFO:Copying training dataset
2022-08-11 21:24:30,457:INFO:Defining folds
2022-08-11 21:24:30,458:INFO:Declaring metric variables
2022-08-11 21:24:30,460:INFO:Importing untrained model
2022-08-11 21:24:30,463:INFO:Linear Regression Imported successfully
2022-08-11 21:24:30,468:INFO:Starting cross validation
2022-08-11 21:24:30,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:32,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:32,987:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,004:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,043:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,162:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,423:INFO:Calculating mean and std
2022-08-11 21:24:33,426:INFO:Creating metrics dataframe
2022-08-11 21:24:33,430:INFO:Uploading results into container
2022-08-11 21:24:33,430:INFO:Uploading model into container now
2022-08-11 21:24:33,431:INFO:master_model_container: 1
2022-08-11 21:24:33,431:INFO:display_container: 2
2022-08-11 21:24:33,431:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:24:33,431:INFO:create_model() successfully completed......................................
2022-08-11 21:24:33,548:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:33,548:INFO:Creating metrics dataframe
2022-08-11 21:24:33,554:INFO:Initializing Lasso Regression
2022-08-11 21:24:33,554:INFO:Total runtime is 0.05187983115514119 minutes
2022-08-11 21:24:33,556:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:33,557:INFO:Initializing create_model()
2022-08-11 21:24:33,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:33,557:INFO:Checking exceptions
2022-08-11 21:24:33,568:INFO:Importing libraries
2022-08-11 21:24:33,568:INFO:Copying training dataset
2022-08-11 21:24:33,585:INFO:Defining folds
2022-08-11 21:24:33,585:INFO:Declaring metric variables
2022-08-11 21:24:33,587:INFO:Importing untrained model
2022-08-11 21:24:33,590:INFO:Lasso Regression Imported successfully
2022-08-11 21:24:33,594:INFO:Starting cross validation
2022-08-11 21:24:33,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:33,733:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,742:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,743:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,749:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,758:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,764:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,789:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,795:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,812:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:33,928:INFO:Calculating mean and std
2022-08-11 21:24:33,930:INFO:Creating metrics dataframe
2022-08-11 21:24:33,934:INFO:Uploading results into container
2022-08-11 21:24:33,934:INFO:Uploading model into container now
2022-08-11 21:24:33,935:INFO:master_model_container: 2
2022-08-11 21:24:33,935:INFO:display_container: 2
2022-08-11 21:24:33,935:INFO:Lasso(random_state=4216)
2022-08-11 21:24:33,935:INFO:create_model() successfully completed......................................
2022-08-11 21:24:34,024:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:34,024:INFO:Creating metrics dataframe
2022-08-11 21:24:34,031:INFO:Initializing Ridge Regression
2022-08-11 21:24:34,031:INFO:Total runtime is 0.0598263144493103 minutes
2022-08-11 21:24:34,033:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:34,033:INFO:Initializing create_model()
2022-08-11 21:24:34,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:34,033:INFO:Checking exceptions
2022-08-11 21:24:34,040:INFO:Importing libraries
2022-08-11 21:24:34,040:INFO:Copying training dataset
2022-08-11 21:24:34,050:INFO:Defining folds
2022-08-11 21:24:34,050:INFO:Declaring metric variables
2022-08-11 21:24:34,053:INFO:Importing untrained model
2022-08-11 21:24:34,055:INFO:Ridge Regression Imported successfully
2022-08-11 21:24:34,059:INFO:Starting cross validation
2022-08-11 21:24:34,060:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:34,186:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,192:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,193:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,194:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,205:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,208:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,342:INFO:Calculating mean and std
2022-08-11 21:24:34,344:INFO:Creating metrics dataframe
2022-08-11 21:24:34,347:INFO:Uploading results into container
2022-08-11 21:24:34,348:INFO:Uploading model into container now
2022-08-11 21:24:34,348:INFO:master_model_container: 3
2022-08-11 21:24:34,348:INFO:display_container: 2
2022-08-11 21:24:34,348:INFO:Ridge(random_state=4216)
2022-08-11 21:24:34,349:INFO:create_model() successfully completed......................................
2022-08-11 21:24:34,439:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:34,439:INFO:Creating metrics dataframe
2022-08-11 21:24:34,445:INFO:Initializing Elastic Net
2022-08-11 21:24:34,445:INFO:Total runtime is 0.06672706206639607 minutes
2022-08-11 21:24:34,447:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:34,447:INFO:Initializing create_model()
2022-08-11 21:24:34,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:34,448:INFO:Checking exceptions
2022-08-11 21:24:34,456:INFO:Importing libraries
2022-08-11 21:24:34,456:INFO:Copying training dataset
2022-08-11 21:24:34,465:INFO:Defining folds
2022-08-11 21:24:34,466:INFO:Declaring metric variables
2022-08-11 21:24:34,468:INFO:Importing untrained model
2022-08-11 21:24:34,471:INFO:Elastic Net Imported successfully
2022-08-11 21:24:34,475:INFO:Starting cross validation
2022-08-11 21:24:34,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:34,590:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,593:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,600:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,604:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,607:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,608:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,615:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,617:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,619:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,627:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:34,746:INFO:Calculating mean and std
2022-08-11 21:24:34,748:INFO:Creating metrics dataframe
2022-08-11 21:24:34,751:INFO:Uploading results into container
2022-08-11 21:24:34,752:INFO:Uploading model into container now
2022-08-11 21:24:34,752:INFO:master_model_container: 4
2022-08-11 21:24:34,753:INFO:display_container: 2
2022-08-11 21:24:34,753:INFO:ElasticNet(random_state=4216)
2022-08-11 21:24:34,753:INFO:create_model() successfully completed......................................
2022-08-11 21:24:34,848:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:34,848:INFO:Creating metrics dataframe
2022-08-11 21:24:34,855:INFO:Initializing Least Angle Regression
2022-08-11 21:24:34,855:INFO:Total runtime is 0.07356638113657633 minutes
2022-08-11 21:24:34,857:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:34,858:INFO:Initializing create_model()
2022-08-11 21:24:34,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:34,858:INFO:Checking exceptions
2022-08-11 21:24:34,862:INFO:Importing libraries
2022-08-11 21:24:34,863:INFO:Copying training dataset
2022-08-11 21:24:34,870:INFO:Defining folds
2022-08-11 21:24:34,871:INFO:Declaring metric variables
2022-08-11 21:24:34,873:INFO:Importing untrained model
2022-08-11 21:24:34,875:INFO:Least Angle Regression Imported successfully
2022-08-11 21:24:34,879:INFO:Starting cross validation
2022-08-11 21:24:34,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:34,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:34,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:34,995:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:34,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:34,998:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,003:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,010:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,014:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,015:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,019:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,019:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,028:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,037:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,044:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,173:INFO:Calculating mean and std
2022-08-11 21:24:35,175:INFO:Creating metrics dataframe
2022-08-11 21:24:35,178:INFO:Uploading results into container
2022-08-11 21:24:35,179:INFO:Uploading model into container now
2022-08-11 21:24:35,179:INFO:master_model_container: 5
2022-08-11 21:24:35,179:INFO:display_container: 2
2022-08-11 21:24:35,179:INFO:Lars(random_state=4216)
2022-08-11 21:24:35,179:INFO:create_model() successfully completed......................................
2022-08-11 21:24:35,270:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:35,270:INFO:Creating metrics dataframe
2022-08-11 21:24:35,277:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:24:35,278:INFO:Total runtime is 0.08060358365376791 minutes
2022-08-11 21:24:35,280:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:35,280:INFO:Initializing create_model()
2022-08-11 21:24:35,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:35,280:INFO:Checking exceptions
2022-08-11 21:24:35,285:INFO:Importing libraries
2022-08-11 21:24:35,285:INFO:Copying training dataset
2022-08-11 21:24:35,292:INFO:Defining folds
2022-08-11 21:24:35,293:INFO:Declaring metric variables
2022-08-11 21:24:35,295:INFO:Importing untrained model
2022-08-11 21:24:35,297:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:24:35,302:INFO:Starting cross validation
2022-08-11 21:24:35,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:35,416:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,418:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,418:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,432:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,441:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,442:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,455:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,480:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:24:35,490:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,493:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,613:INFO:Calculating mean and std
2022-08-11 21:24:35,614:INFO:Creating metrics dataframe
2022-08-11 21:24:35,618:INFO:Uploading results into container
2022-08-11 21:24:35,618:INFO:Uploading model into container now
2022-08-11 21:24:35,619:INFO:master_model_container: 6
2022-08-11 21:24:35,619:INFO:display_container: 2
2022-08-11 21:24:35,619:INFO:LassoLars(random_state=4216)
2022-08-11 21:24:35,619:INFO:create_model() successfully completed......................................
2022-08-11 21:24:35,713:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:35,713:INFO:Creating metrics dataframe
2022-08-11 21:24:35,720:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:24:35,720:INFO:Total runtime is 0.08797693252563477 minutes
2022-08-11 21:24:35,722:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:35,722:INFO:Initializing create_model()
2022-08-11 21:24:35,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:35,722:INFO:Checking exceptions
2022-08-11 21:24:35,731:INFO:Importing libraries
2022-08-11 21:24:35,731:INFO:Copying training dataset
2022-08-11 21:24:35,742:INFO:Defining folds
2022-08-11 21:24:35,742:INFO:Declaring metric variables
2022-08-11 21:24:35,744:INFO:Importing untrained model
2022-08-11 21:24:35,746:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:24:35,751:INFO:Starting cross validation
2022-08-11 21:24:35,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:35,858:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,859:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,860:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,863:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,874:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,884:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,899:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,914:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,925:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:35,930:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:24:35,941:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,057:INFO:Calculating mean and std
2022-08-11 21:24:36,059:INFO:Creating metrics dataframe
2022-08-11 21:24:36,062:INFO:Uploading results into container
2022-08-11 21:24:36,063:INFO:Uploading model into container now
2022-08-11 21:24:36,063:INFO:master_model_container: 7
2022-08-11 21:24:36,063:INFO:display_container: 2
2022-08-11 21:24:36,063:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:24:36,064:INFO:create_model() successfully completed......................................
2022-08-11 21:24:36,153:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:36,154:INFO:Creating metrics dataframe
2022-08-11 21:24:36,160:INFO:Initializing Bayesian Ridge
2022-08-11 21:24:36,160:INFO:Total runtime is 0.095316481590271 minutes
2022-08-11 21:24:36,162:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:36,162:INFO:Initializing create_model()
2022-08-11 21:24:36,162:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:36,162:INFO:Checking exceptions
2022-08-11 21:24:36,168:INFO:Importing libraries
2022-08-11 21:24:36,168:INFO:Copying training dataset
2022-08-11 21:24:36,180:INFO:Defining folds
2022-08-11 21:24:36,180:INFO:Declaring metric variables
2022-08-11 21:24:36,183:INFO:Importing untrained model
2022-08-11 21:24:36,185:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:24:36,189:INFO:Starting cross validation
2022-08-11 21:24:36,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:36,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,508:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,515:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,524:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,529:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,546:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,550:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,552:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,570:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:36,772:INFO:Calculating mean and std
2022-08-11 21:24:36,774:INFO:Creating metrics dataframe
2022-08-11 21:24:36,777:INFO:Uploading results into container
2022-08-11 21:24:36,778:INFO:Uploading model into container now
2022-08-11 21:24:36,778:INFO:master_model_container: 8
2022-08-11 21:24:36,778:INFO:display_container: 2
2022-08-11 21:24:36,779:INFO:BayesianRidge()
2022-08-11 21:24:36,779:INFO:create_model() successfully completed......................................
2022-08-11 21:24:36,872:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:36,872:INFO:Creating metrics dataframe
2022-08-11 21:24:36,879:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:24:36,879:INFO:Total runtime is 0.1072906494140625 minutes
2022-08-11 21:24:36,881:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:36,881:INFO:Initializing create_model()
2022-08-11 21:24:36,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:36,882:INFO:Checking exceptions
2022-08-11 21:24:36,886:INFO:Importing libraries
2022-08-11 21:24:36,886:INFO:Copying training dataset
2022-08-11 21:24:36,894:INFO:Defining folds
2022-08-11 21:24:36,894:INFO:Declaring metric variables
2022-08-11 21:24:36,896:INFO:Importing untrained model
2022-08-11 21:24:36,899:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:24:36,904:INFO:Starting cross validation
2022-08-11 21:24:36,904:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:37,064:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,078:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,104:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,130:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:37,247:INFO:Calculating mean and std
2022-08-11 21:24:37,249:INFO:Creating metrics dataframe
2022-08-11 21:24:37,252:INFO:Uploading results into container
2022-08-11 21:24:37,253:INFO:Uploading model into container now
2022-08-11 21:24:37,254:INFO:master_model_container: 9
2022-08-11 21:24:37,254:INFO:display_container: 2
2022-08-11 21:24:37,254:INFO:PassiveAggressiveRegressor(random_state=4216)
2022-08-11 21:24:37,254:INFO:create_model() successfully completed......................................
2022-08-11 21:24:37,350:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:37,350:INFO:Creating metrics dataframe
2022-08-11 21:24:37,358:INFO:Initializing Huber Regressor
2022-08-11 21:24:37,358:INFO:Total runtime is 0.11527777910232544 minutes
2022-08-11 21:24:37,360:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:37,360:INFO:Initializing create_model()
2022-08-11 21:24:37,360:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:37,360:INFO:Checking exceptions
2022-08-11 21:24:37,366:INFO:Importing libraries
2022-08-11 21:24:37,366:INFO:Copying training dataset
2022-08-11 21:24:37,377:INFO:Defining folds
2022-08-11 21:24:37,377:INFO:Declaring metric variables
2022-08-11 21:24:37,380:INFO:Importing untrained model
2022-08-11 21:24:37,382:INFO:Huber Regressor Imported successfully
2022-08-11 21:24:37,387:INFO:Starting cross validation
2022-08-11 21:24:37,388:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:38,155:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,156:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,218:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,219:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,230:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,233:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,262:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,305:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,319:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:24:38,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,440:INFO:Calculating mean and std
2022-08-11 21:24:38,442:INFO:Creating metrics dataframe
2022-08-11 21:24:38,446:INFO:Uploading results into container
2022-08-11 21:24:38,446:INFO:Uploading model into container now
2022-08-11 21:24:38,447:INFO:master_model_container: 10
2022-08-11 21:24:38,447:INFO:display_container: 2
2022-08-11 21:24:38,447:INFO:HuberRegressor()
2022-08-11 21:24:38,447:INFO:create_model() successfully completed......................................
2022-08-11 21:24:38,539:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:38,539:INFO:Creating metrics dataframe
2022-08-11 21:24:38,546:INFO:Initializing K Neighbors Regressor
2022-08-11 21:24:38,546:INFO:Total runtime is 0.1350783109664917 minutes
2022-08-11 21:24:38,548:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:38,548:INFO:Initializing create_model()
2022-08-11 21:24:38,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:38,548:INFO:Checking exceptions
2022-08-11 21:24:38,553:INFO:Importing libraries
2022-08-11 21:24:38,553:INFO:Copying training dataset
2022-08-11 21:24:38,561:INFO:Defining folds
2022-08-11 21:24:38,561:INFO:Declaring metric variables
2022-08-11 21:24:38,563:INFO:Importing untrained model
2022-08-11 21:24:38,566:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:24:38,570:INFO:Starting cross validation
2022-08-11 21:24:38,571:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:38,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,687:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,695:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,722:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:38,752:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:39,609:INFO:Calculating mean and std
2022-08-11 21:24:39,611:INFO:Creating metrics dataframe
2022-08-11 21:24:39,614:INFO:Uploading results into container
2022-08-11 21:24:39,615:INFO:Uploading model into container now
2022-08-11 21:24:39,615:INFO:master_model_container: 11
2022-08-11 21:24:39,615:INFO:display_container: 2
2022-08-11 21:24:39,616:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:24:39,616:INFO:create_model() successfully completed......................................
2022-08-11 21:24:39,706:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:39,706:INFO:Creating metrics dataframe
2022-08-11 21:24:39,714:INFO:Initializing Decision Tree Regressor
2022-08-11 21:24:39,714:INFO:Total runtime is 0.15454107920328775 minutes
2022-08-11 21:24:39,716:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:39,716:INFO:Initializing create_model()
2022-08-11 21:24:39,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:39,716:INFO:Checking exceptions
2022-08-11 21:24:39,721:INFO:Importing libraries
2022-08-11 21:24:39,721:INFO:Copying training dataset
2022-08-11 21:24:39,729:INFO:Defining folds
2022-08-11 21:24:39,729:INFO:Declaring metric variables
2022-08-11 21:24:39,732:INFO:Importing untrained model
2022-08-11 21:24:39,734:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:24:39,738:INFO:Starting cross validation
2022-08-11 21:24:39,739:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:24:40,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:40,909:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:40,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:40,930:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:40,957:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:40,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:41,020:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:41,049:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:41,087:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:41,131:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:24:41,253:INFO:Calculating mean and std
2022-08-11 21:24:41,255:INFO:Creating metrics dataframe
2022-08-11 21:24:41,259:INFO:Uploading results into container
2022-08-11 21:24:41,259:INFO:Uploading model into container now
2022-08-11 21:24:41,259:INFO:master_model_container: 12
2022-08-11 21:24:41,260:INFO:display_container: 2
2022-08-11 21:24:41,260:INFO:DecisionTreeRegressor(random_state=4216)
2022-08-11 21:24:41,260:INFO:create_model() successfully completed......................................
2022-08-11 21:24:41,355:INFO:SubProcess create_model() end ==================================
2022-08-11 21:24:41,356:INFO:Creating metrics dataframe
2022-08-11 21:24:41,363:INFO:Initializing Random Forest Regressor
2022-08-11 21:24:41,364:INFO:Total runtime is 0.18203824758529663 minutes
2022-08-11 21:24:41,366:INFO:SubProcess create_model() called ==================================
2022-08-11 21:24:41,366:INFO:Initializing create_model()
2022-08-11 21:24:41,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:24:41,366:INFO:Checking exceptions
2022-08-11 21:24:41,371:INFO:Importing libraries
2022-08-11 21:24:41,371:INFO:Copying training dataset
2022-08-11 21:24:41,379:INFO:Defining folds
2022-08-11 21:24:41,380:INFO:Declaring metric variables
2022-08-11 21:24:41,382:INFO:Importing untrained model
2022-08-11 21:24:41,385:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:24:41,393:INFO:Starting cross validation
2022-08-11 21:24:41,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:25:53,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,519:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,634:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,728:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,861:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:53,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:54,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:25:54,350:INFO:Calculating mean and std
2022-08-11 21:25:54,352:INFO:Creating metrics dataframe
2022-08-11 21:25:54,355:INFO:Uploading results into container
2022-08-11 21:25:54,356:INFO:Uploading model into container now
2022-08-11 21:25:54,356:INFO:master_model_container: 13
2022-08-11 21:25:54,356:INFO:display_container: 2
2022-08-11 21:25:54,356:INFO:RandomForestRegressor(n_jobs=-1, random_state=4216)
2022-08-11 21:25:54,356:INFO:create_model() successfully completed......................................
2022-08-11 21:25:54,448:INFO:SubProcess create_model() end ==================================
2022-08-11 21:25:54,448:INFO:Creating metrics dataframe
2022-08-11 21:25:54,455:INFO:Initializing Extra Trees Regressor
2022-08-11 21:25:54,456:INFO:Total runtime is 1.4002379179000854 minutes
2022-08-11 21:25:54,458:INFO:SubProcess create_model() called ==================================
2022-08-11 21:25:54,458:INFO:Initializing create_model()
2022-08-11 21:25:54,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:25:54,458:INFO:Checking exceptions
2022-08-11 21:25:54,463:INFO:Importing libraries
2022-08-11 21:25:54,463:INFO:Copying training dataset
2022-08-11 21:25:54,472:INFO:Defining folds
2022-08-11 21:25:54,472:INFO:Declaring metric variables
2022-08-11 21:25:54,475:INFO:Importing untrained model
2022-08-11 21:25:54,477:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:25:54,481:INFO:Starting cross validation
2022-08-11 21:25:54,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:26:22,536:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:22,686:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:22,703:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:22,709:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:22,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:22,778:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:22,785:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:23,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:23,039:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:23,098:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:24,292:INFO:Calculating mean and std
2022-08-11 21:26:24,293:INFO:Creating metrics dataframe
2022-08-11 21:26:24,295:INFO:Uploading results into container
2022-08-11 21:26:24,296:INFO:Uploading model into container now
2022-08-11 21:26:24,296:INFO:master_model_container: 14
2022-08-11 21:26:24,296:INFO:display_container: 2
2022-08-11 21:26:24,296:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4216)
2022-08-11 21:26:24,296:INFO:create_model() successfully completed......................................
2022-08-11 21:26:24,392:INFO:SubProcess create_model() end ==================================
2022-08-11 21:26:24,392:INFO:Creating metrics dataframe
2022-08-11 21:26:24,401:INFO:Initializing AdaBoost Regressor
2022-08-11 21:26:24,401:INFO:Total runtime is 1.8993274490038554 minutes
2022-08-11 21:26:24,403:INFO:SubProcess create_model() called ==================================
2022-08-11 21:26:24,403:INFO:Initializing create_model()
2022-08-11 21:26:24,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:26:24,403:INFO:Checking exceptions
2022-08-11 21:26:24,408:INFO:Importing libraries
2022-08-11 21:26:24,408:INFO:Copying training dataset
2022-08-11 21:26:24,420:INFO:Defining folds
2022-08-11 21:26:24,420:INFO:Declaring metric variables
2022-08-11 21:26:24,423:INFO:Importing untrained model
2022-08-11 21:26:24,426:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:26:24,431:INFO:Starting cross validation
2022-08-11 21:26:24,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:26:30,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:30,333:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,226:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,283:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,297:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,344:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,400:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:32,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:33,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:33,363:INFO:Calculating mean and std
2022-08-11 21:26:33,366:INFO:Creating metrics dataframe
2022-08-11 21:26:33,371:INFO:Uploading results into container
2022-08-11 21:26:33,371:INFO:Uploading model into container now
2022-08-11 21:26:33,372:INFO:master_model_container: 15
2022-08-11 21:26:33,372:INFO:display_container: 2
2022-08-11 21:26:33,372:INFO:AdaBoostRegressor(random_state=4216)
2022-08-11 21:26:33,372:INFO:create_model() successfully completed......................................
2022-08-11 21:26:33,484:INFO:SubProcess create_model() end ==================================
2022-08-11 21:26:33,484:INFO:Creating metrics dataframe
2022-08-11 21:26:33,493:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:26:33,493:INFO:Total runtime is 2.050863866011302 minutes
2022-08-11 21:26:33,496:INFO:SubProcess create_model() called ==================================
2022-08-11 21:26:33,497:INFO:Initializing create_model()
2022-08-11 21:26:33,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:26:33,497:INFO:Checking exceptions
2022-08-11 21:26:33,508:INFO:Importing libraries
2022-08-11 21:26:33,508:INFO:Copying training dataset
2022-08-11 21:26:33,523:INFO:Defining folds
2022-08-11 21:26:33,523:INFO:Declaring metric variables
2022-08-11 21:26:33,526:INFO:Importing untrained model
2022-08-11 21:26:33,529:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:26:33,533:INFO:Starting cross validation
2022-08-11 21:26:33,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:26:49,914:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:49,928:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:49,930:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:49,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:49,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:50,026:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:50,045:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:50,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:50,090:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:50,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:26:50,246:INFO:Calculating mean and std
2022-08-11 21:26:50,248:INFO:Creating metrics dataframe
2022-08-11 21:26:50,251:INFO:Uploading results into container
2022-08-11 21:26:50,252:INFO:Uploading model into container now
2022-08-11 21:26:50,252:INFO:master_model_container: 16
2022-08-11 21:26:50,252:INFO:display_container: 2
2022-08-11 21:26:50,253:INFO:GradientBoostingRegressor(random_state=4216)
2022-08-11 21:26:50,253:INFO:create_model() successfully completed......................................
2022-08-11 21:26:50,345:INFO:SubProcess create_model() end ==================================
2022-08-11 21:26:50,345:INFO:Creating metrics dataframe
2022-08-11 21:26:50,354:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:26:50,354:INFO:Total runtime is 2.3318762660026553 minutes
2022-08-11 21:26:50,356:INFO:SubProcess create_model() called ==================================
2022-08-11 21:26:50,356:INFO:Initializing create_model()
2022-08-11 21:26:50,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:26:50,356:INFO:Checking exceptions
2022-08-11 21:26:50,363:INFO:Importing libraries
2022-08-11 21:26:50,363:INFO:Copying training dataset
2022-08-11 21:26:50,376:INFO:Defining folds
2022-08-11 21:26:50,376:INFO:Declaring metric variables
2022-08-11 21:26:50,378:INFO:Importing untrained model
2022-08-11 21:26:50,380:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:26:50,384:INFO:Starting cross validation
2022-08-11 21:26:50,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:27:00,554:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,572:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,671:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,705:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,708:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,709:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,725:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:00,856:INFO:Calculating mean and std
2022-08-11 21:27:00,858:INFO:Creating metrics dataframe
2022-08-11 21:27:00,861:INFO:Uploading results into container
2022-08-11 21:27:00,862:INFO:Uploading model into container now
2022-08-11 21:27:00,862:INFO:master_model_container: 17
2022-08-11 21:27:00,862:INFO:display_container: 2
2022-08-11 21:27:00,863:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=4216,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:27:00,863:INFO:create_model() successfully completed......................................
2022-08-11 21:27:00,957:INFO:SubProcess create_model() end ==================================
2022-08-11 21:27:00,957:INFO:Creating metrics dataframe
2022-08-11 21:27:00,966:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:27:00,966:INFO:Total runtime is 2.508745829264323 minutes
2022-08-11 21:27:00,968:INFO:SubProcess create_model() called ==================================
2022-08-11 21:27:00,969:INFO:Initializing create_model()
2022-08-11 21:27:00,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:27:00,969:INFO:Checking exceptions
2022-08-11 21:27:00,974:INFO:Importing libraries
2022-08-11 21:27:00,974:INFO:Copying training dataset
2022-08-11 21:27:00,992:INFO:Defining folds
2022-08-11 21:27:00,992:INFO:Declaring metric variables
2022-08-11 21:27:00,994:INFO:Importing untrained model
2022-08-11 21:27:00,997:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:27:01,002:INFO:Starting cross validation
2022-08-11 21:27:01,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:27:01,655:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,660:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,668:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,677:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,678:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,692:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,829:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:01,963:INFO:Calculating mean and std
2022-08-11 21:27:01,965:INFO:Creating metrics dataframe
2022-08-11 21:27:01,968:INFO:Uploading results into container
2022-08-11 21:27:01,969:INFO:Uploading model into container now
2022-08-11 21:27:01,969:INFO:master_model_container: 18
2022-08-11 21:27:01,969:INFO:display_container: 2
2022-08-11 21:27:01,970:INFO:LGBMRegressor(random_state=4216)
2022-08-11 21:27:01,970:INFO:create_model() successfully completed......................................
2022-08-11 21:27:02,062:INFO:SubProcess create_model() end ==================================
2022-08-11 21:27:02,062:INFO:Creating metrics dataframe
2022-08-11 21:27:02,072:INFO:Initializing Dummy Regressor
2022-08-11 21:27:02,072:INFO:Total runtime is 2.527179781595866 minutes
2022-08-11 21:27:02,074:INFO:SubProcess create_model() called ==================================
2022-08-11 21:27:02,074:INFO:Initializing create_model()
2022-08-11 21:27:02,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a800e50>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:27:02,074:INFO:Checking exceptions
2022-08-11 21:27:02,079:INFO:Importing libraries
2022-08-11 21:27:02,079:INFO:Copying training dataset
2022-08-11 21:27:02,087:INFO:Defining folds
2022-08-11 21:27:02,087:INFO:Declaring metric variables
2022-08-11 21:27:02,090:INFO:Importing untrained model
2022-08-11 21:27:02,092:INFO:Dummy Regressor Imported successfully
2022-08-11 21:27:02,096:INFO:Starting cross validation
2022-08-11 21:27:02,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:27:02,209:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,209:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,211:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,211:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,216:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,220:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,266:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:27:02,394:INFO:Calculating mean and std
2022-08-11 21:27:02,396:INFO:Creating metrics dataframe
2022-08-11 21:27:02,400:INFO:Uploading results into container
2022-08-11 21:27:02,400:INFO:Uploading model into container now
2022-08-11 21:27:02,401:INFO:master_model_container: 19
2022-08-11 21:27:02,401:INFO:display_container: 2
2022-08-11 21:27:02,401:INFO:DummyRegressor()
2022-08-11 21:27:02,401:INFO:create_model() successfully completed......................................
2022-08-11 21:27:02,494:INFO:SubProcess create_model() end ==================================
2022-08-11 21:27:02,494:INFO:Creating metrics dataframe
2022-08-11 21:27:02,510:INFO:Initializing create_model()
2022-08-11 21:27:02,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=GradientBoostingRegressor(random_state=4216), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:27:02,511:INFO:Checking exceptions
2022-08-11 21:27:02,517:INFO:Importing libraries
2022-08-11 21:27:02,517:INFO:Copying training dataset
2022-08-11 21:27:02,524:INFO:Defining folds
2022-08-11 21:27:02,524:INFO:Declaring metric variables
2022-08-11 21:27:02,524:INFO:Importing untrained model
2022-08-11 21:27:02,524:INFO:Declaring custom model
2022-08-11 21:27:02,525:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:27:02,525:INFO:Cross validation set to False
2022-08-11 21:27:02,525:INFO:Fitting Model
2022-08-11 21:27:17,739:INFO:GradientBoostingRegressor(random_state=4216)
2022-08-11 21:27:17,739:INFO:create_model() successfully completed......................................
2022-08-11 21:27:17,845:INFO:master_model_container: 19
2022-08-11 21:27:17,845:INFO:display_container: 2
2022-08-11 21:27:17,845:INFO:GradientBoostingRegressor(random_state=4216)
2022-08-11 21:27:17,845:INFO:compare_models() successfully completed......................................
2022-08-11 21:27:45,254:INFO:Initializing create_model()
2022-08-11 21:27:45,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:27:45,255:INFO:Checking exceptions
2022-08-11 21:27:45,290:INFO:Importing libraries
2022-08-11 21:27:45,290:INFO:Copying training dataset
2022-08-11 21:27:45,301:INFO:Defining folds
2022-08-11 21:27:45,301:INFO:Declaring metric variables
2022-08-11 21:27:45,304:INFO:Importing untrained model
2022-08-11 21:27:45,307:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:27:45,313:INFO:Starting cross validation
2022-08-11 21:27:45,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:28:01,491:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,543:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,547:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,567:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,570:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,583:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,588:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,620:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,648:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:28:01,767:INFO:Calculating mean and std
2022-08-11 21:28:01,769:INFO:Creating metrics dataframe
2022-08-11 21:28:01,774:INFO:Finalizing model
2022-08-11 21:28:16,754:INFO:Uploading results into container
2022-08-11 21:28:16,754:INFO:Uploading model into container now
2022-08-11 21:28:16,760:INFO:master_model_container: 20
2022-08-11 21:28:16,760:INFO:display_container: 3
2022-08-11 21:28:16,761:INFO:GradientBoostingRegressor(random_state=4216)
2022-08-11 21:28:16,761:INFO:create_model() successfully completed......................................
2022-08-11 21:28:19,874:INFO:Initializing finalize_model()
2022-08-11 21:28:19,875:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=GradientBoostingRegressor(random_state=4216), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:28:19,875:INFO:Finalizing GradientBoostingRegressor(random_state=4216)
2022-08-11 21:28:19,892:INFO:Initializing create_model()
2022-08-11 21:28:19,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=GradientBoostingRegressor(random_state=4216), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:28:19,892:INFO:Checking exceptions
2022-08-11 21:28:19,894:INFO:Importing libraries
2022-08-11 21:28:19,894:INFO:Copying training dataset
2022-08-11 21:28:19,896:INFO:Defining folds
2022-08-11 21:28:19,896:INFO:Declaring metric variables
2022-08-11 21:28:19,896:INFO:Importing untrained model
2022-08-11 21:28:19,896:INFO:Declaring custom model
2022-08-11 21:28:19,897:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:28:19,897:INFO:Cross validation set to False
2022-08-11 21:28:19,897:INFO:Fitting Model
2022-08-11 21:28:41,384:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=4216))])
2022-08-11 21:28:41,384:INFO:create_model() successfully completed......................................
2022-08-11 21:28:41,476:INFO:Initializing predict_model()
2022-08-11 21:28:41,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=4216))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7f08f21b80>)
2022-08-11 21:28:41,476:INFO:Checking exceptions
2022-08-11 21:28:41,476:INFO:Preloading libraries
2022-08-11 21:28:41,482:INFO:Set up data.
2022-08-11 21:28:41,730:INFO:display_container: 4
2022-08-11 21:28:41,730:INFO:master_model_container: 20
2022-08-11 21:28:41,730:INFO:display_container: 4
2022-08-11 21:28:41,734:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=4216))])
2022-08-11 21:28:41,734:INFO:finalize_model() successfully completed......................................
2022-08-11 21:28:41,832:INFO:Initializing predict_model()
2022-08-11 21:28:41,832:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebff98400>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=4216))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ebffb2820>)
2022-08-11 21:28:41,832:INFO:Checking exceptions
2022-08-11 21:28:41,832:INFO:Preloading libraries
2022-08-11 21:28:41,842:INFO:Set up data.
2022-08-11 21:28:42,327:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/2494218837.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_02'] = predict_model(model_y02, data=test_df)['prediction_label']

2022-08-11 21:28:57,767:INFO:PyCaret RegressionExperiment
2022-08-11 21:28:57,767:INFO:Logging name: reg-default-name
2022-08-11 21:28:57,767:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:28:57,767:INFO:version 3.0.0.rc3
2022-08-11 21:28:57,767:INFO:Initializing setup()
2022-08-11 21:28:57,767:INFO:self.USI: eded
2022-08-11 21:28:57,768:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:28:57,768:INFO:Checking environment
2022-08-11 21:28:57,768:INFO:python_version: 3.8.8
2022-08-11 21:28:57,768:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:28:57,768:INFO:machine: x86_64
2022-08-11 21:28:57,768:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:28:57,768:INFO:Memory: svmem(total=34359738368, available=4416688128, percent=87.1, used=4004642816, free=786583552, active=3593392128, inactive=3318677504, wired=411250688)
2022-08-11 21:28:57,769:INFO:Physical Core: 10
2022-08-11 21:28:57,769:INFO:Logical Core: 10
2022-08-11 21:28:57,769:INFO:Checking libraries
2022-08-11 21:28:57,769:INFO:System:
2022-08-11 21:28:57,769:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:28:57,769:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:28:57,770:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:28:57,770:INFO:PyCaret required dependencies:
2022-08-11 21:28:57,770:INFO:                 pip: 22.1.2
2022-08-11 21:28:57,770:INFO:          setuptools: 61.2.0
2022-08-11 21:28:57,770:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:28:57,770:INFO:             IPython: 8.4.0
2022-08-11 21:28:57,770:INFO:          ipywidgets: 7.6.5
2022-08-11 21:28:57,770:INFO:                tqdm: 4.64.0
2022-08-11 21:28:57,771:INFO:               numpy: 1.22.4
2022-08-11 21:28:57,771:INFO:              pandas: 1.4.3
2022-08-11 21:28:57,771:INFO:              jinja2: 3.0.3
2022-08-11 21:28:57,771:INFO:               scipy: 1.5.4
2022-08-11 21:28:57,771:INFO:              joblib: 1.1.0
2022-08-11 21:28:57,771:INFO:             sklearn: 1.1.1
2022-08-11 21:28:57,771:INFO:                pyod: 1.0.4
2022-08-11 21:28:57,771:INFO:            imblearn: 0.9.1
2022-08-11 21:28:57,771:INFO:   category_encoders: 2.5.0
2022-08-11 21:28:57,772:INFO:            lightgbm: 3.2.1
2022-08-11 21:28:57,772:INFO:               numba: 0.55.2
2022-08-11 21:28:57,772:INFO:            requests: 2.28.1
2022-08-11 21:28:57,772:INFO:          matplotlib: 3.5.1
2022-08-11 21:28:57,772:INFO:          scikitplot: 0.3.7
2022-08-11 21:28:57,772:INFO:         yellowbrick: 1.4
2022-08-11 21:28:57,772:INFO:              plotly: 5.9.0
2022-08-11 21:28:57,772:INFO:             kaleido: 0.2.1
2022-08-11 21:28:57,772:INFO:         statsmodels: 0.13.2
2022-08-11 21:28:57,773:INFO:              sktime: 0.13.0
2022-08-11 21:28:57,773:INFO:               tbats: 1.1.0
2022-08-11 21:28:57,773:INFO:            pmdarima: 1.8.5
2022-08-11 21:28:57,773:INFO:              psutil: 5.9.1
2022-08-11 21:28:57,773:INFO:PyCaret optional dependencies:
2022-08-11 21:28:57,773:INFO:                shap: Not installed
2022-08-11 21:28:57,773:INFO:           interpret: Not installed
2022-08-11 21:28:57,773:INFO:                umap: 0.5.3
2022-08-11 21:28:57,773:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:28:57,775:INFO:  explainerdashboard: Not installed
2022-08-11 21:28:57,775:INFO:             autoviz: Not installed
2022-08-11 21:28:57,775:INFO:           fairlearn: Not installed
2022-08-11 21:28:57,775:INFO:             xgboost: 1.6.1
2022-08-11 21:28:57,775:INFO:            catboost: Not installed
2022-08-11 21:28:57,775:INFO:              kmodes: 0.12.1
2022-08-11 21:28:57,775:INFO:             mlxtend: 0.19.0
2022-08-11 21:28:57,776:INFO:       statsforecast: Not installed
2022-08-11 21:28:57,776:INFO:        tune_sklearn: Not installed
2022-08-11 21:28:57,776:INFO:                 ray: Not installed
2022-08-11 21:28:57,776:INFO:            hyperopt: Not installed
2022-08-11 21:28:57,776:INFO:              optuna: Not installed
2022-08-11 21:28:57,776:INFO:               skopt: Not installed
2022-08-11 21:28:57,776:INFO:              mlflow: 1.27.0
2022-08-11 21:28:57,776:INFO:              gradio: Not installed
2022-08-11 21:28:57,776:INFO:             fastapi: Not installed
2022-08-11 21:28:57,776:INFO:             uvicorn: Not installed
2022-08-11 21:28:57,776:INFO:              m2cgen: Not installed
2022-08-11 21:28:57,776:INFO:           evidently: Not installed
2022-08-11 21:28:57,776:INFO:                nltk: 3.7
2022-08-11 21:28:57,776:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:28:57,776:INFO:              gensim: 3.8.3
2022-08-11 21:28:57,776:INFO:               spacy: 2.3.7
2022-08-11 21:28:57,776:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:28:57,776:INFO:            textblob: 0.17.1
2022-08-11 21:28:57,776:INFO:               fugue: Not installed
2022-08-11 21:28:57,776:INFO:           streamlit: Not installed
2022-08-11 21:28:57,776:INFO:             prophet: Not installed
2022-08-11 21:28:57,776:INFO:None
2022-08-11 21:28:57,776:INFO:Set up data.
2022-08-11 21:28:57,809:INFO:Set up train/test split.
2022-08-11 21:28:57,833:INFO:Set up folding strategy.
2022-08-11 21:28:57,834:INFO:Assigning column types.
2022-08-11 21:28:57,845:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:28:57,852:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,856:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,861:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,923:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,964:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:57,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:57,967:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,971:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:28:57,975:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,032:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,074:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,076:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:28:58,080:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,084:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,141:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,183:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,189:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,193:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,292:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,294:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:28:58,303:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,361:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,402:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,402:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,413:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,476:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,516:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,519:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:28:58,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,624:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,731:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,733:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:28:58,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,836:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,904:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:28:58,943:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:58,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:58,946:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:28:59,048:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:59,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:59,156:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:28:59,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:28:59,158:INFO:Preparing preprocessing pipeline...
2022-08-11 21:28:59,160:INFO:Set up simple imputation.
2022-08-11 21:28:59,160:INFO:Set up variance threshold.
2022-08-11 21:28:59,331:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:28:59,334:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:28:59,334:INFO:Creating final display dataframe.
2022-08-11 21:29:00,015:INFO:Setup display_container:                Description             Value
0               Session id              1771
1                   Target              Y_03
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              eded
2022-08-11 21:29:00,126:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:29:00,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:29:00,229:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:29:00,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:29:00,247:INFO:setup() successfully completed in 2.48s...............
2022-08-11 21:29:02,114:INFO:Initializing compare_models()
2022-08-11 21:29:02,115:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:29:02,115:INFO:Checking exceptions
2022-08-11 21:29:02,129:INFO:Preparing display monitor
2022-08-11 21:29:02,156:INFO:Initializing Linear Regression
2022-08-11 21:29:02,156:INFO:Total runtime is 3.0001004536946616e-06 minutes
2022-08-11 21:29:02,158:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:02,158:INFO:Initializing create_model()
2022-08-11 21:29:02,159:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:02,159:INFO:Checking exceptions
2022-08-11 21:29:02,165:INFO:Importing libraries
2022-08-11 21:29:02,166:INFO:Copying training dataset
2022-08-11 21:29:02,174:INFO:Defining folds
2022-08-11 21:29:02,174:INFO:Declaring metric variables
2022-08-11 21:29:02,176:INFO:Importing untrained model
2022-08-11 21:29:02,179:INFO:Linear Regression Imported successfully
2022-08-11 21:29:02,183:INFO:Starting cross validation
2022-08-11 21:29:02,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:02,814:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,823:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,884:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,898:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:02,902:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,162:INFO:Calculating mean and std
2022-08-11 21:29:03,164:INFO:Creating metrics dataframe
2022-08-11 21:29:03,167:INFO:Uploading results into container
2022-08-11 21:29:03,167:INFO:Uploading model into container now
2022-08-11 21:29:03,168:INFO:master_model_container: 1
2022-08-11 21:29:03,168:INFO:display_container: 2
2022-08-11 21:29:03,168:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:29:03,168:INFO:create_model() successfully completed......................................
2022-08-11 21:29:03,262:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:03,262:INFO:Creating metrics dataframe
2022-08-11 21:29:03,268:INFO:Initializing Lasso Regression
2022-08-11 21:29:03,268:INFO:Total runtime is 0.01853339672088623 minutes
2022-08-11 21:29:03,270:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:03,270:INFO:Initializing create_model()
2022-08-11 21:29:03,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:03,270:INFO:Checking exceptions
2022-08-11 21:29:03,275:INFO:Importing libraries
2022-08-11 21:29:03,276:INFO:Copying training dataset
2022-08-11 21:29:03,283:INFO:Defining folds
2022-08-11 21:29:03,283:INFO:Declaring metric variables
2022-08-11 21:29:03,285:INFO:Importing untrained model
2022-08-11 21:29:03,288:INFO:Lasso Regression Imported successfully
2022-08-11 21:29:03,292:INFO:Starting cross validation
2022-08-11 21:29:03,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:03,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,436:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,620:INFO:Calculating mean and std
2022-08-11 21:29:03,622:INFO:Creating metrics dataframe
2022-08-11 21:29:03,626:INFO:Uploading results into container
2022-08-11 21:29:03,627:INFO:Uploading model into container now
2022-08-11 21:29:03,627:INFO:master_model_container: 2
2022-08-11 21:29:03,627:INFO:display_container: 2
2022-08-11 21:29:03,628:INFO:Lasso(random_state=1771)
2022-08-11 21:29:03,628:INFO:create_model() successfully completed......................................
2022-08-11 21:29:03,719:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:03,719:INFO:Creating metrics dataframe
2022-08-11 21:29:03,726:INFO:Initializing Ridge Regression
2022-08-11 21:29:03,726:INFO:Total runtime is 0.026164233684539795 minutes
2022-08-11 21:29:03,728:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:03,729:INFO:Initializing create_model()
2022-08-11 21:29:03,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:03,729:INFO:Checking exceptions
2022-08-11 21:29:03,734:INFO:Importing libraries
2022-08-11 21:29:03,734:INFO:Copying training dataset
2022-08-11 21:29:03,742:INFO:Defining folds
2022-08-11 21:29:03,742:INFO:Declaring metric variables
2022-08-11 21:29:03,745:INFO:Importing untrained model
2022-08-11 21:29:03,747:INFO:Ridge Regression Imported successfully
2022-08-11 21:29:03,751:INFO:Starting cross validation
2022-08-11 21:29:03,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:03,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,876:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,876:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,906:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,912:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,928:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:03,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,096:INFO:Calculating mean and std
2022-08-11 21:29:04,098:INFO:Creating metrics dataframe
2022-08-11 21:29:04,102:INFO:Uploading results into container
2022-08-11 21:29:04,102:INFO:Uploading model into container now
2022-08-11 21:29:04,103:INFO:master_model_container: 3
2022-08-11 21:29:04,103:INFO:display_container: 2
2022-08-11 21:29:04,103:INFO:Ridge(random_state=1771)
2022-08-11 21:29:04,103:INFO:create_model() successfully completed......................................
2022-08-11 21:29:04,199:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:04,200:INFO:Creating metrics dataframe
2022-08-11 21:29:04,206:INFO:Initializing Elastic Net
2022-08-11 21:29:04,206:INFO:Total runtime is 0.03416843016942342 minutes
2022-08-11 21:29:04,208:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:04,209:INFO:Initializing create_model()
2022-08-11 21:29:04,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:04,209:INFO:Checking exceptions
2022-08-11 21:29:04,213:INFO:Importing libraries
2022-08-11 21:29:04,213:INFO:Copying training dataset
2022-08-11 21:29:04,221:INFO:Defining folds
2022-08-11 21:29:04,221:INFO:Declaring metric variables
2022-08-11 21:29:04,223:INFO:Importing untrained model
2022-08-11 21:29:04,225:INFO:Elastic Net Imported successfully
2022-08-11 21:29:04,230:INFO:Starting cross validation
2022-08-11 21:29:04,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:04,350:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,351:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,353:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,360:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,361:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,368:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,370:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,373:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,379:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,528:INFO:Calculating mean and std
2022-08-11 21:29:04,531:INFO:Creating metrics dataframe
2022-08-11 21:29:04,535:INFO:Uploading results into container
2022-08-11 21:29:04,535:INFO:Uploading model into container now
2022-08-11 21:29:04,536:INFO:master_model_container: 4
2022-08-11 21:29:04,536:INFO:display_container: 2
2022-08-11 21:29:04,536:INFO:ElasticNet(random_state=1771)
2022-08-11 21:29:04,536:INFO:create_model() successfully completed......................................
2022-08-11 21:29:04,633:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:04,634:INFO:Creating metrics dataframe
2022-08-11 21:29:04,640:INFO:Initializing Least Angle Regression
2022-08-11 21:29:04,640:INFO:Total runtime is 0.04140179951985677 minutes
2022-08-11 21:29:04,642:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:04,642:INFO:Initializing create_model()
2022-08-11 21:29:04,642:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:04,642:INFO:Checking exceptions
2022-08-11 21:29:04,647:INFO:Importing libraries
2022-08-11 21:29:04,647:INFO:Copying training dataset
2022-08-11 21:29:04,655:INFO:Defining folds
2022-08-11 21:29:04,656:INFO:Declaring metric variables
2022-08-11 21:29:04,658:INFO:Importing untrained model
2022-08-11 21:29:04,660:INFO:Least Angle Regression Imported successfully
2022-08-11 21:29:04,665:INFO:Starting cross validation
2022-08-11 21:29:04,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:04,777:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,781:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,787:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,786:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,796:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,797:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,798:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,806:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,815:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,821:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,822:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,824:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,824:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,826:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,831:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,857:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:04,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:04,992:INFO:Calculating mean and std
2022-08-11 21:29:04,994:INFO:Creating metrics dataframe
2022-08-11 21:29:04,998:INFO:Uploading results into container
2022-08-11 21:29:04,998:INFO:Uploading model into container now
2022-08-11 21:29:04,999:INFO:master_model_container: 5
2022-08-11 21:29:04,999:INFO:display_container: 2
2022-08-11 21:29:04,999:INFO:Lars(random_state=1771)
2022-08-11 21:29:04,999:INFO:create_model() successfully completed......................................
2022-08-11 21:29:05,091:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:05,091:INFO:Creating metrics dataframe
2022-08-11 21:29:05,098:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:29:05,098:INFO:Total runtime is 0.049032382170359295 minutes
2022-08-11 21:29:05,100:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:05,100:INFO:Initializing create_model()
2022-08-11 21:29:05,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:05,100:INFO:Checking exceptions
2022-08-11 21:29:05,106:INFO:Importing libraries
2022-08-11 21:29:05,106:INFO:Copying training dataset
2022-08-11 21:29:05,114:INFO:Defining folds
2022-08-11 21:29:05,114:INFO:Declaring metric variables
2022-08-11 21:29:05,116:INFO:Importing untrained model
2022-08-11 21:29:05,118:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:29:05,122:INFO:Starting cross validation
2022-08-11 21:29:05,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:05,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,244:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,256:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,285:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,348:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:29:05,357:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,476:INFO:Calculating mean and std
2022-08-11 21:29:05,478:INFO:Creating metrics dataframe
2022-08-11 21:29:05,481:INFO:Uploading results into container
2022-08-11 21:29:05,482:INFO:Uploading model into container now
2022-08-11 21:29:05,483:INFO:master_model_container: 6
2022-08-11 21:29:05,483:INFO:display_container: 2
2022-08-11 21:29:05,483:INFO:LassoLars(random_state=1771)
2022-08-11 21:29:05,483:INFO:create_model() successfully completed......................................
2022-08-11 21:29:05,577:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:05,577:INFO:Creating metrics dataframe
2022-08-11 21:29:05,584:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:29:05,584:INFO:Total runtime is 0.05712891817092896 minutes
2022-08-11 21:29:05,586:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:05,586:INFO:Initializing create_model()
2022-08-11 21:29:05,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:05,586:INFO:Checking exceptions
2022-08-11 21:29:05,590:INFO:Importing libraries
2022-08-11 21:29:05,591:INFO:Copying training dataset
2022-08-11 21:29:05,599:INFO:Defining folds
2022-08-11 21:29:05,599:INFO:Declaring metric variables
2022-08-11 21:29:05,601:INFO:Importing untrained model
2022-08-11 21:29:05,603:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:29:05,607:INFO:Starting cross validation
2022-08-11 21:29:05,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:05,717:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,717:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,717:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,728:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,733:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,733:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,745:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,749:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,753:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,762:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,772:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,780:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:29:05,783:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,790:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:05,907:INFO:Calculating mean and std
2022-08-11 21:29:05,909:INFO:Creating metrics dataframe
2022-08-11 21:29:05,912:INFO:Uploading results into container
2022-08-11 21:29:05,912:INFO:Uploading model into container now
2022-08-11 21:29:05,913:INFO:master_model_container: 7
2022-08-11 21:29:05,913:INFO:display_container: 2
2022-08-11 21:29:05,913:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:29:05,913:INFO:create_model() successfully completed......................................
2022-08-11 21:29:06,005:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:06,006:INFO:Creating metrics dataframe
2022-08-11 21:29:06,013:INFO:Initializing Bayesian Ridge
2022-08-11 21:29:06,013:INFO:Total runtime is 0.06428110202153524 minutes
2022-08-11 21:29:06,015:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:06,015:INFO:Initializing create_model()
2022-08-11 21:29:06,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:06,015:INFO:Checking exceptions
2022-08-11 21:29:06,020:INFO:Importing libraries
2022-08-11 21:29:06,020:INFO:Copying training dataset
2022-08-11 21:29:06,028:INFO:Defining folds
2022-08-11 21:29:06,028:INFO:Declaring metric variables
2022-08-11 21:29:06,031:INFO:Importing untrained model
2022-08-11 21:29:06,034:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:29:06,038:INFO:Starting cross validation
2022-08-11 21:29:06,039:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:06,378:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,397:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,400:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,400:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,405:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,412:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,424:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,545:INFO:Calculating mean and std
2022-08-11 21:29:06,547:INFO:Creating metrics dataframe
2022-08-11 21:29:06,550:INFO:Uploading results into container
2022-08-11 21:29:06,551:INFO:Uploading model into container now
2022-08-11 21:29:06,551:INFO:master_model_container: 8
2022-08-11 21:29:06,552:INFO:display_container: 2
2022-08-11 21:29:06,552:INFO:BayesianRidge()
2022-08-11 21:29:06,552:INFO:create_model() successfully completed......................................
2022-08-11 21:29:06,644:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:06,644:INFO:Creating metrics dataframe
2022-08-11 21:29:06,651:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:29:06,651:INFO:Total runtime is 0.07491374810536702 minutes
2022-08-11 21:29:06,653:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:06,653:INFO:Initializing create_model()
2022-08-11 21:29:06,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:06,653:INFO:Checking exceptions
2022-08-11 21:29:06,658:INFO:Importing libraries
2022-08-11 21:29:06,658:INFO:Copying training dataset
2022-08-11 21:29:06,666:INFO:Defining folds
2022-08-11 21:29:06,667:INFO:Declaring metric variables
2022-08-11 21:29:06,669:INFO:Importing untrained model
2022-08-11 21:29:06,672:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:29:06,676:INFO:Starting cross validation
2022-08-11 21:29:06,677:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:06,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,854:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,862:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,864:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,879:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:06,917:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:07,036:INFO:Calculating mean and std
2022-08-11 21:29:07,038:INFO:Creating metrics dataframe
2022-08-11 21:29:07,042:INFO:Uploading results into container
2022-08-11 21:29:07,042:INFO:Uploading model into container now
2022-08-11 21:29:07,042:INFO:master_model_container: 9
2022-08-11 21:29:07,042:INFO:display_container: 2
2022-08-11 21:29:07,043:INFO:PassiveAggressiveRegressor(random_state=1771)
2022-08-11 21:29:07,043:INFO:create_model() successfully completed......................................
2022-08-11 21:29:07,136:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:07,136:INFO:Creating metrics dataframe
2022-08-11 21:29:07,143:INFO:Initializing Huber Regressor
2022-08-11 21:29:07,144:INFO:Total runtime is 0.08312633037567138 minutes
2022-08-11 21:29:07,146:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:07,146:INFO:Initializing create_model()
2022-08-11 21:29:07,146:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:07,146:INFO:Checking exceptions
2022-08-11 21:29:07,151:INFO:Importing libraries
2022-08-11 21:29:07,151:INFO:Copying training dataset
2022-08-11 21:29:07,159:INFO:Defining folds
2022-08-11 21:29:07,159:INFO:Declaring metric variables
2022-08-11 21:29:07,161:INFO:Importing untrained model
2022-08-11 21:29:07,164:INFO:Huber Regressor Imported successfully
2022-08-11 21:29:07,171:INFO:Starting cross validation
2022-08-11 21:29:07,172:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:07,967:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:07,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:07,984:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:07,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:07,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:07,993:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,035:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,037:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,044:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,046:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,081:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,082:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,093:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:29:08,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,251:INFO:Calculating mean and std
2022-08-11 21:29:08,253:INFO:Creating metrics dataframe
2022-08-11 21:29:08,256:INFO:Uploading results into container
2022-08-11 21:29:08,256:INFO:Uploading model into container now
2022-08-11 21:29:08,257:INFO:master_model_container: 10
2022-08-11 21:29:08,257:INFO:display_container: 2
2022-08-11 21:29:08,257:INFO:HuberRegressor()
2022-08-11 21:29:08,257:INFO:create_model() successfully completed......................................
2022-08-11 21:29:08,352:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:08,352:INFO:Creating metrics dataframe
2022-08-11 21:29:08,360:INFO:Initializing K Neighbors Regressor
2022-08-11 21:29:08,360:INFO:Total runtime is 0.10340044895807901 minutes
2022-08-11 21:29:08,362:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:08,363:INFO:Initializing create_model()
2022-08-11 21:29:08,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:08,363:INFO:Checking exceptions
2022-08-11 21:29:08,367:INFO:Importing libraries
2022-08-11 21:29:08,367:INFO:Copying training dataset
2022-08-11 21:29:08,375:INFO:Defining folds
2022-08-11 21:29:08,375:INFO:Declaring metric variables
2022-08-11 21:29:08,377:INFO:Importing untrained model
2022-08-11 21:29:08,379:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:29:08,383:INFO:Starting cross validation
2022-08-11 21:29:08,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:08,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,507:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,513:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,523:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,546:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:08,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:09,588:INFO:Calculating mean and std
2022-08-11 21:29:09,590:INFO:Creating metrics dataframe
2022-08-11 21:29:09,593:INFO:Uploading results into container
2022-08-11 21:29:09,594:INFO:Uploading model into container now
2022-08-11 21:29:09,594:INFO:master_model_container: 11
2022-08-11 21:29:09,594:INFO:display_container: 2
2022-08-11 21:29:09,595:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:29:09,595:INFO:create_model() successfully completed......................................
2022-08-11 21:29:09,685:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:09,685:INFO:Creating metrics dataframe
2022-08-11 21:29:09,693:INFO:Initializing Decision Tree Regressor
2022-08-11 21:29:09,693:INFO:Total runtime is 0.12561858097712197 minutes
2022-08-11 21:29:09,695:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:09,695:INFO:Initializing create_model()
2022-08-11 21:29:09,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:09,695:INFO:Checking exceptions
2022-08-11 21:29:09,700:INFO:Importing libraries
2022-08-11 21:29:09,700:INFO:Copying training dataset
2022-08-11 21:29:09,707:INFO:Defining folds
2022-08-11 21:29:09,707:INFO:Declaring metric variables
2022-08-11 21:29:09,709:INFO:Importing untrained model
2022-08-11 21:29:09,711:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:29:09,715:INFO:Starting cross validation
2022-08-11 21:29:09,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:29:10,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,844:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,857:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,858:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,860:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,893:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:10,996:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:11,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:11,199:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:29:11,319:INFO:Calculating mean and std
2022-08-11 21:29:11,321:INFO:Creating metrics dataframe
2022-08-11 21:29:11,325:INFO:Uploading results into container
2022-08-11 21:29:11,340:INFO:Uploading model into container now
2022-08-11 21:29:11,340:INFO:master_model_container: 12
2022-08-11 21:29:11,340:INFO:display_container: 2
2022-08-11 21:29:11,341:INFO:DecisionTreeRegressor(random_state=1771)
2022-08-11 21:29:11,341:INFO:create_model() successfully completed......................................
2022-08-11 21:29:11,439:INFO:SubProcess create_model() end ==================================
2022-08-11 21:29:11,439:INFO:Creating metrics dataframe
2022-08-11 21:29:11,447:INFO:Initializing Random Forest Regressor
2022-08-11 21:29:11,447:INFO:Total runtime is 0.15485194921493528 minutes
2022-08-11 21:29:11,449:INFO:SubProcess create_model() called ==================================
2022-08-11 21:29:11,449:INFO:Initializing create_model()
2022-08-11 21:29:11,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:29:11,449:INFO:Checking exceptions
2022-08-11 21:29:11,454:INFO:Importing libraries
2022-08-11 21:29:11,454:INFO:Copying training dataset
2022-08-11 21:29:11,462:INFO:Defining folds
2022-08-11 21:29:11,462:INFO:Declaring metric variables
2022-08-11 21:29:11,464:INFO:Importing untrained model
2022-08-11 21:29:11,467:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:29:11,471:INFO:Starting cross validation
2022-08-11 21:29:11,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:30:21,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:21,910:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:21,942:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,035:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,130:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,140:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,305:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:22,442:INFO:Calculating mean and std
2022-08-11 21:30:22,444:INFO:Creating metrics dataframe
2022-08-11 21:30:22,447:INFO:Uploading results into container
2022-08-11 21:30:22,448:INFO:Uploading model into container now
2022-08-11 21:30:22,448:INFO:master_model_container: 13
2022-08-11 21:30:22,448:INFO:display_container: 2
2022-08-11 21:30:22,449:INFO:RandomForestRegressor(n_jobs=-1, random_state=1771)
2022-08-11 21:30:22,449:INFO:create_model() successfully completed......................................
2022-08-11 21:30:22,543:INFO:SubProcess create_model() end ==================================
2022-08-11 21:30:22,544:INFO:Creating metrics dataframe
2022-08-11 21:30:22,551:INFO:Initializing Extra Trees Regressor
2022-08-11 21:30:22,551:INFO:Total runtime is 1.3399181644121807 minutes
2022-08-11 21:30:22,553:INFO:SubProcess create_model() called ==================================
2022-08-11 21:30:22,553:INFO:Initializing create_model()
2022-08-11 21:30:22,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:30:22,553:INFO:Checking exceptions
2022-08-11 21:30:22,557:INFO:Importing libraries
2022-08-11 21:30:22,557:INFO:Copying training dataset
2022-08-11 21:30:22,565:INFO:Defining folds
2022-08-11 21:30:22,566:INFO:Declaring metric variables
2022-08-11 21:30:22,568:INFO:Importing untrained model
2022-08-11 21:30:22,571:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:30:22,576:INFO:Starting cross validation
2022-08-11 21:30:22,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:30:50,341:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,611:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,765:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,785:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,951:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:50,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:52,265:INFO:Calculating mean and std
2022-08-11 21:30:52,267:INFO:Creating metrics dataframe
2022-08-11 21:30:52,269:INFO:Uploading results into container
2022-08-11 21:30:52,269:INFO:Uploading model into container now
2022-08-11 21:30:52,270:INFO:master_model_container: 14
2022-08-11 21:30:52,270:INFO:display_container: 2
2022-08-11 21:30:52,270:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1771)
2022-08-11 21:30:52,270:INFO:create_model() successfully completed......................................
2022-08-11 21:30:52,362:INFO:SubProcess create_model() end ==================================
2022-08-11 21:30:52,362:INFO:Creating metrics dataframe
2022-08-11 21:30:52,371:INFO:Initializing AdaBoost Regressor
2022-08-11 21:30:52,371:INFO:Total runtime is 1.836915429433187 minutes
2022-08-11 21:30:52,373:INFO:SubProcess create_model() called ==================================
2022-08-11 21:30:52,374:INFO:Initializing create_model()
2022-08-11 21:30:52,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:30:52,374:INFO:Checking exceptions
2022-08-11 21:30:52,379:INFO:Importing libraries
2022-08-11 21:30:52,379:INFO:Copying training dataset
2022-08-11 21:30:52,387:INFO:Defining folds
2022-08-11 21:30:52,387:INFO:Declaring metric variables
2022-08-11 21:30:52,391:INFO:Importing untrained model
2022-08-11 21:30:52,393:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:30:52,398:INFO:Starting cross validation
2022-08-11 21:30:52,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:30:58,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:58,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:58,943:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:59,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:59,459:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:30:59,869:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:00,100:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:00,173:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:00,199:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:00,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:00,387:INFO:Calculating mean and std
2022-08-11 21:31:00,389:INFO:Creating metrics dataframe
2022-08-11 21:31:00,393:INFO:Uploading results into container
2022-08-11 21:31:00,393:INFO:Uploading model into container now
2022-08-11 21:31:00,394:INFO:master_model_container: 15
2022-08-11 21:31:00,394:INFO:display_container: 2
2022-08-11 21:31:00,394:INFO:AdaBoostRegressor(random_state=1771)
2022-08-11 21:31:00,394:INFO:create_model() successfully completed......................................
2022-08-11 21:31:00,508:INFO:SubProcess create_model() end ==================================
2022-08-11 21:31:00,508:INFO:Creating metrics dataframe
2022-08-11 21:31:00,516:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:31:00,517:INFO:Total runtime is 1.9726776997248334 minutes
2022-08-11 21:31:00,519:INFO:SubProcess create_model() called ==================================
2022-08-11 21:31:00,519:INFO:Initializing create_model()
2022-08-11 21:31:00,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:31:00,519:INFO:Checking exceptions
2022-08-11 21:31:00,532:INFO:Importing libraries
2022-08-11 21:31:00,532:INFO:Copying training dataset
2022-08-11 21:31:00,546:INFO:Defining folds
2022-08-11 21:31:00,546:INFO:Declaring metric variables
2022-08-11 21:31:00,548:INFO:Importing untrained model
2022-08-11 21:31:00,551:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:31:00,555:INFO:Starting cross validation
2022-08-11 21:31:00,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:31:16,759:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,773:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,820:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,826:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,833:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,835:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,849:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,854:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:16,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:17,003:INFO:Calculating mean and std
2022-08-11 21:31:17,004:INFO:Creating metrics dataframe
2022-08-11 21:31:17,008:INFO:Uploading results into container
2022-08-11 21:31:17,008:INFO:Uploading model into container now
2022-08-11 21:31:17,009:INFO:master_model_container: 16
2022-08-11 21:31:17,009:INFO:display_container: 2
2022-08-11 21:31:17,009:INFO:GradientBoostingRegressor(random_state=1771)
2022-08-11 21:31:17,009:INFO:create_model() successfully completed......................................
2022-08-11 21:31:17,100:INFO:SubProcess create_model() end ==================================
2022-08-11 21:31:17,100:INFO:Creating metrics dataframe
2022-08-11 21:31:17,108:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:31:17,108:INFO:Total runtime is 2.249207695325216 minutes
2022-08-11 21:31:17,111:INFO:SubProcess create_model() called ==================================
2022-08-11 21:31:17,111:INFO:Initializing create_model()
2022-08-11 21:31:17,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:31:17,111:INFO:Checking exceptions
2022-08-11 21:31:17,118:INFO:Importing libraries
2022-08-11 21:31:17,118:INFO:Copying training dataset
2022-08-11 21:31:17,135:INFO:Defining folds
2022-08-11 21:31:17,135:INFO:Declaring metric variables
2022-08-11 21:31:17,138:INFO:Importing untrained model
2022-08-11 21:31:17,141:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:31:17,147:INFO:Starting cross validation
2022-08-11 21:31:17,148:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:31:26,771:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,838:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,917:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,922:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,935:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:26,966:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:27,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:31,505:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:31,633:INFO:Calculating mean and std
2022-08-11 21:31:31,636:INFO:Creating metrics dataframe
2022-08-11 21:31:31,639:INFO:Uploading results into container
2022-08-11 21:31:31,640:INFO:Uploading model into container now
2022-08-11 21:31:31,640:INFO:master_model_container: 17
2022-08-11 21:31:31,641:INFO:display_container: 2
2022-08-11 21:31:31,642:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=1771,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:31:31,642:INFO:create_model() successfully completed......................................
2022-08-11 21:31:31,738:INFO:SubProcess create_model() end ==================================
2022-08-11 21:31:31,738:INFO:Creating metrics dataframe
2022-08-11 21:31:31,746:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:31:31,746:INFO:Total runtime is 2.493171532948812 minutes
2022-08-11 21:31:31,748:INFO:SubProcess create_model() called ==================================
2022-08-11 21:31:31,748:INFO:Initializing create_model()
2022-08-11 21:31:31,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:31:31,749:INFO:Checking exceptions
2022-08-11 21:31:31,755:INFO:Importing libraries
2022-08-11 21:31:31,755:INFO:Copying training dataset
2022-08-11 21:31:31,768:INFO:Defining folds
2022-08-11 21:31:31,768:INFO:Declaring metric variables
2022-08-11 21:31:31,770:INFO:Importing untrained model
2022-08-11 21:31:31,773:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:31:31,778:INFO:Starting cross validation
2022-08-11 21:31:31,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:31:32,357:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,386:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,414:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,429:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,446:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,532:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,677:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:32,813:INFO:Calculating mean and std
2022-08-11 21:31:32,815:INFO:Creating metrics dataframe
2022-08-11 21:31:32,819:INFO:Uploading results into container
2022-08-11 21:31:32,819:INFO:Uploading model into container now
2022-08-11 21:31:32,819:INFO:master_model_container: 18
2022-08-11 21:31:32,820:INFO:display_container: 2
2022-08-11 21:31:32,820:INFO:LGBMRegressor(random_state=1771)
2022-08-11 21:31:32,820:INFO:create_model() successfully completed......................................
2022-08-11 21:31:32,913:INFO:SubProcess create_model() end ==================================
2022-08-11 21:31:32,913:INFO:Creating metrics dataframe
2022-08-11 21:31:32,923:INFO:Initializing Dummy Regressor
2022-08-11 21:31:32,923:INFO:Total runtime is 2.5127793312072755 minutes
2022-08-11 21:31:32,925:INFO:SubProcess create_model() called ==================================
2022-08-11 21:31:32,925:INFO:Initializing create_model()
2022-08-11 21:31:32,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9a5f9d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:31:32,925:INFO:Checking exceptions
2022-08-11 21:31:32,931:INFO:Importing libraries
2022-08-11 21:31:32,931:INFO:Copying training dataset
2022-08-11 21:31:32,940:INFO:Defining folds
2022-08-11 21:31:32,940:INFO:Declaring metric variables
2022-08-11 21:31:32,942:INFO:Importing untrained model
2022-08-11 21:31:32,945:INFO:Dummy Regressor Imported successfully
2022-08-11 21:31:32,949:INFO:Starting cross validation
2022-08-11 21:31:32,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:31:33,058:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,060:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,058:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,060:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,060:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,080:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,097:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,155:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:31:33,269:INFO:Calculating mean and std
2022-08-11 21:31:33,270:INFO:Creating metrics dataframe
2022-08-11 21:31:33,274:INFO:Uploading results into container
2022-08-11 21:31:33,274:INFO:Uploading model into container now
2022-08-11 21:31:33,275:INFO:master_model_container: 19
2022-08-11 21:31:33,275:INFO:display_container: 2
2022-08-11 21:31:33,275:INFO:DummyRegressor()
2022-08-11 21:31:33,275:INFO:create_model() successfully completed......................................
2022-08-11 21:31:33,368:INFO:SubProcess create_model() end ==================================
2022-08-11 21:31:33,368:INFO:Creating metrics dataframe
2022-08-11 21:31:33,382:INFO:Initializing create_model()
2022-08-11 21:31:33,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=GradientBoostingRegressor(random_state=1771), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:31:33,383:INFO:Checking exceptions
2022-08-11 21:31:33,389:INFO:Importing libraries
2022-08-11 21:31:33,389:INFO:Copying training dataset
2022-08-11 21:31:33,396:INFO:Defining folds
2022-08-11 21:31:33,397:INFO:Declaring metric variables
2022-08-11 21:31:33,397:INFO:Importing untrained model
2022-08-11 21:31:33,397:INFO:Declaring custom model
2022-08-11 21:31:33,397:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:31:33,398:INFO:Cross validation set to False
2022-08-11 21:31:33,398:INFO:Fitting Model
2022-08-11 21:31:48,602:INFO:GradientBoostingRegressor(random_state=1771)
2022-08-11 21:31:48,602:INFO:create_model() successfully completed......................................
2022-08-11 21:31:48,709:INFO:master_model_container: 19
2022-08-11 21:31:48,710:INFO:display_container: 2
2022-08-11 21:31:48,710:INFO:GradientBoostingRegressor(random_state=1771)
2022-08-11 21:31:48,710:INFO:compare_models() successfully completed......................................
2022-08-11 21:31:53,650:INFO:Initializing create_model()
2022-08-11 21:31:53,651:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:31:53,652:INFO:Checking exceptions
2022-08-11 21:31:53,689:INFO:Importing libraries
2022-08-11 21:31:53,689:INFO:Copying training dataset
2022-08-11 21:31:53,701:INFO:Defining folds
2022-08-11 21:31:53,701:INFO:Declaring metric variables
2022-08-11 21:31:53,703:INFO:Importing untrained model
2022-08-11 21:31:53,706:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:31:53,710:INFO:Starting cross validation
2022-08-11 21:31:53,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:32:09,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,301:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,377:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,386:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,407:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:09,490:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:16,407:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:32:16,527:INFO:Calculating mean and std
2022-08-11 21:32:16,529:INFO:Creating metrics dataframe
2022-08-11 21:32:16,534:INFO:Finalizing model
2022-08-11 21:32:31,373:INFO:Uploading results into container
2022-08-11 21:32:31,374:INFO:Uploading model into container now
2022-08-11 21:32:31,380:INFO:master_model_container: 20
2022-08-11 21:32:31,380:INFO:display_container: 3
2022-08-11 21:32:31,380:INFO:GradientBoostingRegressor(random_state=1771)
2022-08-11 21:32:31,380:INFO:create_model() successfully completed......................................
2022-08-11 21:32:31,472:INFO:Initializing finalize_model()
2022-08-11 21:32:31,473:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=GradientBoostingRegressor(random_state=1771), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:32:31,473:INFO:Finalizing GradientBoostingRegressor(random_state=1771)
2022-08-11 21:32:31,482:INFO:Initializing create_model()
2022-08-11 21:32:31,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=GradientBoostingRegressor(random_state=1771), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:32:31,482:INFO:Checking exceptions
2022-08-11 21:32:31,484:INFO:Importing libraries
2022-08-11 21:32:31,484:INFO:Copying training dataset
2022-08-11 21:32:31,486:INFO:Defining folds
2022-08-11 21:32:31,486:INFO:Declaring metric variables
2022-08-11 21:32:31,487:INFO:Importing untrained model
2022-08-11 21:32:31,487:INFO:Declaring custom model
2022-08-11 21:32:31,487:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:32:31,488:INFO:Cross validation set to False
2022-08-11 21:32:31,488:INFO:Fitting Model
2022-08-11 21:32:52,936:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))])
2022-08-11 21:32:52,936:INFO:create_model() successfully completed......................................
2022-08-11 21:32:53,029:INFO:Initializing predict_model()
2022-08-11 21:32:53,029:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ebffb2820>)
2022-08-11 21:32:53,029:INFO:Checking exceptions
2022-08-11 21:32:53,029:INFO:Preloading libraries
2022-08-11 21:32:53,034:INFO:Set up data.
2022-08-11 21:32:53,274:INFO:display_container: 4
2022-08-11 21:32:53,274:INFO:master_model_container: 20
2022-08-11 21:32:53,274:INFO:display_container: 4
2022-08-11 21:32:53,278:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))])
2022-08-11 21:32:53,279:INFO:finalize_model() successfully completed......................................
2022-08-11 21:32:53,368:INFO:Initializing finalize_model()
2022-08-11 21:32:53,368:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=GradientBoostingRegressor(random_state=1771), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:32:53,368:INFO:Finalizing GradientBoostingRegressor(random_state=1771)
2022-08-11 21:32:53,383:INFO:Initializing create_model()
2022-08-11 21:32:53,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=GradientBoostingRegressor(random_state=1771), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:32:53,383:INFO:Checking exceptions
2022-08-11 21:32:53,385:INFO:Importing libraries
2022-08-11 21:32:53,385:INFO:Copying training dataset
2022-08-11 21:32:53,389:INFO:Defining folds
2022-08-11 21:32:53,389:INFO:Declaring metric variables
2022-08-11 21:32:53,389:INFO:Importing untrained model
2022-08-11 21:32:53,389:INFO:Declaring custom model
2022-08-11 21:32:53,390:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:32:53,391:INFO:Cross validation set to False
2022-08-11 21:32:53,391:INFO:Fitting Model
2022-08-11 21:33:14,652:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))])
2022-08-11 21:33:14,653:INFO:create_model() successfully completed......................................
2022-08-11 21:33:14,747:INFO:Initializing predict_model()
2022-08-11 21:33:14,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ebffb2820>)
2022-08-11 21:33:14,747:INFO:Checking exceptions
2022-08-11 21:33:14,747:INFO:Preloading libraries
2022-08-11 21:33:14,752:INFO:Set up data.
2022-08-11 21:33:14,906:INFO:display_container: 5
2022-08-11 21:33:14,906:INFO:master_model_container: 20
2022-08-11 21:33:14,906:INFO:display_container: 5
2022-08-11 21:33:14,911:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))])
2022-08-11 21:33:14,911:INFO:finalize_model() successfully completed......................................
2022-08-11 21:33:15,005:INFO:Initializing predict_model()
2022-08-11 21:33:15,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ec9a6ad60>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9a7a040>)
2022-08-11 21:33:15,006:INFO:Checking exceptions
2022-08-11 21:33:15,006:INFO:Preloading libraries
2022-08-11 21:33:15,016:INFO:Set up data.
2022-08-11 21:33:15,500:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/521809292.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_03'] = predict_model(model_y03, data=test_df)['prediction_label']

2022-08-11 21:33:15,504:INFO:PyCaret RegressionExperiment
2022-08-11 21:33:15,504:INFO:Logging name: reg-default-name
2022-08-11 21:33:15,505:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:33:15,505:INFO:version 3.0.0.rc3
2022-08-11 21:33:15,505:INFO:Initializing setup()
2022-08-11 21:33:15,505:INFO:self.USI: 289d
2022-08-11 21:33:15,505:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:33:15,505:INFO:Checking environment
2022-08-11 21:33:15,505:INFO:python_version: 3.8.8
2022-08-11 21:33:15,505:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:33:15,505:INFO:machine: x86_64
2022-08-11 21:33:15,505:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:33:15,505:INFO:Memory: svmem(total=34359738368, available=4407369728, percent=87.2, used=4014063616, free=806690816, active=3595137024, inactive=3494486016, wired=418926592)
2022-08-11 21:33:15,505:INFO:Physical Core: 10
2022-08-11 21:33:15,505:INFO:Logical Core: 10
2022-08-11 21:33:15,505:INFO:Checking libraries
2022-08-11 21:33:15,505:INFO:System:
2022-08-11 21:33:15,505:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:33:15,505:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:33:15,505:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:33:15,505:INFO:PyCaret required dependencies:
2022-08-11 21:33:15,505:INFO:                 pip: 22.1.2
2022-08-11 21:33:15,505:INFO:          setuptools: 61.2.0
2022-08-11 21:33:15,505:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:33:15,505:INFO:             IPython: 8.4.0
2022-08-11 21:33:15,505:INFO:          ipywidgets: 7.6.5
2022-08-11 21:33:15,505:INFO:                tqdm: 4.64.0
2022-08-11 21:33:15,505:INFO:               numpy: 1.22.4
2022-08-11 21:33:15,505:INFO:              pandas: 1.4.3
2022-08-11 21:33:15,505:INFO:              jinja2: 3.0.3
2022-08-11 21:33:15,506:INFO:               scipy: 1.5.4
2022-08-11 21:33:15,506:INFO:              joblib: 1.1.0
2022-08-11 21:33:15,506:INFO:             sklearn: 1.1.1
2022-08-11 21:33:15,506:INFO:                pyod: 1.0.4
2022-08-11 21:33:15,506:INFO:            imblearn: 0.9.1
2022-08-11 21:33:15,506:INFO:   category_encoders: 2.5.0
2022-08-11 21:33:15,506:INFO:            lightgbm: 3.2.1
2022-08-11 21:33:15,506:INFO:               numba: 0.55.2
2022-08-11 21:33:15,506:INFO:            requests: 2.28.1
2022-08-11 21:33:15,506:INFO:          matplotlib: 3.5.1
2022-08-11 21:33:15,506:INFO:          scikitplot: 0.3.7
2022-08-11 21:33:15,506:INFO:         yellowbrick: 1.4
2022-08-11 21:33:15,506:INFO:              plotly: 5.9.0
2022-08-11 21:33:15,506:INFO:             kaleido: 0.2.1
2022-08-11 21:33:15,506:INFO:         statsmodels: 0.13.2
2022-08-11 21:33:15,506:INFO:              sktime: 0.13.0
2022-08-11 21:33:15,506:INFO:               tbats: 1.1.0
2022-08-11 21:33:15,506:INFO:            pmdarima: 1.8.5
2022-08-11 21:33:15,506:INFO:              psutil: 5.9.1
2022-08-11 21:33:15,506:INFO:PyCaret optional dependencies:
2022-08-11 21:33:15,506:INFO:                shap: Not installed
2022-08-11 21:33:15,506:INFO:           interpret: Not installed
2022-08-11 21:33:15,506:INFO:                umap: 0.5.3
2022-08-11 21:33:15,506:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:33:15,506:INFO:  explainerdashboard: Not installed
2022-08-11 21:33:15,506:INFO:             autoviz: Not installed
2022-08-11 21:33:15,506:INFO:           fairlearn: Not installed
2022-08-11 21:33:15,506:INFO:             xgboost: 1.6.1
2022-08-11 21:33:15,506:INFO:            catboost: Not installed
2022-08-11 21:33:15,506:INFO:              kmodes: 0.12.1
2022-08-11 21:33:15,506:INFO:             mlxtend: 0.19.0
2022-08-11 21:33:15,506:INFO:       statsforecast: Not installed
2022-08-11 21:33:15,506:INFO:        tune_sklearn: Not installed
2022-08-11 21:33:15,506:INFO:                 ray: Not installed
2022-08-11 21:33:15,506:INFO:            hyperopt: Not installed
2022-08-11 21:33:15,506:INFO:              optuna: Not installed
2022-08-11 21:33:15,506:INFO:               skopt: Not installed
2022-08-11 21:33:15,506:INFO:              mlflow: 1.27.0
2022-08-11 21:33:15,506:INFO:              gradio: Not installed
2022-08-11 21:33:15,506:INFO:             fastapi: Not installed
2022-08-11 21:33:15,506:INFO:             uvicorn: Not installed
2022-08-11 21:33:15,506:INFO:              m2cgen: Not installed
2022-08-11 21:33:15,506:INFO:           evidently: Not installed
2022-08-11 21:33:15,506:INFO:                nltk: 3.7
2022-08-11 21:33:15,506:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:33:15,506:INFO:              gensim: 3.8.3
2022-08-11 21:33:15,506:INFO:               spacy: 2.3.7
2022-08-11 21:33:15,506:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:33:15,506:INFO:            textblob: 0.17.1
2022-08-11 21:33:15,506:INFO:               fugue: Not installed
2022-08-11 21:33:15,506:INFO:           streamlit: Not installed
2022-08-11 21:33:15,506:INFO:             prophet: Not installed
2022-08-11 21:33:15,506:INFO:None
2022-08-11 21:33:15,506:INFO:Set up data.
2022-08-11 21:33:15,535:INFO:Set up train/test split.
2022-08-11 21:33:15,552:INFO:Set up folding strategy.
2022-08-11 21:33:15,552:INFO:Assigning column types.
2022-08-11 21:33:15,558:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:33:15,558:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,563:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,567:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,623:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,663:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:15,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:15,665:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,669:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,674:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,733:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,774:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:15,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:15,777:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:33:15,781:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,785:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,845:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,885:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:15,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:15,892:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,896:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,954:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:15,995:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:15,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:15,997:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:33:16,005:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,104:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,170:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,210:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,211:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,213:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:33:16,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,317:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,318:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,384:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,423:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,426:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:33:16,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,529:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,597:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:33:16,637:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,639:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:33:16,744:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,853:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:16,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:16,856:INFO:Preparing preprocessing pipeline...
2022-08-11 21:33:16,857:INFO:Set up simple imputation.
2022-08-11 21:33:16,857:INFO:Set up variance threshold.
2022-08-11 21:33:17,033:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:33:17,036:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:33:17,036:INFO:Creating final display dataframe.
2022-08-11 21:33:17,708:INFO:Setup display_container:                Description             Value
0               Session id              2453
1                   Target              Y_04
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              289d
2022-08-11 21:33:17,821:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:17,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:17,928:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:33:17,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:33:17,948:INFO:setup() successfully completed in 2.44s...............
2022-08-11 21:33:17,951:INFO:Initializing compare_models()
2022-08-11 21:33:17,951:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:33:17,951:INFO:Checking exceptions
2022-08-11 21:33:17,956:INFO:Preparing display monitor
2022-08-11 21:33:17,979:INFO:Initializing Linear Regression
2022-08-11 21:33:17,979:INFO:Total runtime is 3.548463185628255e-06 minutes
2022-08-11 21:33:17,982:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:17,982:INFO:Initializing create_model()
2022-08-11 21:33:17,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:17,982:INFO:Checking exceptions
2022-08-11 21:33:17,988:INFO:Importing libraries
2022-08-11 21:33:17,988:INFO:Copying training dataset
2022-08-11 21:33:17,997:INFO:Defining folds
2022-08-11 21:33:17,997:INFO:Declaring metric variables
2022-08-11 21:33:17,999:INFO:Importing untrained model
2022-08-11 21:33:18,001:INFO:Linear Regression Imported successfully
2022-08-11 21:33:18,005:INFO:Starting cross validation
2022-08-11 21:33:18,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:18,579:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,617:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,640:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,644:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,648:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,649:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,660:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,662:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:18,940:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,168:INFO:Calculating mean and std
2022-08-11 21:33:19,169:INFO:Creating metrics dataframe
2022-08-11 21:33:19,172:INFO:Uploading results into container
2022-08-11 21:33:19,173:INFO:Uploading model into container now
2022-08-11 21:33:19,173:INFO:master_model_container: 1
2022-08-11 21:33:19,173:INFO:display_container: 2
2022-08-11 21:33:19,173:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:33:19,174:INFO:create_model() successfully completed......................................
2022-08-11 21:33:19,269:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:19,269:INFO:Creating metrics dataframe
2022-08-11 21:33:19,274:INFO:Initializing Lasso Regression
2022-08-11 21:33:19,274:INFO:Total runtime is 0.02157508134841919 minutes
2022-08-11 21:33:19,276:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:19,276:INFO:Initializing create_model()
2022-08-11 21:33:19,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:19,276:INFO:Checking exceptions
2022-08-11 21:33:19,281:INFO:Importing libraries
2022-08-11 21:33:19,281:INFO:Copying training dataset
2022-08-11 21:33:19,289:INFO:Defining folds
2022-08-11 21:33:19,289:INFO:Declaring metric variables
2022-08-11 21:33:19,291:INFO:Importing untrained model
2022-08-11 21:33:19,294:INFO:Lasso Regression Imported successfully
2022-08-11 21:33:19,298:INFO:Starting cross validation
2022-08-11 21:33:19,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:19,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,426:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,427:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,471:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,505:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,621:INFO:Calculating mean and std
2022-08-11 21:33:19,623:INFO:Creating metrics dataframe
2022-08-11 21:33:19,626:INFO:Uploading results into container
2022-08-11 21:33:19,627:INFO:Uploading model into container now
2022-08-11 21:33:19,627:INFO:master_model_container: 2
2022-08-11 21:33:19,627:INFO:display_container: 2
2022-08-11 21:33:19,628:INFO:Lasso(random_state=2453)
2022-08-11 21:33:19,628:INFO:create_model() successfully completed......................................
2022-08-11 21:33:19,722:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:19,722:INFO:Creating metrics dataframe
2022-08-11 21:33:19,728:INFO:Initializing Ridge Regression
2022-08-11 21:33:19,728:INFO:Total runtime is 0.02914620240529378 minutes
2022-08-11 21:33:19,730:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:19,730:INFO:Initializing create_model()
2022-08-11 21:33:19,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:19,730:INFO:Checking exceptions
2022-08-11 21:33:19,735:INFO:Importing libraries
2022-08-11 21:33:19,736:INFO:Copying training dataset
2022-08-11 21:33:19,744:INFO:Defining folds
2022-08-11 21:33:19,744:INFO:Declaring metric variables
2022-08-11 21:33:19,746:INFO:Importing untrained model
2022-08-11 21:33:19,748:INFO:Ridge Regression Imported successfully
2022-08-11 21:33:19,753:INFO:Starting cross validation
2022-08-11 21:33:19,754:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:19,874:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,874:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,914:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,920:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,929:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:19,944:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,063:INFO:Calculating mean and std
2022-08-11 21:33:20,065:INFO:Creating metrics dataframe
2022-08-11 21:33:20,069:INFO:Uploading results into container
2022-08-11 21:33:20,069:INFO:Uploading model into container now
2022-08-11 21:33:20,070:INFO:master_model_container: 3
2022-08-11 21:33:20,070:INFO:display_container: 2
2022-08-11 21:33:20,070:INFO:Ridge(random_state=2453)
2022-08-11 21:33:20,070:INFO:create_model() successfully completed......................................
2022-08-11 21:33:20,166:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:20,166:INFO:Creating metrics dataframe
2022-08-11 21:33:20,172:INFO:Initializing Elastic Net
2022-08-11 21:33:20,172:INFO:Total runtime is 0.03655174970626831 minutes
2022-08-11 21:33:20,175:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:20,175:INFO:Initializing create_model()
2022-08-11 21:33:20,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:20,175:INFO:Checking exceptions
2022-08-11 21:33:20,180:INFO:Importing libraries
2022-08-11 21:33:20,180:INFO:Copying training dataset
2022-08-11 21:33:20,188:INFO:Defining folds
2022-08-11 21:33:20,188:INFO:Declaring metric variables
2022-08-11 21:33:20,191:INFO:Importing untrained model
2022-08-11 21:33:20,193:INFO:Elastic Net Imported successfully
2022-08-11 21:33:20,197:INFO:Starting cross validation
2022-08-11 21:33:20,198:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:20,314:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,319:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,323:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,326:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,340:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,344:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,360:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,549:INFO:Calculating mean and std
2022-08-11 21:33:20,551:INFO:Creating metrics dataframe
2022-08-11 21:33:20,554:INFO:Uploading results into container
2022-08-11 21:33:20,554:INFO:Uploading model into container now
2022-08-11 21:33:20,555:INFO:master_model_container: 4
2022-08-11 21:33:20,555:INFO:display_container: 2
2022-08-11 21:33:20,555:INFO:ElasticNet(random_state=2453)
2022-08-11 21:33:20,555:INFO:create_model() successfully completed......................................
2022-08-11 21:33:20,648:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:20,648:INFO:Creating metrics dataframe
2022-08-11 21:33:20,654:INFO:Initializing Least Angle Regression
2022-08-11 21:33:20,654:INFO:Total runtime is 0.04457788467407227 minutes
2022-08-11 21:33:20,656:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:20,656:INFO:Initializing create_model()
2022-08-11 21:33:20,656:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:20,656:INFO:Checking exceptions
2022-08-11 21:33:20,661:INFO:Importing libraries
2022-08-11 21:33:20,661:INFO:Copying training dataset
2022-08-11 21:33:20,669:INFO:Defining folds
2022-08-11 21:33:20,670:INFO:Declaring metric variables
2022-08-11 21:33:20,672:INFO:Importing untrained model
2022-08-11 21:33:20,674:INFO:Least Angle Regression Imported successfully
2022-08-11 21:33:20,679:INFO:Starting cross validation
2022-08-11 21:33:20,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:20,793:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,796:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,796:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,806:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,813:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,815:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,817:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,817:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,820:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,823:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,833:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,834:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,841:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,866:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:20,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:20,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,005:INFO:Calculating mean and std
2022-08-11 21:33:21,007:INFO:Creating metrics dataframe
2022-08-11 21:33:21,010:INFO:Uploading results into container
2022-08-11 21:33:21,011:INFO:Uploading model into container now
2022-08-11 21:33:21,011:INFO:master_model_container: 5
2022-08-11 21:33:21,011:INFO:display_container: 2
2022-08-11 21:33:21,012:INFO:Lars(random_state=2453)
2022-08-11 21:33:21,012:INFO:create_model() successfully completed......................................
2022-08-11 21:33:21,106:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:21,106:INFO:Creating metrics dataframe
2022-08-11 21:33:21,112:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:33:21,112:INFO:Total runtime is 0.052220912774403896 minutes
2022-08-11 21:33:21,114:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:21,115:INFO:Initializing create_model()
2022-08-11 21:33:21,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:21,115:INFO:Checking exceptions
2022-08-11 21:33:21,120:INFO:Importing libraries
2022-08-11 21:33:21,120:INFO:Copying training dataset
2022-08-11 21:33:21,127:INFO:Defining folds
2022-08-11 21:33:21,127:INFO:Declaring metric variables
2022-08-11 21:33:21,129:INFO:Importing untrained model
2022-08-11 21:33:21,132:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:33:21,137:INFO:Starting cross validation
2022-08-11 21:33:21,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:21,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,251:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,255:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,256:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,262:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,262:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,263:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,271:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,271:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,308:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,373:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:33:21,383:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,499:INFO:Calculating mean and std
2022-08-11 21:33:21,501:INFO:Creating metrics dataframe
2022-08-11 21:33:21,505:INFO:Uploading results into container
2022-08-11 21:33:21,505:INFO:Uploading model into container now
2022-08-11 21:33:21,506:INFO:master_model_container: 6
2022-08-11 21:33:21,506:INFO:display_container: 2
2022-08-11 21:33:21,506:INFO:LassoLars(random_state=2453)
2022-08-11 21:33:21,507:INFO:create_model() successfully completed......................................
2022-08-11 21:33:21,600:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:21,600:INFO:Creating metrics dataframe
2022-08-11 21:33:21,606:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:33:21,606:INFO:Total runtime is 0.060452298323313405 minutes
2022-08-11 21:33:21,608:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:21,609:INFO:Initializing create_model()
2022-08-11 21:33:21,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:21,609:INFO:Checking exceptions
2022-08-11 21:33:21,613:INFO:Importing libraries
2022-08-11 21:33:21,613:INFO:Copying training dataset
2022-08-11 21:33:21,621:INFO:Defining folds
2022-08-11 21:33:21,621:INFO:Declaring metric variables
2022-08-11 21:33:21,624:INFO:Importing untrained model
2022-08-11 21:33:21,627:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:33:21,631:INFO:Starting cross validation
2022-08-11 21:33:21,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:21,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,747:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,749:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,758:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,772:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,772:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,776:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,781:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,786:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,792:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,798:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,853:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:21,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:33:21,896:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,014:INFO:Calculating mean and std
2022-08-11 21:33:22,016:INFO:Creating metrics dataframe
2022-08-11 21:33:22,019:INFO:Uploading results into container
2022-08-11 21:33:22,020:INFO:Uploading model into container now
2022-08-11 21:33:22,020:INFO:master_model_container: 7
2022-08-11 21:33:22,020:INFO:display_container: 2
2022-08-11 21:33:22,021:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:33:22,021:INFO:create_model() successfully completed......................................
2022-08-11 21:33:22,114:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:22,115:INFO:Creating metrics dataframe
2022-08-11 21:33:22,122:INFO:Initializing Bayesian Ridge
2022-08-11 21:33:22,122:INFO:Total runtime is 0.0690416177113851 minutes
2022-08-11 21:33:22,123:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:22,124:INFO:Initializing create_model()
2022-08-11 21:33:22,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:22,124:INFO:Checking exceptions
2022-08-11 21:33:22,128:INFO:Importing libraries
2022-08-11 21:33:22,129:INFO:Copying training dataset
2022-08-11 21:33:22,136:INFO:Defining folds
2022-08-11 21:33:22,136:INFO:Declaring metric variables
2022-08-11 21:33:22,138:INFO:Importing untrained model
2022-08-11 21:33:22,140:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:33:22,144:INFO:Starting cross validation
2022-08-11 21:33:22,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:22,466:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,487:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,492:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,500:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,540:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,559:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,675:INFO:Calculating mean and std
2022-08-11 21:33:22,677:INFO:Creating metrics dataframe
2022-08-11 21:33:22,680:INFO:Uploading results into container
2022-08-11 21:33:22,680:INFO:Uploading model into container now
2022-08-11 21:33:22,681:INFO:master_model_container: 8
2022-08-11 21:33:22,681:INFO:display_container: 2
2022-08-11 21:33:22,681:INFO:BayesianRidge()
2022-08-11 21:33:22,681:INFO:create_model() successfully completed......................................
2022-08-11 21:33:22,775:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:22,775:INFO:Creating metrics dataframe
2022-08-11 21:33:22,782:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:33:22,782:INFO:Total runtime is 0.08004884719848634 minutes
2022-08-11 21:33:22,784:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:22,784:INFO:Initializing create_model()
2022-08-11 21:33:22,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:22,785:INFO:Checking exceptions
2022-08-11 21:33:22,789:INFO:Importing libraries
2022-08-11 21:33:22,789:INFO:Copying training dataset
2022-08-11 21:33:22,797:INFO:Defining folds
2022-08-11 21:33:22,797:INFO:Declaring metric variables
2022-08-11 21:33:22,799:INFO:Importing untrained model
2022-08-11 21:33:22,801:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:33:22,806:INFO:Starting cross validation
2022-08-11 21:33:22,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:22,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:22,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,003:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,004:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,010:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,017:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:23,167:INFO:Calculating mean and std
2022-08-11 21:33:23,168:INFO:Creating metrics dataframe
2022-08-11 21:33:23,171:INFO:Uploading results into container
2022-08-11 21:33:23,172:INFO:Uploading model into container now
2022-08-11 21:33:23,172:INFO:master_model_container: 9
2022-08-11 21:33:23,172:INFO:display_container: 2
2022-08-11 21:33:23,173:INFO:PassiveAggressiveRegressor(random_state=2453)
2022-08-11 21:33:23,173:INFO:create_model() successfully completed......................................
2022-08-11 21:33:23,271:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:23,271:INFO:Creating metrics dataframe
2022-08-11 21:33:23,278:INFO:Initializing Huber Regressor
2022-08-11 21:33:23,278:INFO:Total runtime is 0.08831823269526165 minutes
2022-08-11 21:33:23,280:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:23,280:INFO:Initializing create_model()
2022-08-11 21:33:23,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:23,281:INFO:Checking exceptions
2022-08-11 21:33:23,286:INFO:Importing libraries
2022-08-11 21:33:23,286:INFO:Copying training dataset
2022-08-11 21:33:23,294:INFO:Defining folds
2022-08-11 21:33:23,294:INFO:Declaring metric variables
2022-08-11 21:33:23,296:INFO:Importing untrained model
2022-08-11 21:33:23,299:INFO:Huber Regressor Imported successfully
2022-08-11 21:33:23,303:INFO:Starting cross validation
2022-08-11 21:33:23,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:23,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,153:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,160:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,162:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,191:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,224:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,229:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,230:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,266:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,266:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,270:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:33:24,270:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,387:INFO:Calculating mean and std
2022-08-11 21:33:24,389:INFO:Creating metrics dataframe
2022-08-11 21:33:24,393:INFO:Uploading results into container
2022-08-11 21:33:24,393:INFO:Uploading model into container now
2022-08-11 21:33:24,394:INFO:master_model_container: 10
2022-08-11 21:33:24,394:INFO:display_container: 2
2022-08-11 21:33:24,394:INFO:HuberRegressor()
2022-08-11 21:33:24,394:INFO:create_model() successfully completed......................................
2022-08-11 21:33:24,489:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:24,489:INFO:Creating metrics dataframe
2022-08-11 21:33:24,496:INFO:Initializing K Neighbors Regressor
2022-08-11 21:33:24,496:INFO:Total runtime is 0.10861941576004029 minutes
2022-08-11 21:33:24,498:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:24,498:INFO:Initializing create_model()
2022-08-11 21:33:24,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:24,499:INFO:Checking exceptions
2022-08-11 21:33:24,503:INFO:Importing libraries
2022-08-11 21:33:24,503:INFO:Copying training dataset
2022-08-11 21:33:24,511:INFO:Defining folds
2022-08-11 21:33:24,511:INFO:Declaring metric variables
2022-08-11 21:33:24,513:INFO:Importing untrained model
2022-08-11 21:33:24,516:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:33:24,520:INFO:Starting cross validation
2022-08-11 21:33:24,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:24,636:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,647:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,648:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,649:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,658:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:24,702:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:25,784:INFO:Calculating mean and std
2022-08-11 21:33:25,786:INFO:Creating metrics dataframe
2022-08-11 21:33:25,789:INFO:Uploading results into container
2022-08-11 21:33:25,790:INFO:Uploading model into container now
2022-08-11 21:33:25,790:INFO:master_model_container: 11
2022-08-11 21:33:25,790:INFO:display_container: 2
2022-08-11 21:33:25,790:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:33:25,790:INFO:create_model() successfully completed......................................
2022-08-11 21:33:25,885:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:25,885:INFO:Creating metrics dataframe
2022-08-11 21:33:25,893:INFO:Initializing Decision Tree Regressor
2022-08-11 21:33:25,893:INFO:Total runtime is 0.13189144929250082 minutes
2022-08-11 21:33:25,895:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:25,895:INFO:Initializing create_model()
2022-08-11 21:33:25,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:25,895:INFO:Checking exceptions
2022-08-11 21:33:25,900:INFO:Importing libraries
2022-08-11 21:33:25,900:INFO:Copying training dataset
2022-08-11 21:33:25,908:INFO:Defining folds
2022-08-11 21:33:25,908:INFO:Declaring metric variables
2022-08-11 21:33:25,911:INFO:Importing untrained model
2022-08-11 21:33:25,913:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:33:25,917:INFO:Starting cross validation
2022-08-11 21:33:25,918:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:33:27,095:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,111:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,112:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,149:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,186:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,259:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,318:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:33:27,449:INFO:Calculating mean and std
2022-08-11 21:33:27,451:INFO:Creating metrics dataframe
2022-08-11 21:33:27,454:INFO:Uploading results into container
2022-08-11 21:33:27,455:INFO:Uploading model into container now
2022-08-11 21:33:27,455:INFO:master_model_container: 12
2022-08-11 21:33:27,455:INFO:display_container: 2
2022-08-11 21:33:27,456:INFO:DecisionTreeRegressor(random_state=2453)
2022-08-11 21:33:27,456:INFO:create_model() successfully completed......................................
2022-08-11 21:33:27,551:INFO:SubProcess create_model() end ==================================
2022-08-11 21:33:27,551:INFO:Creating metrics dataframe
2022-08-11 21:33:27,558:INFO:Initializing Random Forest Regressor
2022-08-11 21:33:27,559:INFO:Total runtime is 0.1596564014752706 minutes
2022-08-11 21:33:27,561:INFO:SubProcess create_model() called ==================================
2022-08-11 21:33:27,561:INFO:Initializing create_model()
2022-08-11 21:33:27,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:33:27,561:INFO:Checking exceptions
2022-08-11 21:33:27,566:INFO:Importing libraries
2022-08-11 21:33:27,566:INFO:Copying training dataset
2022-08-11 21:33:27,574:INFO:Defining folds
2022-08-11 21:33:27,574:INFO:Declaring metric variables
2022-08-11 21:33:27,577:INFO:Importing untrained model
2022-08-11 21:33:27,579:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:33:27,583:INFO:Starting cross validation
2022-08-11 21:33:27,584:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:34:40,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,379:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,438:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,481:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,494:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:34:40,636:INFO:Calculating mean and std
2022-08-11 21:34:40,637:INFO:Creating metrics dataframe
2022-08-11 21:34:40,641:INFO:Uploading results into container
2022-08-11 21:34:40,642:INFO:Uploading model into container now
2022-08-11 21:34:40,642:INFO:master_model_container: 13
2022-08-11 21:34:40,642:INFO:display_container: 2
2022-08-11 21:34:40,643:INFO:RandomForestRegressor(n_jobs=-1, random_state=2453)
2022-08-11 21:34:40,643:INFO:create_model() successfully completed......................................
2022-08-11 21:34:40,741:INFO:SubProcess create_model() end ==================================
2022-08-11 21:34:40,741:INFO:Creating metrics dataframe
2022-08-11 21:34:40,749:INFO:Initializing Extra Trees Regressor
2022-08-11 21:34:40,749:INFO:Total runtime is 1.3794981320699056 minutes
2022-08-11 21:34:40,751:INFO:SubProcess create_model() called ==================================
2022-08-11 21:34:40,751:INFO:Initializing create_model()
2022-08-11 21:34:40,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:34:40,751:INFO:Checking exceptions
2022-08-11 21:34:40,756:INFO:Importing libraries
2022-08-11 21:34:40,756:INFO:Copying training dataset
2022-08-11 21:34:40,764:INFO:Defining folds
2022-08-11 21:34:40,764:INFO:Declaring metric variables
2022-08-11 21:34:40,767:INFO:Importing untrained model
2022-08-11 21:34:40,769:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:34:40,779:INFO:Starting cross validation
2022-08-11 21:34:40,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:35:09,466:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,477:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,628:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,692:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,725:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,814:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,827:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:09,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:11,487:INFO:Calculating mean and std
2022-08-11 21:35:11,488:INFO:Creating metrics dataframe
2022-08-11 21:35:11,490:INFO:Uploading results into container
2022-08-11 21:35:11,491:INFO:Uploading model into container now
2022-08-11 21:35:11,491:INFO:master_model_container: 14
2022-08-11 21:35:11,492:INFO:display_container: 2
2022-08-11 21:35:11,492:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2453)
2022-08-11 21:35:11,492:INFO:create_model() successfully completed......................................
2022-08-11 21:35:11,586:INFO:SubProcess create_model() end ==================================
2022-08-11 21:35:11,586:INFO:Creating metrics dataframe
2022-08-11 21:35:11,594:INFO:Initializing AdaBoost Regressor
2022-08-11 21:35:11,594:INFO:Total runtime is 1.8935792843500772 minutes
2022-08-11 21:35:11,596:INFO:SubProcess create_model() called ==================================
2022-08-11 21:35:11,596:INFO:Initializing create_model()
2022-08-11 21:35:11,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:35:11,596:INFO:Checking exceptions
2022-08-11 21:35:11,602:INFO:Importing libraries
2022-08-11 21:35:11,602:INFO:Copying training dataset
2022-08-11 21:35:11,612:INFO:Defining folds
2022-08-11 21:35:11,612:INFO:Declaring metric variables
2022-08-11 21:35:11,619:INFO:Importing untrained model
2022-08-11 21:35:11,623:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:35:11,630:INFO:Starting cross validation
2022-08-11 21:35:11,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:35:17,278:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:18,032:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,121:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,278:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,293:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,338:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,358:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,588:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:20,716:INFO:Calculating mean and std
2022-08-11 21:35:20,719:INFO:Creating metrics dataframe
2022-08-11 21:35:20,723:INFO:Uploading results into container
2022-08-11 21:35:20,723:INFO:Uploading model into container now
2022-08-11 21:35:20,724:INFO:master_model_container: 15
2022-08-11 21:35:20,724:INFO:display_container: 2
2022-08-11 21:35:20,724:INFO:AdaBoostRegressor(random_state=2453)
2022-08-11 21:35:20,724:INFO:create_model() successfully completed......................................
2022-08-11 21:35:20,840:INFO:SubProcess create_model() end ==================================
2022-08-11 21:35:20,840:INFO:Creating metrics dataframe
2022-08-11 21:35:20,850:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:35:20,850:INFO:Total runtime is 2.047847282886505 minutes
2022-08-11 21:35:20,852:INFO:SubProcess create_model() called ==================================
2022-08-11 21:35:20,853:INFO:Initializing create_model()
2022-08-11 21:35:20,853:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:35:20,853:INFO:Checking exceptions
2022-08-11 21:35:20,864:INFO:Importing libraries
2022-08-11 21:35:20,865:INFO:Copying training dataset
2022-08-11 21:35:20,877:INFO:Defining folds
2022-08-11 21:35:20,877:INFO:Declaring metric variables
2022-08-11 21:35:20,880:INFO:Importing untrained model
2022-08-11 21:35:20,883:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:35:20,887:INFO:Starting cross validation
2022-08-11 21:35:20,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:35:37,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,337:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,350:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,351:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,358:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,365:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,370:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,500:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:37,620:INFO:Calculating mean and std
2022-08-11 21:35:37,622:INFO:Creating metrics dataframe
2022-08-11 21:35:37,626:INFO:Uploading results into container
2022-08-11 21:35:37,627:INFO:Uploading model into container now
2022-08-11 21:35:37,627:INFO:master_model_container: 16
2022-08-11 21:35:37,627:INFO:display_container: 2
2022-08-11 21:35:37,627:INFO:GradientBoostingRegressor(random_state=2453)
2022-08-11 21:35:37,627:INFO:create_model() successfully completed......................................
2022-08-11 21:35:37,724:INFO:SubProcess create_model() end ==================================
2022-08-11 21:35:37,724:INFO:Creating metrics dataframe
2022-08-11 21:35:37,733:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:35:37,733:INFO:Total runtime is 2.3292277495066323 minutes
2022-08-11 21:35:37,735:INFO:SubProcess create_model() called ==================================
2022-08-11 21:35:37,735:INFO:Initializing create_model()
2022-08-11 21:35:37,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:35:37,736:INFO:Checking exceptions
2022-08-11 21:35:37,745:INFO:Importing libraries
2022-08-11 21:35:37,745:INFO:Copying training dataset
2022-08-11 21:35:37,755:INFO:Defining folds
2022-08-11 21:35:37,755:INFO:Declaring metric variables
2022-08-11 21:35:37,758:INFO:Importing untrained model
2022-08-11 21:35:37,761:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:35:37,765:INFO:Starting cross validation
2022-08-11 21:35:37,766:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:35:47,980:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,003:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,061:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,078:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,120:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,188:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,195:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,196:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:48,326:INFO:Calculating mean and std
2022-08-11 21:35:48,328:INFO:Creating metrics dataframe
2022-08-11 21:35:48,331:INFO:Uploading results into container
2022-08-11 21:35:48,331:INFO:Uploading model into container now
2022-08-11 21:35:48,332:INFO:master_model_container: 17
2022-08-11 21:35:48,332:INFO:display_container: 2
2022-08-11 21:35:48,333:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=2453,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:35:48,333:INFO:create_model() successfully completed......................................
2022-08-11 21:35:48,425:INFO:SubProcess create_model() end ==================================
2022-08-11 21:35:48,425:INFO:Creating metrics dataframe
2022-08-11 21:35:48,434:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:35:48,434:INFO:Total runtime is 2.50757528146108 minutes
2022-08-11 21:35:48,436:INFO:SubProcess create_model() called ==================================
2022-08-11 21:35:48,436:INFO:Initializing create_model()
2022-08-11 21:35:48,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:35:48,436:INFO:Checking exceptions
2022-08-11 21:35:48,441:INFO:Importing libraries
2022-08-11 21:35:48,441:INFO:Copying training dataset
2022-08-11 21:35:48,452:INFO:Defining folds
2022-08-11 21:35:48,453:INFO:Declaring metric variables
2022-08-11 21:35:48,455:INFO:Importing untrained model
2022-08-11 21:35:48,458:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:35:48,462:INFO:Starting cross validation
2022-08-11 21:35:48,462:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:35:49,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,105:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,111:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,122:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,131:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,150:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,150:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,168:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,306:INFO:Calculating mean and std
2022-08-11 21:35:49,308:INFO:Creating metrics dataframe
2022-08-11 21:35:49,311:INFO:Uploading results into container
2022-08-11 21:35:49,312:INFO:Uploading model into container now
2022-08-11 21:35:49,312:INFO:master_model_container: 18
2022-08-11 21:35:49,312:INFO:display_container: 2
2022-08-11 21:35:49,313:INFO:LGBMRegressor(random_state=2453)
2022-08-11 21:35:49,313:INFO:create_model() successfully completed......................................
2022-08-11 21:35:49,407:INFO:SubProcess create_model() end ==================================
2022-08-11 21:35:49,407:INFO:Creating metrics dataframe
2022-08-11 21:35:49,415:INFO:Initializing Dummy Regressor
2022-08-11 21:35:49,415:INFO:Total runtime is 2.523934515317281 minutes
2022-08-11 21:35:49,417:INFO:SubProcess create_model() called ==================================
2022-08-11 21:35:49,417:INFO:Initializing create_model()
2022-08-11 21:35:49,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebf574310>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:35:49,417:INFO:Checking exceptions
2022-08-11 21:35:49,426:INFO:Importing libraries
2022-08-11 21:35:49,426:INFO:Copying training dataset
2022-08-11 21:35:49,437:INFO:Defining folds
2022-08-11 21:35:49,437:INFO:Declaring metric variables
2022-08-11 21:35:49,439:INFO:Importing untrained model
2022-08-11 21:35:49,441:INFO:Dummy Regressor Imported successfully
2022-08-11 21:35:49,446:INFO:Starting cross validation
2022-08-11 21:35:49,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:35:49,556:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,557:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,557:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,561:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,562:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,564:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,579:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,598:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:35:49,738:INFO:Calculating mean and std
2022-08-11 21:35:49,740:INFO:Creating metrics dataframe
2022-08-11 21:35:49,743:INFO:Uploading results into container
2022-08-11 21:35:49,743:INFO:Uploading model into container now
2022-08-11 21:35:49,744:INFO:master_model_container: 19
2022-08-11 21:35:49,744:INFO:display_container: 2
2022-08-11 21:35:49,744:INFO:DummyRegressor()
2022-08-11 21:35:49,744:INFO:create_model() successfully completed......................................
2022-08-11 21:35:49,836:INFO:SubProcess create_model() end ==================================
2022-08-11 21:35:49,836:INFO:Creating metrics dataframe
2022-08-11 21:35:49,851:INFO:Initializing create_model()
2022-08-11 21:35:49,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2453), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:35:49,851:INFO:Checking exceptions
2022-08-11 21:35:49,858:INFO:Importing libraries
2022-08-11 21:35:49,859:INFO:Copying training dataset
2022-08-11 21:35:49,868:INFO:Defining folds
2022-08-11 21:35:49,868:INFO:Declaring metric variables
2022-08-11 21:35:49,869:INFO:Importing untrained model
2022-08-11 21:35:49,869:INFO:Declaring custom model
2022-08-11 21:35:49,869:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:35:49,870:INFO:Cross validation set to False
2022-08-11 21:35:49,870:INFO:Fitting Model
2022-08-11 21:35:58,230:INFO:RandomForestRegressor(n_jobs=-1, random_state=2453)
2022-08-11 21:35:58,230:INFO:create_model() successfully completed......................................
2022-08-11 21:35:58,339:INFO:master_model_container: 19
2022-08-11 21:35:58,339:INFO:display_container: 2
2022-08-11 21:35:58,339:INFO:RandomForestRegressor(n_jobs=-1, random_state=2453)
2022-08-11 21:35:58,339:INFO:compare_models() successfully completed......................................
2022-08-11 21:36:10,914:INFO:Initializing create_model()
2022-08-11 21:36:10,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:36:10,918:INFO:Checking exceptions
2022-08-11 21:36:10,950:INFO:Importing libraries
2022-08-11 21:36:10,950:INFO:Copying training dataset
2022-08-11 21:36:10,968:INFO:Defining folds
2022-08-11 21:36:10,968:INFO:Declaring metric variables
2022-08-11 21:36:10,970:INFO:Importing untrained model
2022-08-11 21:36:10,972:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:36:10,977:INFO:Starting cross validation
2022-08-11 21:36:10,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:22,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:22,722:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:22,861:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:22,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:22,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:23,035:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:23,047:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:23,055:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:23,086:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:23,101:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:23,243:INFO:Calculating mean and std
2022-08-11 21:37:23,245:INFO:Creating metrics dataframe
2022-08-11 21:37:23,251:INFO:Finalizing model
2022-08-11 21:37:32,003:INFO:Uploading results into container
2022-08-11 21:37:32,003:INFO:Uploading model into container now
2022-08-11 21:37:32,009:INFO:master_model_container: 20
2022-08-11 21:37:32,009:INFO:display_container: 3
2022-08-11 21:37:32,009:INFO:RandomForestRegressor(n_jobs=-1, random_state=2453)
2022-08-11 21:37:32,009:INFO:create_model() successfully completed......................................
2022-08-11 21:37:32,107:INFO:Initializing finalize_model()
2022-08-11 21:37:32,107:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2453), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:37:32,108:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=2453)
2022-08-11 21:37:32,128:INFO:Initializing create_model()
2022-08-11 21:37:32,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=RandomForestRegressor(n_jobs=-1, random_state=2453), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:37:32,128:INFO:Checking exceptions
2022-08-11 21:37:32,129:INFO:Importing libraries
2022-08-11 21:37:32,129:INFO:Copying training dataset
2022-08-11 21:37:32,132:INFO:Defining folds
2022-08-11 21:37:32,133:INFO:Declaring metric variables
2022-08-11 21:37:32,133:INFO:Importing untrained model
2022-08-11 21:37:32,133:INFO:Declaring custom model
2022-08-11 21:37:32,133:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:37:32,134:INFO:Cross validation set to False
2022-08-11 21:37:32,134:INFO:Fitting Model
2022-08-11 21:37:45,678:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2453))])
2022-08-11 21:37:45,678:INFO:create_model() successfully completed......................................
2022-08-11 21:37:45,777:INFO:Initializing predict_model()
2022-08-11 21:37:45,777:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2453))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7eba69ff70>)
2022-08-11 21:37:45,777:INFO:Checking exceptions
2022-08-11 21:37:45,777:INFO:Preloading libraries
2022-08-11 21:37:46,075:INFO:Set up data.
2022-08-11 21:37:46,357:INFO:display_container: 4
2022-08-11 21:37:46,357:INFO:master_model_container: 20
2022-08-11 21:37:46,357:INFO:display_container: 4
2022-08-11 21:37:46,361:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2453))])
2022-08-11 21:37:46,361:INFO:finalize_model() successfully completed......................................
2022-08-11 21:37:46,456:INFO:Initializing predict_model()
2022-08-11 21:37:46,456:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebffaf910>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2453))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ebffb2820>)
2022-08-11 21:37:46,456:INFO:Checking exceptions
2022-08-11 21:37:46,456:INFO:Preloading libraries
2022-08-11 21:37:46,661:INFO:Set up data.
2022-08-11 21:37:47,217:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3395959929.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_04'] = predict_model(model_y04, data=test_df)['prediction_label']

2022-08-11 21:37:47,221:INFO:PyCaret RegressionExperiment
2022-08-11 21:37:47,222:INFO:Logging name: reg-default-name
2022-08-11 21:37:47,222:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:37:47,222:INFO:version 3.0.0.rc3
2022-08-11 21:37:47,222:INFO:Initializing setup()
2022-08-11 21:37:47,222:INFO:self.USI: 8470
2022-08-11 21:37:47,222:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:37:47,222:INFO:Checking environment
2022-08-11 21:37:47,222:INFO:python_version: 3.8.8
2022-08-11 21:37:47,222:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:37:47,222:INFO:machine: x86_64
2022-08-11 21:37:47,222:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:37:47,222:INFO:Memory: svmem(total=34359738368, available=4026302464, percent=88.3, used=4395343872, free=48644096, active=3979210752, inactive=3958657024, wired=416133120)
2022-08-11 21:37:47,222:INFO:Physical Core: 10
2022-08-11 21:37:47,222:INFO:Logical Core: 10
2022-08-11 21:37:47,222:INFO:Checking libraries
2022-08-11 21:37:47,222:INFO:System:
2022-08-11 21:37:47,222:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:37:47,222:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:37:47,222:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:37:47,222:INFO:PyCaret required dependencies:
2022-08-11 21:37:47,222:INFO:                 pip: 22.1.2
2022-08-11 21:37:47,222:INFO:          setuptools: 61.2.0
2022-08-11 21:37:47,222:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:37:47,222:INFO:             IPython: 8.4.0
2022-08-11 21:37:47,222:INFO:          ipywidgets: 7.6.5
2022-08-11 21:37:47,222:INFO:                tqdm: 4.64.0
2022-08-11 21:37:47,222:INFO:               numpy: 1.22.4
2022-08-11 21:37:47,222:INFO:              pandas: 1.4.3
2022-08-11 21:37:47,222:INFO:              jinja2: 3.0.3
2022-08-11 21:37:47,223:INFO:               scipy: 1.5.4
2022-08-11 21:37:47,223:INFO:              joblib: 1.1.0
2022-08-11 21:37:47,223:INFO:             sklearn: 1.1.1
2022-08-11 21:37:47,223:INFO:                pyod: 1.0.4
2022-08-11 21:37:47,223:INFO:            imblearn: 0.9.1
2022-08-11 21:37:47,223:INFO:   category_encoders: 2.5.0
2022-08-11 21:37:47,223:INFO:            lightgbm: 3.2.1
2022-08-11 21:37:47,223:INFO:               numba: 0.55.2
2022-08-11 21:37:47,223:INFO:            requests: 2.28.1
2022-08-11 21:37:47,223:INFO:          matplotlib: 3.5.1
2022-08-11 21:37:47,223:INFO:          scikitplot: 0.3.7
2022-08-11 21:37:47,223:INFO:         yellowbrick: 1.4
2022-08-11 21:37:47,223:INFO:              plotly: 5.9.0
2022-08-11 21:37:47,223:INFO:             kaleido: 0.2.1
2022-08-11 21:37:47,223:INFO:         statsmodels: 0.13.2
2022-08-11 21:37:47,223:INFO:              sktime: 0.13.0
2022-08-11 21:37:47,223:INFO:               tbats: 1.1.0
2022-08-11 21:37:47,223:INFO:            pmdarima: 1.8.5
2022-08-11 21:37:47,223:INFO:              psutil: 5.9.1
2022-08-11 21:37:47,223:INFO:PyCaret optional dependencies:
2022-08-11 21:37:47,223:INFO:                shap: Not installed
2022-08-11 21:37:47,223:INFO:           interpret: Not installed
2022-08-11 21:37:47,223:INFO:                umap: 0.5.3
2022-08-11 21:37:47,223:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:37:47,223:INFO:  explainerdashboard: Not installed
2022-08-11 21:37:47,223:INFO:             autoviz: Not installed
2022-08-11 21:37:47,223:INFO:           fairlearn: Not installed
2022-08-11 21:37:47,223:INFO:             xgboost: 1.6.1
2022-08-11 21:37:47,223:INFO:            catboost: Not installed
2022-08-11 21:37:47,223:INFO:              kmodes: 0.12.1
2022-08-11 21:37:47,223:INFO:             mlxtend: 0.19.0
2022-08-11 21:37:47,223:INFO:       statsforecast: Not installed
2022-08-11 21:37:47,223:INFO:        tune_sklearn: Not installed
2022-08-11 21:37:47,223:INFO:                 ray: Not installed
2022-08-11 21:37:47,223:INFO:            hyperopt: Not installed
2022-08-11 21:37:47,223:INFO:              optuna: Not installed
2022-08-11 21:37:47,223:INFO:               skopt: Not installed
2022-08-11 21:37:47,223:INFO:              mlflow: 1.27.0
2022-08-11 21:37:47,223:INFO:              gradio: Not installed
2022-08-11 21:37:47,223:INFO:             fastapi: Not installed
2022-08-11 21:37:47,223:INFO:             uvicorn: Not installed
2022-08-11 21:37:47,223:INFO:              m2cgen: Not installed
2022-08-11 21:37:47,223:INFO:           evidently: Not installed
2022-08-11 21:37:47,223:INFO:                nltk: 3.7
2022-08-11 21:37:47,223:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:37:47,223:INFO:              gensim: 3.8.3
2022-08-11 21:37:47,223:INFO:               spacy: 2.3.7
2022-08-11 21:37:47,223:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:37:47,223:INFO:            textblob: 0.17.1
2022-08-11 21:37:47,223:INFO:               fugue: Not installed
2022-08-11 21:37:47,223:INFO:           streamlit: Not installed
2022-08-11 21:37:47,224:INFO:             prophet: Not installed
2022-08-11 21:37:47,224:INFO:None
2022-08-11 21:37:47,224:INFO:Set up data.
2022-08-11 21:37:47,251:INFO:Set up train/test split.
2022-08-11 21:37:47,265:INFO:Set up folding strategy.
2022-08-11 21:37:47,265:INFO:Assigning column types.
2022-08-11 21:37:47,272:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:37:47,273:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,277:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,281:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,379:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:47,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:47,382:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,386:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,390:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,447:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,488:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:47,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:47,491:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:37:47,495:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,499:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,556:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,597:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,597:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:47,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:47,603:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,608:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,707:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:47,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:47,710:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:37:47,718:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,815:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:47,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:47,826:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:47,923:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:47,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:47,925:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:37:47,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:48,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:48,031:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:48,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:48,100:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:48,140:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:37:48,140:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:48,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:48,143:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:37:48,208:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:48,248:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:48,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:48,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:37:48,356:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:48,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:48,359:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:37:48,469:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:48,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:48,580:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:48,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:48,583:INFO:Preparing preprocessing pipeline...
2022-08-11 21:37:48,584:INFO:Set up simple imputation.
2022-08-11 21:37:48,584:INFO:Set up variance threshold.
2022-08-11 21:37:48,760:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:37:48,763:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:37:48,764:INFO:Creating final display dataframe.
2022-08-11 21:37:49,462:INFO:Setup display_container:                Description             Value
0               Session id              2275
1                   Target              Y_05
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              8470
2022-08-11 21:37:49,572:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:49,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:49,681:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:37:49,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:37:49,698:INFO:setup() successfully completed in 2.48s...............
2022-08-11 21:37:49,701:INFO:Initializing compare_models()
2022-08-11 21:37:49,701:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:37:49,702:INFO:Checking exceptions
2022-08-11 21:37:49,707:INFO:Preparing display monitor
2022-08-11 21:37:49,729:INFO:Initializing Linear Regression
2022-08-11 21:37:49,729:INFO:Total runtime is 2.7298927307128905e-06 minutes
2022-08-11 21:37:49,732:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:49,732:INFO:Initializing create_model()
2022-08-11 21:37:49,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:49,732:INFO:Checking exceptions
2022-08-11 21:37:49,738:INFO:Importing libraries
2022-08-11 21:37:49,738:INFO:Copying training dataset
2022-08-11 21:37:49,747:INFO:Defining folds
2022-08-11 21:37:49,747:INFO:Declaring metric variables
2022-08-11 21:37:49,749:INFO:Importing untrained model
2022-08-11 21:37:49,751:INFO:Linear Regression Imported successfully
2022-08-11 21:37:49,755:INFO:Starting cross validation
2022-08-11 21:37:49,756:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:50,338:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,385:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,394:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,421:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,482:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:50,753:INFO:Calculating mean and std
2022-08-11 21:37:50,755:INFO:Creating metrics dataframe
2022-08-11 21:37:50,757:INFO:Uploading results into container
2022-08-11 21:37:50,758:INFO:Uploading model into container now
2022-08-11 21:37:50,758:INFO:master_model_container: 1
2022-08-11 21:37:50,758:INFO:display_container: 2
2022-08-11 21:37:50,758:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:37:50,758:INFO:create_model() successfully completed......................................
2022-08-11 21:37:50,855:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:50,855:INFO:Creating metrics dataframe
2022-08-11 21:37:50,860:INFO:Initializing Lasso Regression
2022-08-11 21:37:50,860:INFO:Total runtime is 0.018850966294606527 minutes
2022-08-11 21:37:50,862:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:50,863:INFO:Initializing create_model()
2022-08-11 21:37:50,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:50,863:INFO:Checking exceptions
2022-08-11 21:37:50,867:INFO:Importing libraries
2022-08-11 21:37:50,867:INFO:Copying training dataset
2022-08-11 21:37:50,875:INFO:Defining folds
2022-08-11 21:37:50,875:INFO:Declaring metric variables
2022-08-11 21:37:50,878:INFO:Importing untrained model
2022-08-11 21:37:50,880:INFO:Lasso Regression Imported successfully
2022-08-11 21:37:50,885:INFO:Starting cross validation
2022-08-11 21:37:50,886:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:51,007:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,017:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,022:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,022:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,035:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,058:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,183:INFO:Calculating mean and std
2022-08-11 21:37:51,185:INFO:Creating metrics dataframe
2022-08-11 21:37:51,189:INFO:Uploading results into container
2022-08-11 21:37:51,189:INFO:Uploading model into container now
2022-08-11 21:37:51,190:INFO:master_model_container: 2
2022-08-11 21:37:51,190:INFO:display_container: 2
2022-08-11 21:37:51,190:INFO:Lasso(random_state=2275)
2022-08-11 21:37:51,190:INFO:create_model() successfully completed......................................
2022-08-11 21:37:51,285:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:51,285:INFO:Creating metrics dataframe
2022-08-11 21:37:51,292:INFO:Initializing Ridge Regression
2022-08-11 21:37:51,292:INFO:Total runtime is 0.02604336738586426 minutes
2022-08-11 21:37:51,294:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:51,294:INFO:Initializing create_model()
2022-08-11 21:37:51,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:51,294:INFO:Checking exceptions
2022-08-11 21:37:51,299:INFO:Importing libraries
2022-08-11 21:37:51,299:INFO:Copying training dataset
2022-08-11 21:37:51,307:INFO:Defining folds
2022-08-11 21:37:51,307:INFO:Declaring metric variables
2022-08-11 21:37:51,310:INFO:Importing untrained model
2022-08-11 21:37:51,312:INFO:Ridge Regression Imported successfully
2022-08-11 21:37:51,316:INFO:Starting cross validation
2022-08-11 21:37:51,317:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:51,436:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,436:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,451:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,451:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,621:INFO:Calculating mean and std
2022-08-11 21:37:51,622:INFO:Creating metrics dataframe
2022-08-11 21:37:51,626:INFO:Uploading results into container
2022-08-11 21:37:51,626:INFO:Uploading model into container now
2022-08-11 21:37:51,627:INFO:master_model_container: 3
2022-08-11 21:37:51,627:INFO:display_container: 2
2022-08-11 21:37:51,627:INFO:Ridge(random_state=2275)
2022-08-11 21:37:51,627:INFO:create_model() successfully completed......................................
2022-08-11 21:37:51,722:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:51,723:INFO:Creating metrics dataframe
2022-08-11 21:37:51,728:INFO:Initializing Elastic Net
2022-08-11 21:37:51,728:INFO:Total runtime is 0.033321531613667806 minutes
2022-08-11 21:37:51,731:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:51,731:INFO:Initializing create_model()
2022-08-11 21:37:51,731:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:51,731:INFO:Checking exceptions
2022-08-11 21:37:51,736:INFO:Importing libraries
2022-08-11 21:37:51,736:INFO:Copying training dataset
2022-08-11 21:37:51,744:INFO:Defining folds
2022-08-11 21:37:51,744:INFO:Declaring metric variables
2022-08-11 21:37:51,747:INFO:Importing untrained model
2022-08-11 21:37:51,749:INFO:Elastic Net Imported successfully
2022-08-11 21:37:51,753:INFO:Starting cross validation
2022-08-11 21:37:51,754:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:51,871:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,877:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,877:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,879:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,881:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,889:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,913:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:51,922:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,040:INFO:Calculating mean and std
2022-08-11 21:37:52,041:INFO:Creating metrics dataframe
2022-08-11 21:37:52,045:INFO:Uploading results into container
2022-08-11 21:37:52,045:INFO:Uploading model into container now
2022-08-11 21:37:52,046:INFO:master_model_container: 4
2022-08-11 21:37:52,046:INFO:display_container: 2
2022-08-11 21:37:52,046:INFO:ElasticNet(random_state=2275)
2022-08-11 21:37:52,046:INFO:create_model() successfully completed......................................
2022-08-11 21:37:52,140:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:52,141:INFO:Creating metrics dataframe
2022-08-11 21:37:52,148:INFO:Initializing Least Angle Regression
2022-08-11 21:37:52,148:INFO:Total runtime is 0.04030841588973999 minutes
2022-08-11 21:37:52,150:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:52,150:INFO:Initializing create_model()
2022-08-11 21:37:52,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:52,150:INFO:Checking exceptions
2022-08-11 21:37:52,155:INFO:Importing libraries
2022-08-11 21:37:52,155:INFO:Copying training dataset
2022-08-11 21:37:52,163:INFO:Defining folds
2022-08-11 21:37:52,163:INFO:Declaring metric variables
2022-08-11 21:37:52,166:INFO:Importing untrained model
2022-08-11 21:37:52,169:INFO:Least Angle Regression Imported successfully
2022-08-11 21:37:52,174:INFO:Starting cross validation
2022-08-11 21:37:52,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:52,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,296:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,303:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,307:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,310:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,314:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,315:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,323:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,330:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,338:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:52,346:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,353:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,472:INFO:Calculating mean and std
2022-08-11 21:37:52,473:INFO:Creating metrics dataframe
2022-08-11 21:37:52,476:INFO:Uploading results into container
2022-08-11 21:37:52,477:INFO:Uploading model into container now
2022-08-11 21:37:52,478:INFO:master_model_container: 5
2022-08-11 21:37:52,478:INFO:display_container: 2
2022-08-11 21:37:52,478:INFO:Lars(random_state=2275)
2022-08-11 21:37:52,478:INFO:create_model() successfully completed......................................
2022-08-11 21:37:52,571:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:52,571:INFO:Creating metrics dataframe
2022-08-11 21:37:52,577:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:37:52,578:INFO:Total runtime is 0.04747408231099447 minutes
2022-08-11 21:37:52,580:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:52,580:INFO:Initializing create_model()
2022-08-11 21:37:52,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:52,580:INFO:Checking exceptions
2022-08-11 21:37:52,585:INFO:Importing libraries
2022-08-11 21:37:52,586:INFO:Copying training dataset
2022-08-11 21:37:52,593:INFO:Defining folds
2022-08-11 21:37:52,594:INFO:Declaring metric variables
2022-08-11 21:37:52,596:INFO:Importing untrained model
2022-08-11 21:37:52,600:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:37:52,605:INFO:Starting cross validation
2022-08-11 21:37:52,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:52,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,722:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,726:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,732:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,736:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,743:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,745:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,745:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,759:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,778:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,788:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,793:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:37:52,802:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:52,921:INFO:Calculating mean and std
2022-08-11 21:37:52,923:INFO:Creating metrics dataframe
2022-08-11 21:37:52,926:INFO:Uploading results into container
2022-08-11 21:37:52,927:INFO:Uploading model into container now
2022-08-11 21:37:52,927:INFO:master_model_container: 6
2022-08-11 21:37:52,927:INFO:display_container: 2
2022-08-11 21:37:52,928:INFO:LassoLars(random_state=2275)
2022-08-11 21:37:52,928:INFO:create_model() successfully completed......................................
2022-08-11 21:37:53,024:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:53,024:INFO:Creating metrics dataframe
2022-08-11 21:37:53,030:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:37:53,030:INFO:Total runtime is 0.055020097891489664 minutes
2022-08-11 21:37:53,032:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:53,032:INFO:Initializing create_model()
2022-08-11 21:37:53,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:53,033:INFO:Checking exceptions
2022-08-11 21:37:53,037:INFO:Importing libraries
2022-08-11 21:37:53,037:INFO:Copying training dataset
2022-08-11 21:37:53,045:INFO:Defining folds
2022-08-11 21:37:53,045:INFO:Declaring metric variables
2022-08-11 21:37:53,048:INFO:Importing untrained model
2022-08-11 21:37:53,050:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:37:53,055:INFO:Starting cross validation
2022-08-11 21:37:53,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:53,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,173:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,179:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,180:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,180:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,184:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,188:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,193:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,187:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,188:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,202:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,276:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:37:53,287:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,407:INFO:Calculating mean and std
2022-08-11 21:37:53,409:INFO:Creating metrics dataframe
2022-08-11 21:37:53,412:INFO:Uploading results into container
2022-08-11 21:37:53,413:INFO:Uploading model into container now
2022-08-11 21:37:53,413:INFO:master_model_container: 7
2022-08-11 21:37:53,413:INFO:display_container: 2
2022-08-11 21:37:53,414:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:37:53,414:INFO:create_model() successfully completed......................................
2022-08-11 21:37:53,507:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:53,508:INFO:Creating metrics dataframe
2022-08-11 21:37:53,515:INFO:Initializing Bayesian Ridge
2022-08-11 21:37:53,515:INFO:Total runtime is 0.06309191783269247 minutes
2022-08-11 21:37:53,517:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:53,517:INFO:Initializing create_model()
2022-08-11 21:37:53,517:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:53,517:INFO:Checking exceptions
2022-08-11 21:37:53,522:INFO:Importing libraries
2022-08-11 21:37:53,522:INFO:Copying training dataset
2022-08-11 21:37:53,530:INFO:Defining folds
2022-08-11 21:37:53,530:INFO:Declaring metric variables
2022-08-11 21:37:53,533:INFO:Importing untrained model
2022-08-11 21:37:53,535:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:37:53,539:INFO:Starting cross validation
2022-08-11 21:37:53,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:53,889:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,889:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,892:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,892:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,896:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,913:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,913:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,927:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:53,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,100:INFO:Calculating mean and std
2022-08-11 21:37:54,102:INFO:Creating metrics dataframe
2022-08-11 21:37:54,106:INFO:Uploading results into container
2022-08-11 21:37:54,106:INFO:Uploading model into container now
2022-08-11 21:37:54,106:INFO:master_model_container: 8
2022-08-11 21:37:54,106:INFO:display_container: 2
2022-08-11 21:37:54,107:INFO:BayesianRidge()
2022-08-11 21:37:54,107:INFO:create_model() successfully completed......................................
2022-08-11 21:37:54,202:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:54,202:INFO:Creating metrics dataframe
2022-08-11 21:37:54,209:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:37:54,209:INFO:Total runtime is 0.0746656616528829 minutes
2022-08-11 21:37:54,211:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:54,212:INFO:Initializing create_model()
2022-08-11 21:37:54,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:54,212:INFO:Checking exceptions
2022-08-11 21:37:54,216:INFO:Importing libraries
2022-08-11 21:37:54,217:INFO:Copying training dataset
2022-08-11 21:37:54,224:INFO:Defining folds
2022-08-11 21:37:54,224:INFO:Declaring metric variables
2022-08-11 21:37:54,227:INFO:Importing untrained model
2022-08-11 21:37:54,229:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:37:54,234:INFO:Starting cross validation
2022-08-11 21:37:54,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:54,429:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,451:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,462:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,464:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,465:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,474:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,512:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,513:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,515:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:54,633:INFO:Calculating mean and std
2022-08-11 21:37:54,635:INFO:Creating metrics dataframe
2022-08-11 21:37:54,638:INFO:Uploading results into container
2022-08-11 21:37:54,639:INFO:Uploading model into container now
2022-08-11 21:37:54,639:INFO:master_model_container: 9
2022-08-11 21:37:54,639:INFO:display_container: 2
2022-08-11 21:37:54,639:INFO:PassiveAggressiveRegressor(random_state=2275)
2022-08-11 21:37:54,639:INFO:create_model() successfully completed......................................
2022-08-11 21:37:54,736:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:54,736:INFO:Creating metrics dataframe
2022-08-11 21:37:54,744:INFO:Initializing Huber Regressor
2022-08-11 21:37:54,744:INFO:Total runtime is 0.08357883294423421 minutes
2022-08-11 21:37:54,746:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:54,747:INFO:Initializing create_model()
2022-08-11 21:37:54,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:54,747:INFO:Checking exceptions
2022-08-11 21:37:54,751:INFO:Importing libraries
2022-08-11 21:37:54,751:INFO:Copying training dataset
2022-08-11 21:37:54,759:INFO:Defining folds
2022-08-11 21:37:54,759:INFO:Declaring metric variables
2022-08-11 21:37:54,762:INFO:Importing untrained model
2022-08-11 21:37:54,764:INFO:Huber Regressor Imported successfully
2022-08-11 21:37:54,768:INFO:Starting cross validation
2022-08-11 21:37:54,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:55,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,339:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,594:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:37:55,595:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:37:55,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:37:55,615:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:37:55,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,684:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:37:55,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,711:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:37:55,712:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:55,830:INFO:Calculating mean and std
2022-08-11 21:37:55,832:INFO:Creating metrics dataframe
2022-08-11 21:37:55,835:INFO:Uploading results into container
2022-08-11 21:37:55,836:INFO:Uploading model into container now
2022-08-11 21:37:55,836:INFO:master_model_container: 10
2022-08-11 21:37:55,836:INFO:display_container: 2
2022-08-11 21:37:55,836:INFO:HuberRegressor()
2022-08-11 21:37:55,836:INFO:create_model() successfully completed......................................
2022-08-11 21:37:55,931:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:55,932:INFO:Creating metrics dataframe
2022-08-11 21:37:55,939:INFO:Initializing K Neighbors Regressor
2022-08-11 21:37:55,939:INFO:Total runtime is 0.10349841515223185 minutes
2022-08-11 21:37:55,941:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:55,942:INFO:Initializing create_model()
2022-08-11 21:37:55,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:55,942:INFO:Checking exceptions
2022-08-11 21:37:55,946:INFO:Importing libraries
2022-08-11 21:37:55,946:INFO:Copying training dataset
2022-08-11 21:37:55,954:INFO:Defining folds
2022-08-11 21:37:55,954:INFO:Declaring metric variables
2022-08-11 21:37:55,957:INFO:Importing untrained model
2022-08-11 21:37:55,959:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:37:55,962:INFO:Starting cross validation
2022-08-11 21:37:55,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:56,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,080:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,082:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,086:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,090:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,091:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,100:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,124:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:56,145:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:57,200:INFO:Calculating mean and std
2022-08-11 21:37:57,202:INFO:Creating metrics dataframe
2022-08-11 21:37:57,206:INFO:Uploading results into container
2022-08-11 21:37:57,206:INFO:Uploading model into container now
2022-08-11 21:37:57,207:INFO:master_model_container: 11
2022-08-11 21:37:57,207:INFO:display_container: 2
2022-08-11 21:37:57,207:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:37:57,207:INFO:create_model() successfully completed......................................
2022-08-11 21:37:57,305:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:57,305:INFO:Creating metrics dataframe
2022-08-11 21:37:57,312:INFO:Initializing Decision Tree Regressor
2022-08-11 21:37:57,313:INFO:Total runtime is 0.1263896147410075 minutes
2022-08-11 21:37:57,315:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:57,315:INFO:Initializing create_model()
2022-08-11 21:37:57,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:57,315:INFO:Checking exceptions
2022-08-11 21:37:57,320:INFO:Importing libraries
2022-08-11 21:37:57,320:INFO:Copying training dataset
2022-08-11 21:37:57,328:INFO:Defining folds
2022-08-11 21:37:57,328:INFO:Declaring metric variables
2022-08-11 21:37:57,330:INFO:Importing untrained model
2022-08-11 21:37:57,334:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:37:57,338:INFO:Starting cross validation
2022-08-11 21:37:57,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:37:58,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,631:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,704:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,743:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,758:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,760:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:37:58,880:INFO:Calculating mean and std
2022-08-11 21:37:58,882:INFO:Creating metrics dataframe
2022-08-11 21:37:58,885:INFO:Uploading results into container
2022-08-11 21:37:58,885:INFO:Uploading model into container now
2022-08-11 21:37:58,886:INFO:master_model_container: 12
2022-08-11 21:37:58,886:INFO:display_container: 2
2022-08-11 21:37:58,886:INFO:DecisionTreeRegressor(random_state=2275)
2022-08-11 21:37:58,886:INFO:create_model() successfully completed......................................
2022-08-11 21:37:58,982:INFO:SubProcess create_model() end ==================================
2022-08-11 21:37:58,982:INFO:Creating metrics dataframe
2022-08-11 21:37:58,990:INFO:Initializing Random Forest Regressor
2022-08-11 21:37:58,991:INFO:Total runtime is 0.15435644785563152 minutes
2022-08-11 21:37:58,993:INFO:SubProcess create_model() called ==================================
2022-08-11 21:37:58,993:INFO:Initializing create_model()
2022-08-11 21:37:58,993:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:37:58,993:INFO:Checking exceptions
2022-08-11 21:37:58,998:INFO:Importing libraries
2022-08-11 21:37:58,998:INFO:Copying training dataset
2022-08-11 21:37:59,006:INFO:Defining folds
2022-08-11 21:37:59,006:INFO:Declaring metric variables
2022-08-11 21:37:59,009:INFO:Importing untrained model
2022-08-11 21:37:59,012:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:37:59,016:INFO:Starting cross validation
2022-08-11 21:37:59,017:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:39:16,918:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,341:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,549:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,633:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,702:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,777:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,794:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,811:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:17,931:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:18,071:INFO:Calculating mean and std
2022-08-11 21:39:18,073:INFO:Creating metrics dataframe
2022-08-11 21:39:18,076:INFO:Uploading results into container
2022-08-11 21:39:18,077:INFO:Uploading model into container now
2022-08-11 21:39:18,077:INFO:master_model_container: 13
2022-08-11 21:39:18,077:INFO:display_container: 2
2022-08-11 21:39:18,078:INFO:RandomForestRegressor(n_jobs=-1, random_state=2275)
2022-08-11 21:39:18,078:INFO:create_model() successfully completed......................................
2022-08-11 21:39:18,173:INFO:SubProcess create_model() end ==================================
2022-08-11 21:39:18,174:INFO:Creating metrics dataframe
2022-08-11 21:39:18,182:INFO:Initializing Extra Trees Regressor
2022-08-11 21:39:18,182:INFO:Total runtime is 1.4742183168729146 minutes
2022-08-11 21:39:18,184:INFO:SubProcess create_model() called ==================================
2022-08-11 21:39:18,185:INFO:Initializing create_model()
2022-08-11 21:39:18,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:39:18,185:INFO:Checking exceptions
2022-08-11 21:39:18,189:INFO:Importing libraries
2022-08-11 21:39:18,189:INFO:Copying training dataset
2022-08-11 21:39:18,197:INFO:Defining folds
2022-08-11 21:39:18,197:INFO:Declaring metric variables
2022-08-11 21:39:18,201:INFO:Importing untrained model
2022-08-11 21:39:18,203:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:39:18,214:INFO:Starting cross validation
2022-08-11 21:39:18,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:39:47,954:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,021:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,040:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,119:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,177:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,228:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,280:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,333:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:48,362:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:49,626:INFO:Calculating mean and std
2022-08-11 21:39:49,627:INFO:Creating metrics dataframe
2022-08-11 21:39:49,630:INFO:Uploading results into container
2022-08-11 21:39:49,630:INFO:Uploading model into container now
2022-08-11 21:39:49,631:INFO:master_model_container: 14
2022-08-11 21:39:49,631:INFO:display_container: 2
2022-08-11 21:39:49,631:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2275)
2022-08-11 21:39:49,631:INFO:create_model() successfully completed......................................
2022-08-11 21:39:49,723:INFO:SubProcess create_model() end ==================================
2022-08-11 21:39:49,723:INFO:Creating metrics dataframe
2022-08-11 21:39:49,732:INFO:Initializing AdaBoost Regressor
2022-08-11 21:39:49,732:INFO:Total runtime is 2.000041846434275 minutes
2022-08-11 21:39:49,734:INFO:SubProcess create_model() called ==================================
2022-08-11 21:39:49,734:INFO:Initializing create_model()
2022-08-11 21:39:49,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:39:49,735:INFO:Checking exceptions
2022-08-11 21:39:49,740:INFO:Importing libraries
2022-08-11 21:39:49,740:INFO:Copying training dataset
2022-08-11 21:39:49,750:INFO:Defining folds
2022-08-11 21:39:49,751:INFO:Declaring metric variables
2022-08-11 21:39:49,753:INFO:Importing untrained model
2022-08-11 21:39:49,756:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:39:49,761:INFO:Starting cross validation
2022-08-11 21:39:49,762:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:39:50,198:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:702: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2022-08-11 21:39:53,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:54,076:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:54,404:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:54,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:54,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:55,198:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:55,388:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:55,419:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:55,583:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:57,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:39:57,306:INFO:Calculating mean and std
2022-08-11 21:39:57,309:INFO:Creating metrics dataframe
2022-08-11 21:39:57,313:INFO:Uploading results into container
2022-08-11 21:39:57,314:INFO:Uploading model into container now
2022-08-11 21:39:57,314:INFO:master_model_container: 15
2022-08-11 21:39:57,314:INFO:display_container: 2
2022-08-11 21:39:57,315:INFO:AdaBoostRegressor(random_state=2275)
2022-08-11 21:39:57,315:INFO:create_model() successfully completed......................................
2022-08-11 21:39:57,432:INFO:SubProcess create_model() end ==================================
2022-08-11 21:39:57,432:INFO:Creating metrics dataframe
2022-08-11 21:39:57,440:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:39:57,441:INFO:Total runtime is 2.1285256663958227 minutes
2022-08-11 21:39:57,443:INFO:SubProcess create_model() called ==================================
2022-08-11 21:39:57,443:INFO:Initializing create_model()
2022-08-11 21:39:57,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:39:57,444:INFO:Checking exceptions
2022-08-11 21:39:57,456:INFO:Importing libraries
2022-08-11 21:39:57,456:INFO:Copying training dataset
2022-08-11 21:39:57,467:INFO:Defining folds
2022-08-11 21:39:57,468:INFO:Declaring metric variables
2022-08-11 21:39:57,470:INFO:Importing untrained model
2022-08-11 21:39:57,472:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:39:57,477:INFO:Starting cross validation
2022-08-11 21:39:57,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:40:14,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,177:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,183:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,285:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,318:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,322:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,333:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:14,457:INFO:Calculating mean and std
2022-08-11 21:40:14,458:INFO:Creating metrics dataframe
2022-08-11 21:40:14,460:INFO:Uploading results into container
2022-08-11 21:40:14,461:INFO:Uploading model into container now
2022-08-11 21:40:14,461:INFO:master_model_container: 16
2022-08-11 21:40:14,461:INFO:display_container: 2
2022-08-11 21:40:14,461:INFO:GradientBoostingRegressor(random_state=2275)
2022-08-11 21:40:14,461:INFO:create_model() successfully completed......................................
2022-08-11 21:40:14,556:INFO:SubProcess create_model() end ==================================
2022-08-11 21:40:14,557:INFO:Creating metrics dataframe
2022-08-11 21:40:14,566:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:40:14,566:INFO:Total runtime is 2.413952795664469 minutes
2022-08-11 21:40:14,569:INFO:SubProcess create_model() called ==================================
2022-08-11 21:40:14,569:INFO:Initializing create_model()
2022-08-11 21:40:14,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:40:14,569:INFO:Checking exceptions
2022-08-11 21:40:14,581:INFO:Importing libraries
2022-08-11 21:40:14,595:INFO:Copying training dataset
2022-08-11 21:40:14,613:INFO:Defining folds
2022-08-11 21:40:14,613:INFO:Declaring metric variables
2022-08-11 21:40:14,616:INFO:Importing untrained model
2022-08-11 21:40:14,619:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:40:14,639:INFO:Starting cross validation
2022-08-11 21:40:14,640:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:40:25,182:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,293:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,306:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,362:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,366:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,393:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:25,525:INFO:Calculating mean and std
2022-08-11 21:40:25,526:INFO:Creating metrics dataframe
2022-08-11 21:40:25,530:INFO:Uploading results into container
2022-08-11 21:40:25,530:INFO:Uploading model into container now
2022-08-11 21:40:25,530:INFO:master_model_container: 17
2022-08-11 21:40:25,531:INFO:display_container: 2
2022-08-11 21:40:25,531:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=2275,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:40:25,532:INFO:create_model() successfully completed......................................
2022-08-11 21:40:25,630:INFO:SubProcess create_model() end ==================================
2022-08-11 21:40:25,630:INFO:Creating metrics dataframe
2022-08-11 21:40:25,640:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:40:25,640:INFO:Total runtime is 2.5985211133956905 minutes
2022-08-11 21:40:25,643:INFO:SubProcess create_model() called ==================================
2022-08-11 21:40:25,643:INFO:Initializing create_model()
2022-08-11 21:40:25,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:40:25,643:INFO:Checking exceptions
2022-08-11 21:40:25,652:INFO:Importing libraries
2022-08-11 21:40:25,652:INFO:Copying training dataset
2022-08-11 21:40:25,664:INFO:Defining folds
2022-08-11 21:40:25,665:INFO:Declaring metric variables
2022-08-11 21:40:25,667:INFO:Importing untrained model
2022-08-11 21:40:25,670:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:40:25,674:INFO:Starting cross validation
2022-08-11 21:40:25,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:40:26,319:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,328:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,348:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,357:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,367:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,368:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,384:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,386:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,453:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,586:INFO:Calculating mean and std
2022-08-11 21:40:26,587:INFO:Creating metrics dataframe
2022-08-11 21:40:26,591:INFO:Uploading results into container
2022-08-11 21:40:26,591:INFO:Uploading model into container now
2022-08-11 21:40:26,592:INFO:master_model_container: 18
2022-08-11 21:40:26,592:INFO:display_container: 2
2022-08-11 21:40:26,592:INFO:LGBMRegressor(random_state=2275)
2022-08-11 21:40:26,592:INFO:create_model() successfully completed......................................
2022-08-11 21:40:26,687:INFO:SubProcess create_model() end ==================================
2022-08-11 21:40:26,688:INFO:Creating metrics dataframe
2022-08-11 21:40:26,697:INFO:Initializing Dummy Regressor
2022-08-11 21:40:26,697:INFO:Total runtime is 2.616133630275726 minutes
2022-08-11 21:40:26,700:INFO:SubProcess create_model() called ==================================
2022-08-11 21:40:26,700:INFO:Initializing create_model()
2022-08-11 21:40:26,700:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9aa00d0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:40:26,700:INFO:Checking exceptions
2022-08-11 21:40:26,705:INFO:Importing libraries
2022-08-11 21:40:26,705:INFO:Copying training dataset
2022-08-11 21:40:26,713:INFO:Defining folds
2022-08-11 21:40:26,713:INFO:Declaring metric variables
2022-08-11 21:40:26,715:INFO:Importing untrained model
2022-08-11 21:40:26,717:INFO:Dummy Regressor Imported successfully
2022-08-11 21:40:26,722:INFO:Starting cross validation
2022-08-11 21:40:26,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:40:26,835:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,845:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,851:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,897:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:26,937:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:40:27,055:INFO:Calculating mean and std
2022-08-11 21:40:27,057:INFO:Creating metrics dataframe
2022-08-11 21:40:27,060:INFO:Uploading results into container
2022-08-11 21:40:27,061:INFO:Uploading model into container now
2022-08-11 21:40:27,061:INFO:master_model_container: 19
2022-08-11 21:40:27,061:INFO:display_container: 2
2022-08-11 21:40:27,062:INFO:DummyRegressor()
2022-08-11 21:40:27,062:INFO:create_model() successfully completed......................................
2022-08-11 21:40:27,161:INFO:SubProcess create_model() end ==================================
2022-08-11 21:40:27,161:INFO:Creating metrics dataframe
2022-08-11 21:40:27,178:INFO:Initializing create_model()
2022-08-11 21:40:27,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=LGBMRegressor(random_state=2275), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:40:27,178:INFO:Checking exceptions
2022-08-11 21:40:27,189:INFO:Importing libraries
2022-08-11 21:40:27,189:INFO:Copying training dataset
2022-08-11 21:40:27,200:INFO:Defining folds
2022-08-11 21:40:27,200:INFO:Declaring metric variables
2022-08-11 21:40:27,200:INFO:Importing untrained model
2022-08-11 21:40:27,200:INFO:Declaring custom model
2022-08-11 21:40:27,201:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:40:27,202:INFO:Cross validation set to False
2022-08-11 21:40:27,202:INFO:Fitting Model
2022-08-11 21:40:29,845:INFO:LGBMRegressor(random_state=2275)
2022-08-11 21:40:29,845:INFO:create_model() successfully completed......................................
2022-08-11 21:40:29,958:INFO:master_model_container: 19
2022-08-11 21:40:29,959:INFO:display_container: 2
2022-08-11 21:40:29,959:INFO:LGBMRegressor(random_state=2275)
2022-08-11 21:40:29,959:INFO:compare_models() successfully completed......................................
2022-08-11 21:41:02,723:INFO:Initializing create_model()
2022-08-11 21:41:02,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:02,724:INFO:Checking exceptions
2022-08-11 21:41:02,764:INFO:Importing libraries
2022-08-11 21:41:02,764:INFO:Copying training dataset
2022-08-11 21:41:02,773:INFO:Defining folds
2022-08-11 21:41:02,773:INFO:Declaring metric variables
2022-08-11 21:41:02,776:INFO:Importing untrained model
2022-08-11 21:41:02,779:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:41:02,784:INFO:Starting cross validation
2022-08-11 21:41:02,785:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:03,361:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,362:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,372:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,397:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,447:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,533:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,600:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:03,737:INFO:Calculating mean and std
2022-08-11 21:41:03,737:INFO:Creating metrics dataframe
2022-08-11 21:41:03,743:INFO:Finalizing model
2022-08-11 21:41:06,276:INFO:Uploading results into container
2022-08-11 21:41:06,277:INFO:Uploading model into container now
2022-08-11 21:41:06,283:INFO:master_model_container: 20
2022-08-11 21:41:06,283:INFO:display_container: 3
2022-08-11 21:41:06,283:INFO:LGBMRegressor(random_state=2275)
2022-08-11 21:41:06,284:INFO:create_model() successfully completed......................................
2022-08-11 21:41:11,184:INFO:Initializing finalize_model()
2022-08-11 21:41:11,185:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=LGBMRegressor(random_state=2275), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:41:11,186:INFO:Finalizing LGBMRegressor(random_state=2275)
2022-08-11 21:41:11,209:INFO:Initializing create_model()
2022-08-11 21:41:11,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=LGBMRegressor(random_state=2275), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:41:11,209:INFO:Checking exceptions
2022-08-11 21:41:11,211:INFO:Importing libraries
2022-08-11 21:41:11,211:INFO:Copying training dataset
2022-08-11 21:41:11,212:INFO:Defining folds
2022-08-11 21:41:11,212:INFO:Declaring metric variables
2022-08-11 21:41:11,212:INFO:Importing untrained model
2022-08-11 21:41:11,212:INFO:Declaring custom model
2022-08-11 21:41:11,213:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:41:11,214:INFO:Cross validation set to False
2022-08-11 21:41:11,214:INFO:Fitting Model
2022-08-11 21:41:20,470:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2275))])
2022-08-11 21:41:20,470:INFO:create_model() successfully completed......................................
2022-08-11 21:41:20,573:INFO:Initializing predict_model()
2022-08-11 21:41:20,573:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2275))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec09c9e50>)
2022-08-11 21:41:20,573:INFO:Checking exceptions
2022-08-11 21:41:20,573:INFO:Preloading libraries
2022-08-11 21:41:20,579:INFO:Set up data.
2022-08-11 21:41:20,833:INFO:display_container: 4
2022-08-11 21:41:20,833:INFO:master_model_container: 20
2022-08-11 21:41:20,834:INFO:display_container: 4
2022-08-11 21:41:20,838:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2275))])
2022-08-11 21:41:20,838:INFO:finalize_model() successfully completed......................................
2022-08-11 21:41:20,938:INFO:Initializing predict_model()
2022-08-11 21:41:20,938:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ebf574fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2275))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ee96a7ee0>)
2022-08-11 21:41:20,939:INFO:Checking exceptions
2022-08-11 21:41:20,939:INFO:Preloading libraries
2022-08-11 21:41:20,949:INFO:Set up data.
2022-08-11 21:41:21,434:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3274266762.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_05'] = predict_model(model_y05, data=test_df)['prediction_label']

2022-08-11 21:41:21,438:INFO:PyCaret RegressionExperiment
2022-08-11 21:41:21,438:INFO:Logging name: reg-default-name
2022-08-11 21:41:21,438:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:41:21,438:INFO:version 3.0.0.rc3
2022-08-11 21:41:21,438:INFO:Initializing setup()
2022-08-11 21:41:21,438:INFO:self.USI: d50a
2022-08-11 21:41:21,438:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:41:21,438:INFO:Checking environment
2022-08-11 21:41:21,438:INFO:python_version: 3.8.8
2022-08-11 21:41:21,438:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:41:21,439:INFO:machine: x86_64
2022-08-11 21:41:21,439:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:41:21,439:INFO:Memory: svmem(total=34359738368, available=4215672832, percent=87.7, used=4205641728, free=458952704, active=3759435776, inactive=3698708480, wired=446205952)
2022-08-11 21:41:21,439:INFO:Physical Core: 10
2022-08-11 21:41:21,439:INFO:Logical Core: 10
2022-08-11 21:41:21,439:INFO:Checking libraries
2022-08-11 21:41:21,439:INFO:System:
2022-08-11 21:41:21,439:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:41:21,439:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:41:21,439:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:41:21,439:INFO:PyCaret required dependencies:
2022-08-11 21:41:21,439:INFO:                 pip: 22.1.2
2022-08-11 21:41:21,439:INFO:          setuptools: 61.2.0
2022-08-11 21:41:21,439:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:41:21,439:INFO:             IPython: 8.4.0
2022-08-11 21:41:21,439:INFO:          ipywidgets: 7.6.5
2022-08-11 21:41:21,439:INFO:                tqdm: 4.64.0
2022-08-11 21:41:21,439:INFO:               numpy: 1.22.4
2022-08-11 21:41:21,439:INFO:              pandas: 1.4.3
2022-08-11 21:41:21,439:INFO:              jinja2: 3.0.3
2022-08-11 21:41:21,439:INFO:               scipy: 1.5.4
2022-08-11 21:41:21,439:INFO:              joblib: 1.1.0
2022-08-11 21:41:21,439:INFO:             sklearn: 1.1.1
2022-08-11 21:41:21,439:INFO:                pyod: 1.0.4
2022-08-11 21:41:21,439:INFO:            imblearn: 0.9.1
2022-08-11 21:41:21,439:INFO:   category_encoders: 2.5.0
2022-08-11 21:41:21,439:INFO:            lightgbm: 3.2.1
2022-08-11 21:41:21,439:INFO:               numba: 0.55.2
2022-08-11 21:41:21,439:INFO:            requests: 2.28.1
2022-08-11 21:41:21,439:INFO:          matplotlib: 3.5.1
2022-08-11 21:41:21,439:INFO:          scikitplot: 0.3.7
2022-08-11 21:41:21,439:INFO:         yellowbrick: 1.4
2022-08-11 21:41:21,439:INFO:              plotly: 5.9.0
2022-08-11 21:41:21,439:INFO:             kaleido: 0.2.1
2022-08-11 21:41:21,439:INFO:         statsmodels: 0.13.2
2022-08-11 21:41:21,439:INFO:              sktime: 0.13.0
2022-08-11 21:41:21,439:INFO:               tbats: 1.1.0
2022-08-11 21:41:21,439:INFO:            pmdarima: 1.8.5
2022-08-11 21:41:21,439:INFO:              psutil: 5.9.1
2022-08-11 21:41:21,439:INFO:PyCaret optional dependencies:
2022-08-11 21:41:21,439:INFO:                shap: Not installed
2022-08-11 21:41:21,439:INFO:           interpret: Not installed
2022-08-11 21:41:21,439:INFO:                umap: 0.5.3
2022-08-11 21:41:21,440:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:41:21,440:INFO:  explainerdashboard: Not installed
2022-08-11 21:41:21,440:INFO:             autoviz: Not installed
2022-08-11 21:41:21,440:INFO:           fairlearn: Not installed
2022-08-11 21:41:21,440:INFO:             xgboost: 1.6.1
2022-08-11 21:41:21,440:INFO:            catboost: Not installed
2022-08-11 21:41:21,440:INFO:              kmodes: 0.12.1
2022-08-11 21:41:21,440:INFO:             mlxtend: 0.19.0
2022-08-11 21:41:21,440:INFO:       statsforecast: Not installed
2022-08-11 21:41:21,440:INFO:        tune_sklearn: Not installed
2022-08-11 21:41:21,440:INFO:                 ray: Not installed
2022-08-11 21:41:21,440:INFO:            hyperopt: Not installed
2022-08-11 21:41:21,440:INFO:              optuna: Not installed
2022-08-11 21:41:21,440:INFO:               skopt: Not installed
2022-08-11 21:41:21,440:INFO:              mlflow: 1.27.0
2022-08-11 21:41:21,440:INFO:              gradio: Not installed
2022-08-11 21:41:21,440:INFO:             fastapi: Not installed
2022-08-11 21:41:21,440:INFO:             uvicorn: Not installed
2022-08-11 21:41:21,440:INFO:              m2cgen: Not installed
2022-08-11 21:41:21,440:INFO:           evidently: Not installed
2022-08-11 21:41:21,440:INFO:                nltk: 3.7
2022-08-11 21:41:21,440:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:41:21,440:INFO:              gensim: 3.8.3
2022-08-11 21:41:21,440:INFO:               spacy: 2.3.7
2022-08-11 21:41:21,440:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:41:21,440:INFO:            textblob: 0.17.1
2022-08-11 21:41:21,440:INFO:               fugue: Not installed
2022-08-11 21:41:21,440:INFO:           streamlit: Not installed
2022-08-11 21:41:21,440:INFO:             prophet: Not installed
2022-08-11 21:41:21,440:INFO:None
2022-08-11 21:41:21,440:INFO:Set up data.
2022-08-11 21:41:21,469:INFO:Set up train/test split.
2022-08-11 21:41:21,482:INFO:Set up folding strategy.
2022-08-11 21:41:21,483:INFO:Assigning column types.
2022-08-11 21:41:21,493:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:41:21,493:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,497:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,560:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,599:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,599:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:21,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:21,602:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,606:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,610:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,667:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,707:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:21,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:21,710:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:41:21,714:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,718:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,814:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:21,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:21,820:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,824:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,880:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,920:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,920:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:21,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:21,923:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:41:21,931:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:41:21,988:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,029:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,040:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,098:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,139:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,142:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:41:22,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,253:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,319:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,361:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,363:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:41:22,428:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,469:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,539:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:41:22,579:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,582:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:41:22,687:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,795:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:22,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:22,797:INFO:Preparing preprocessing pipeline...
2022-08-11 21:41:22,799:INFO:Set up simple imputation.
2022-08-11 21:41:22,799:INFO:Set up variance threshold.
2022-08-11 21:41:22,970:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:41:22,974:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:41:22,974:INFO:Creating final display dataframe.
2022-08-11 21:41:23,659:INFO:Setup display_container:                Description             Value
0               Session id              3258
1                   Target              Y_06
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              d50a
2022-08-11 21:41:23,769:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:23,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:23,878:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:41:23,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:41:23,897:INFO:setup() successfully completed in 2.46s...............
2022-08-11 21:41:26,179:INFO:Initializing compare_models()
2022-08-11 21:41:26,180:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:41:26,180:INFO:Checking exceptions
2022-08-11 21:41:26,197:INFO:Preparing display monitor
2022-08-11 21:41:26,224:INFO:Initializing Linear Regression
2022-08-11 21:41:26,224:INFO:Total runtime is 3.0676523844401043e-06 minutes
2022-08-11 21:41:26,227:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:26,227:INFO:Initializing create_model()
2022-08-11 21:41:26,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:26,227:INFO:Checking exceptions
2022-08-11 21:41:26,234:INFO:Importing libraries
2022-08-11 21:41:26,235:INFO:Copying training dataset
2022-08-11 21:41:26,242:INFO:Defining folds
2022-08-11 21:41:26,242:INFO:Declaring metric variables
2022-08-11 21:41:26,244:INFO:Importing untrained model
2022-08-11 21:41:26,247:INFO:Linear Regression Imported successfully
2022-08-11 21:41:26,251:INFO:Starting cross validation
2022-08-11 21:41:26,252:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:26,831:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,841:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,858:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,898:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:26,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,285:INFO:Calculating mean and std
2022-08-11 21:41:27,286:INFO:Creating metrics dataframe
2022-08-11 21:41:27,289:INFO:Uploading results into container
2022-08-11 21:41:27,290:INFO:Uploading model into container now
2022-08-11 21:41:27,291:INFO:master_model_container: 1
2022-08-11 21:41:27,291:INFO:display_container: 2
2022-08-11 21:41:27,291:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:41:27,292:INFO:create_model() successfully completed......................................
2022-08-11 21:41:27,389:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:27,389:INFO:Creating metrics dataframe
2022-08-11 21:41:27,394:INFO:Initializing Lasso Regression
2022-08-11 21:41:27,394:INFO:Total runtime is 0.019491382439931235 minutes
2022-08-11 21:41:27,395:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:27,396:INFO:Initializing create_model()
2022-08-11 21:41:27,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:27,396:INFO:Checking exceptions
2022-08-11 21:41:27,400:INFO:Importing libraries
2022-08-11 21:41:27,400:INFO:Copying training dataset
2022-08-11 21:41:27,410:INFO:Defining folds
2022-08-11 21:41:27,411:INFO:Declaring metric variables
2022-08-11 21:41:27,413:INFO:Importing untrained model
2022-08-11 21:41:27,416:INFO:Lasso Regression Imported successfully
2022-08-11 21:41:27,421:INFO:Starting cross validation
2022-08-11 21:41:27,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:27,564:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,565:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,565:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,579:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,608:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,615:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:27,748:INFO:Calculating mean and std
2022-08-11 21:41:27,750:INFO:Creating metrics dataframe
2022-08-11 21:41:27,754:INFO:Uploading results into container
2022-08-11 21:41:27,754:INFO:Uploading model into container now
2022-08-11 21:41:27,755:INFO:master_model_container: 2
2022-08-11 21:41:27,755:INFO:display_container: 2
2022-08-11 21:41:27,755:INFO:Lasso(random_state=3258)
2022-08-11 21:41:27,755:INFO:create_model() successfully completed......................................
2022-08-11 21:41:27,854:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:27,854:INFO:Creating metrics dataframe
2022-08-11 21:41:27,860:INFO:Initializing Ridge Regression
2022-08-11 21:41:27,860:INFO:Total runtime is 0.027256516615549724 minutes
2022-08-11 21:41:27,862:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:27,862:INFO:Initializing create_model()
2022-08-11 21:41:27,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:27,862:INFO:Checking exceptions
2022-08-11 21:41:27,867:INFO:Importing libraries
2022-08-11 21:41:27,867:INFO:Copying training dataset
2022-08-11 21:41:27,875:INFO:Defining folds
2022-08-11 21:41:27,875:INFO:Declaring metric variables
2022-08-11 21:41:27,878:INFO:Importing untrained model
2022-08-11 21:41:27,881:INFO:Ridge Regression Imported successfully
2022-08-11 21:41:27,885:INFO:Starting cross validation
2022-08-11 21:41:27,886:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:28,006:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,011:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,014:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,018:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,029:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,021:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,032:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,232:INFO:Calculating mean and std
2022-08-11 21:41:28,233:INFO:Creating metrics dataframe
2022-08-11 21:41:28,237:INFO:Uploading results into container
2022-08-11 21:41:28,237:INFO:Uploading model into container now
2022-08-11 21:41:28,238:INFO:master_model_container: 3
2022-08-11 21:41:28,238:INFO:display_container: 2
2022-08-11 21:41:28,238:INFO:Ridge(random_state=3258)
2022-08-11 21:41:28,238:INFO:create_model() successfully completed......................................
2022-08-11 21:41:28,336:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:28,337:INFO:Creating metrics dataframe
2022-08-11 21:41:28,343:INFO:Initializing Elastic Net
2022-08-11 21:41:28,343:INFO:Total runtime is 0.035316054026285806 minutes
2022-08-11 21:41:28,345:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:28,346:INFO:Initializing create_model()
2022-08-11 21:41:28,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:28,346:INFO:Checking exceptions
2022-08-11 21:41:28,351:INFO:Importing libraries
2022-08-11 21:41:28,351:INFO:Copying training dataset
2022-08-11 21:41:28,359:INFO:Defining folds
2022-08-11 21:41:28,359:INFO:Declaring metric variables
2022-08-11 21:41:28,362:INFO:Importing untrained model
2022-08-11 21:41:28,365:INFO:Elastic Net Imported successfully
2022-08-11 21:41:28,369:INFO:Starting cross validation
2022-08-11 21:41:28,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:28,484:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,484:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,488:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,508:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,535:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,539:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,602:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,720:INFO:Calculating mean and std
2022-08-11 21:41:28,722:INFO:Creating metrics dataframe
2022-08-11 21:41:28,726:INFO:Uploading results into container
2022-08-11 21:41:28,726:INFO:Uploading model into container now
2022-08-11 21:41:28,727:INFO:master_model_container: 4
2022-08-11 21:41:28,727:INFO:display_container: 2
2022-08-11 21:41:28,727:INFO:ElasticNet(random_state=3258)
2022-08-11 21:41:28,727:INFO:create_model() successfully completed......................................
2022-08-11 21:41:28,823:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:28,823:INFO:Creating metrics dataframe
2022-08-11 21:41:28,829:INFO:Initializing Least Angle Regression
2022-08-11 21:41:28,829:INFO:Total runtime is 0.04341688553492228 minutes
2022-08-11 21:41:28,831:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:28,831:INFO:Initializing create_model()
2022-08-11 21:41:28,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:28,831:INFO:Checking exceptions
2022-08-11 21:41:28,836:INFO:Importing libraries
2022-08-11 21:41:28,836:INFO:Copying training dataset
2022-08-11 21:41:28,845:INFO:Defining folds
2022-08-11 21:41:28,845:INFO:Declaring metric variables
2022-08-11 21:41:28,847:INFO:Importing untrained model
2022-08-11 21:41:28,849:INFO:Least Angle Regression Imported successfully
2022-08-11 21:41:28,854:INFO:Starting cross validation
2022-08-11 21:41:28,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:28,966:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:28,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:28,972:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:28,974:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:28,976:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:28,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:28,990:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:28,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,002:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,011:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,018:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,019:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,038:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,052:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,172:INFO:Calculating mean and std
2022-08-11 21:41:29,174:INFO:Creating metrics dataframe
2022-08-11 21:41:29,177:INFO:Uploading results into container
2022-08-11 21:41:29,178:INFO:Uploading model into container now
2022-08-11 21:41:29,178:INFO:master_model_container: 5
2022-08-11 21:41:29,178:INFO:display_container: 2
2022-08-11 21:41:29,179:INFO:Lars(random_state=3258)
2022-08-11 21:41:29,179:INFO:create_model() successfully completed......................................
2022-08-11 21:41:29,273:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:29,273:INFO:Creating metrics dataframe
2022-08-11 21:41:29,279:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:41:29,279:INFO:Total runtime is 0.05091286500295003 minutes
2022-08-11 21:41:29,281:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:29,281:INFO:Initializing create_model()
2022-08-11 21:41:29,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:29,281:INFO:Checking exceptions
2022-08-11 21:41:29,285:INFO:Importing libraries
2022-08-11 21:41:29,285:INFO:Copying training dataset
2022-08-11 21:41:29,293:INFO:Defining folds
2022-08-11 21:41:29,294:INFO:Declaring metric variables
2022-08-11 21:41:29,296:INFO:Importing untrained model
2022-08-11 21:41:29,298:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:41:29,303:INFO:Starting cross validation
2022-08-11 21:41:29,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:29,415:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,416:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,418:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,420:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,424:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,440:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,453:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,460:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,470:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,473:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:41:29,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,602:INFO:Calculating mean and std
2022-08-11 21:41:29,604:INFO:Creating metrics dataframe
2022-08-11 21:41:29,607:INFO:Uploading results into container
2022-08-11 21:41:29,608:INFO:Uploading model into container now
2022-08-11 21:41:29,608:INFO:master_model_container: 6
2022-08-11 21:41:29,608:INFO:display_container: 2
2022-08-11 21:41:29,609:INFO:LassoLars(random_state=3258)
2022-08-11 21:41:29,609:INFO:create_model() successfully completed......................................
2022-08-11 21:41:29,701:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:29,702:INFO:Creating metrics dataframe
2022-08-11 21:41:29,708:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:41:29,708:INFO:Total runtime is 0.05806678533554077 minutes
2022-08-11 21:41:29,710:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:29,711:INFO:Initializing create_model()
2022-08-11 21:41:29,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:29,711:INFO:Checking exceptions
2022-08-11 21:41:29,716:INFO:Importing libraries
2022-08-11 21:41:29,716:INFO:Copying training dataset
2022-08-11 21:41:29,724:INFO:Defining folds
2022-08-11 21:41:29,724:INFO:Declaring metric variables
2022-08-11 21:41:29,726:INFO:Importing untrained model
2022-08-11 21:41:29,728:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:41:29,733:INFO:Starting cross validation
2022-08-11 21:41:29,734:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:29,846:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,846:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,853:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,856:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,860:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,867:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,879:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:29,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:41:29,901:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,023:INFO:Calculating mean and std
2022-08-11 21:41:30,025:INFO:Creating metrics dataframe
2022-08-11 21:41:30,029:INFO:Uploading results into container
2022-08-11 21:41:30,029:INFO:Uploading model into container now
2022-08-11 21:41:30,029:INFO:master_model_container: 7
2022-08-11 21:41:30,030:INFO:display_container: 2
2022-08-11 21:41:30,030:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:41:30,030:INFO:create_model() successfully completed......................................
2022-08-11 21:41:30,129:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:30,130:INFO:Creating metrics dataframe
2022-08-11 21:41:30,138:INFO:Initializing Bayesian Ridge
2022-08-11 21:41:30,138:INFO:Total runtime is 0.0652323047320048 minutes
2022-08-11 21:41:30,141:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:30,141:INFO:Initializing create_model()
2022-08-11 21:41:30,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:30,141:INFO:Checking exceptions
2022-08-11 21:41:30,146:INFO:Importing libraries
2022-08-11 21:41:30,146:INFO:Copying training dataset
2022-08-11 21:41:30,155:INFO:Defining folds
2022-08-11 21:41:30,155:INFO:Declaring metric variables
2022-08-11 21:41:30,158:INFO:Importing untrained model
2022-08-11 21:41:30,161:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:41:30,165:INFO:Starting cross validation
2022-08-11 21:41:30,166:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:30,509:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,520:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,527:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,533:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,536:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,544:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,561:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:30,698:INFO:Calculating mean and std
2022-08-11 21:41:30,700:INFO:Creating metrics dataframe
2022-08-11 21:41:30,703:INFO:Uploading results into container
2022-08-11 21:41:30,704:INFO:Uploading model into container now
2022-08-11 21:41:30,704:INFO:master_model_container: 8
2022-08-11 21:41:30,704:INFO:display_container: 2
2022-08-11 21:41:30,705:INFO:BayesianRidge()
2022-08-11 21:41:30,705:INFO:create_model() successfully completed......................................
2022-08-11 21:41:30,802:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:30,803:INFO:Creating metrics dataframe
2022-08-11 21:41:30,810:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:41:30,810:INFO:Total runtime is 0.07643158833185831 minutes
2022-08-11 21:41:30,812:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:30,813:INFO:Initializing create_model()
2022-08-11 21:41:30,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:30,813:INFO:Checking exceptions
2022-08-11 21:41:30,817:INFO:Importing libraries
2022-08-11 21:41:30,818:INFO:Copying training dataset
2022-08-11 21:41:30,826:INFO:Defining folds
2022-08-11 21:41:30,826:INFO:Declaring metric variables
2022-08-11 21:41:30,829:INFO:Importing untrained model
2022-08-11 21:41:30,831:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:41:30,836:INFO:Starting cross validation
2022-08-11 21:41:30,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:31,031:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,038:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,052:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,064:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,066:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,083:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,120:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:31,240:INFO:Calculating mean and std
2022-08-11 21:41:31,242:INFO:Creating metrics dataframe
2022-08-11 21:41:31,245:INFO:Uploading results into container
2022-08-11 21:41:31,245:INFO:Uploading model into container now
2022-08-11 21:41:31,246:INFO:master_model_container: 9
2022-08-11 21:41:31,246:INFO:display_container: 2
2022-08-11 21:41:31,246:INFO:PassiveAggressiveRegressor(random_state=3258)
2022-08-11 21:41:31,246:INFO:create_model() successfully completed......................................
2022-08-11 21:41:31,344:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:31,344:INFO:Creating metrics dataframe
2022-08-11 21:41:31,353:INFO:Initializing Huber Regressor
2022-08-11 21:41:31,353:INFO:Total runtime is 0.08547782103220622 minutes
2022-08-11 21:41:31,355:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:31,356:INFO:Initializing create_model()
2022-08-11 21:41:31,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:31,356:INFO:Checking exceptions
2022-08-11 21:41:31,361:INFO:Importing libraries
2022-08-11 21:41:31,361:INFO:Copying training dataset
2022-08-11 21:41:31,369:INFO:Defining folds
2022-08-11 21:41:31,369:INFO:Declaring metric variables
2022-08-11 21:41:31,371:INFO:Importing untrained model
2022-08-11 21:41:31,374:INFO:Huber Regressor Imported successfully
2022-08-11 21:41:31,378:INFO:Starting cross validation
2022-08-11 21:41:31,378:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:31,811:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,276:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,278:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,291:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,291:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,293:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,294:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,295:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,295:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,296:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,330:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,349:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,350:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:41:32,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,558:INFO:Calculating mean and std
2022-08-11 21:41:32,560:INFO:Creating metrics dataframe
2022-08-11 21:41:32,564:INFO:Uploading results into container
2022-08-11 21:41:32,564:INFO:Uploading model into container now
2022-08-11 21:41:32,565:INFO:master_model_container: 10
2022-08-11 21:41:32,565:INFO:display_container: 2
2022-08-11 21:41:32,565:INFO:HuberRegressor()
2022-08-11 21:41:32,565:INFO:create_model() successfully completed......................................
2022-08-11 21:41:32,659:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:32,660:INFO:Creating metrics dataframe
2022-08-11 21:41:32,668:INFO:Initializing K Neighbors Regressor
2022-08-11 21:41:32,668:INFO:Total runtime is 0.10739521582921346 minutes
2022-08-11 21:41:32,670:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:32,671:INFO:Initializing create_model()
2022-08-11 21:41:32,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:32,671:INFO:Checking exceptions
2022-08-11 21:41:32,676:INFO:Importing libraries
2022-08-11 21:41:32,676:INFO:Copying training dataset
2022-08-11 21:41:32,685:INFO:Defining folds
2022-08-11 21:41:32,686:INFO:Declaring metric variables
2022-08-11 21:41:32,689:INFO:Importing untrained model
2022-08-11 21:41:32,692:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:41:32,696:INFO:Starting cross validation
2022-08-11 21:41:32,696:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:32,811:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,813:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,826:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:32,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:33,707:INFO:Calculating mean and std
2022-08-11 21:41:33,709:INFO:Creating metrics dataframe
2022-08-11 21:41:33,712:INFO:Uploading results into container
2022-08-11 21:41:33,713:INFO:Uploading model into container now
2022-08-11 21:41:33,713:INFO:master_model_container: 11
2022-08-11 21:41:33,713:INFO:display_container: 2
2022-08-11 21:41:33,714:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:41:33,714:INFO:create_model() successfully completed......................................
2022-08-11 21:41:33,810:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:33,810:INFO:Creating metrics dataframe
2022-08-11 21:41:33,817:INFO:Initializing Decision Tree Regressor
2022-08-11 21:41:33,817:INFO:Total runtime is 0.12655253410339357 minutes
2022-08-11 21:41:33,819:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:33,820:INFO:Initializing create_model()
2022-08-11 21:41:33,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:33,820:INFO:Checking exceptions
2022-08-11 21:41:33,825:INFO:Importing libraries
2022-08-11 21:41:33,825:INFO:Copying training dataset
2022-08-11 21:41:33,833:INFO:Defining folds
2022-08-11 21:41:33,833:INFO:Declaring metric variables
2022-08-11 21:41:33,836:INFO:Importing untrained model
2022-08-11 21:41:33,838:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:41:33,843:INFO:Starting cross validation
2022-08-11 21:41:33,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:41:35,219:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,257:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,257:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,266:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,450:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,458:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,494:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:41:35,610:INFO:Calculating mean and std
2022-08-11 21:41:35,612:INFO:Creating metrics dataframe
2022-08-11 21:41:35,615:INFO:Uploading results into container
2022-08-11 21:41:35,616:INFO:Uploading model into container now
2022-08-11 21:41:35,616:INFO:master_model_container: 12
2022-08-11 21:41:35,616:INFO:display_container: 2
2022-08-11 21:41:35,616:INFO:DecisionTreeRegressor(random_state=3258)
2022-08-11 21:41:35,616:INFO:create_model() successfully completed......................................
2022-08-11 21:41:35,710:INFO:SubProcess create_model() end ==================================
2022-08-11 21:41:35,711:INFO:Creating metrics dataframe
2022-08-11 21:41:35,718:INFO:Initializing Random Forest Regressor
2022-08-11 21:41:35,718:INFO:Total runtime is 0.15823471943537396 minutes
2022-08-11 21:41:35,720:INFO:SubProcess create_model() called ==================================
2022-08-11 21:41:35,721:INFO:Initializing create_model()
2022-08-11 21:41:35,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0933f760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:41:35,721:INFO:Checking exceptions
2022-08-11 21:41:35,725:INFO:Importing libraries
2022-08-11 21:41:35,726:INFO:Copying training dataset
2022-08-11 21:41:35,733:INFO:Defining folds
2022-08-11 21:41:35,734:INFO:Declaring metric variables
2022-08-11 21:41:35,736:INFO:Importing untrained model
2022-08-11 21:41:35,738:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:41:35,743:INFO:Starting cross validation
2022-08-11 21:41:35,744:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:43:51,435:INFO:Initializing create_model()
2022-08-11 21:43:51,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:43:51,437:INFO:Checking exceptions
2022-08-11 21:43:51,474:INFO:Importing libraries
2022-08-11 21:43:51,474:INFO:Copying training dataset
2022-08-11 21:43:51,486:INFO:Defining folds
2022-08-11 21:43:51,486:INFO:Declaring metric variables
2022-08-11 21:43:51,489:INFO:Importing untrained model
2022-08-11 21:43:51,493:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:43:51,499:INFO:Starting cross validation
2022-08-11 21:43:51,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:43:54,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,719:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,775:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,819:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,833:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,871:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:54,943:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:43:55,092:INFO:Calculating mean and std
2022-08-11 21:43:55,095:INFO:Creating metrics dataframe
2022-08-11 21:43:55,102:INFO:Finalizing model
2022-08-11 21:43:57,022:INFO:Uploading results into container
2022-08-11 21:43:57,023:INFO:Uploading model into container now
2022-08-11 21:43:57,030:INFO:master_model_container: 13
2022-08-11 21:43:57,030:INFO:display_container: 2
2022-08-11 21:43:57,031:INFO:LGBMRegressor(random_state=3258)
2022-08-11 21:43:57,031:INFO:create_model() successfully completed......................................
2022-08-11 21:43:57,177:INFO:Initializing finalize_model()
2022-08-11 21:43:57,177:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=LGBMRegressor(random_state=3258), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:43:57,177:INFO:Finalizing LGBMRegressor(random_state=3258)
2022-08-11 21:43:57,200:INFO:Initializing create_model()
2022-08-11 21:43:57,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=LGBMRegressor(random_state=3258), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:43:57,200:INFO:Checking exceptions
2022-08-11 21:43:57,202:INFO:Importing libraries
2022-08-11 21:43:57,203:INFO:Copying training dataset
2022-08-11 21:43:57,204:INFO:Defining folds
2022-08-11 21:43:57,204:INFO:Declaring metric variables
2022-08-11 21:43:57,204:INFO:Importing untrained model
2022-08-11 21:43:57,204:INFO:Declaring custom model
2022-08-11 21:43:57,205:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:43:57,205:INFO:Cross validation set to False
2022-08-11 21:43:57,205:INFO:Fitting Model
2022-08-11 21:43:59,731:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3258))])
2022-08-11 21:43:59,731:INFO:create_model() successfully completed......................................
2022-08-11 21:43:59,842:INFO:Initializing predict_model()
2022-08-11 21:43:59,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3258))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8949cc10>)
2022-08-11 21:43:59,842:INFO:Checking exceptions
2022-08-11 21:43:59,842:INFO:Preloading libraries
2022-08-11 21:43:59,847:INFO:Set up data.
2022-08-11 21:44:00,150:INFO:display_container: 3
2022-08-11 21:44:00,150:INFO:master_model_container: 13
2022-08-11 21:44:00,150:INFO:display_container: 3
2022-08-11 21:44:00,154:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3258))])
2022-08-11 21:44:00,154:INFO:finalize_model() successfully completed......................................
2022-08-11 21:44:00,267:INFO:Initializing predict_model()
2022-08-11 21:44:00,267:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bda60>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3258))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9305ee0>)
2022-08-11 21:44:00,268:INFO:Checking exceptions
2022-08-11 21:44:00,268:INFO:Preloading libraries
2022-08-11 21:44:00,275:INFO:Set up data.
2022-08-11 21:44:00,834:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3274266762.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_05'] = predict_model(model_y05, data=test_df)['prediction_label']

2022-08-11 21:44:06,251:INFO:PyCaret RegressionExperiment
2022-08-11 21:44:06,251:INFO:Logging name: reg-default-name
2022-08-11 21:44:06,251:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:44:06,251:INFO:version 3.0.0.rc3
2022-08-11 21:44:06,251:INFO:Initializing setup()
2022-08-11 21:44:06,252:INFO:self.USI: a42d
2022-08-11 21:44:06,252:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:44:06,252:INFO:Checking environment
2022-08-11 21:44:06,252:INFO:python_version: 3.8.8
2022-08-11 21:44:06,252:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:44:06,252:INFO:machine: x86_64
2022-08-11 21:44:06,252:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:44:06,253:INFO:Memory: svmem(total=34359738368, available=4222435328, percent=87.7, used=4198850560, free=467615744, active=3758297088, inactive=3698442240, wired=440553472)
2022-08-11 21:44:06,253:INFO:Physical Core: 10
2022-08-11 21:44:06,253:INFO:Logical Core: 10
2022-08-11 21:44:06,253:INFO:Checking libraries
2022-08-11 21:44:06,253:INFO:System:
2022-08-11 21:44:06,253:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:44:06,253:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:44:06,254:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:44:06,254:INFO:PyCaret required dependencies:
2022-08-11 21:44:06,254:INFO:                 pip: 22.1.2
2022-08-11 21:44:06,254:INFO:          setuptools: 61.2.0
2022-08-11 21:44:06,254:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:44:06,254:INFO:             IPython: 8.4.0
2022-08-11 21:44:06,255:INFO:          ipywidgets: 7.6.5
2022-08-11 21:44:06,255:INFO:                tqdm: 4.64.0
2022-08-11 21:44:06,255:INFO:               numpy: 1.22.4
2022-08-11 21:44:06,255:INFO:              pandas: 1.4.3
2022-08-11 21:44:06,255:INFO:              jinja2: 3.0.3
2022-08-11 21:44:06,255:INFO:               scipy: 1.5.4
2022-08-11 21:44:06,255:INFO:              joblib: 1.1.0
2022-08-11 21:44:06,255:INFO:             sklearn: 1.1.1
2022-08-11 21:44:06,256:INFO:                pyod: 1.0.4
2022-08-11 21:44:06,256:INFO:            imblearn: 0.9.1
2022-08-11 21:44:06,256:INFO:   category_encoders: 2.5.0
2022-08-11 21:44:06,256:INFO:            lightgbm: 3.2.1
2022-08-11 21:44:06,256:INFO:               numba: 0.55.2
2022-08-11 21:44:06,256:INFO:            requests: 2.28.1
2022-08-11 21:44:06,256:INFO:          matplotlib: 3.5.1
2022-08-11 21:44:06,257:INFO:          scikitplot: 0.3.7
2022-08-11 21:44:06,257:INFO:         yellowbrick: 1.4
2022-08-11 21:44:06,257:INFO:              plotly: 5.9.0
2022-08-11 21:44:06,257:INFO:             kaleido: 0.2.1
2022-08-11 21:44:06,257:INFO:         statsmodels: 0.13.2
2022-08-11 21:44:06,257:INFO:              sktime: 0.13.0
2022-08-11 21:44:06,257:INFO:               tbats: 1.1.0
2022-08-11 21:44:06,257:INFO:            pmdarima: 1.8.5
2022-08-11 21:44:06,257:INFO:              psutil: 5.9.1
2022-08-11 21:44:06,257:INFO:PyCaret optional dependencies:
2022-08-11 21:44:06,258:INFO:                shap: Not installed
2022-08-11 21:44:06,258:INFO:           interpret: Not installed
2022-08-11 21:44:06,259:INFO:                umap: 0.5.3
2022-08-11 21:44:06,259:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:44:06,259:INFO:  explainerdashboard: Not installed
2022-08-11 21:44:06,259:INFO:             autoviz: Not installed
2022-08-11 21:44:06,259:INFO:           fairlearn: Not installed
2022-08-11 21:44:06,259:INFO:             xgboost: 1.6.1
2022-08-11 21:44:06,259:INFO:            catboost: Not installed
2022-08-11 21:44:06,259:INFO:              kmodes: 0.12.1
2022-08-11 21:44:06,259:INFO:             mlxtend: 0.19.0
2022-08-11 21:44:06,259:INFO:       statsforecast: Not installed
2022-08-11 21:44:06,260:INFO:        tune_sklearn: Not installed
2022-08-11 21:44:06,260:INFO:                 ray: Not installed
2022-08-11 21:44:06,260:INFO:            hyperopt: Not installed
2022-08-11 21:44:06,260:INFO:              optuna: Not installed
2022-08-11 21:44:06,260:INFO:               skopt: Not installed
2022-08-11 21:44:06,260:INFO:              mlflow: 1.27.0
2022-08-11 21:44:06,260:INFO:              gradio: Not installed
2022-08-11 21:44:06,260:INFO:             fastapi: Not installed
2022-08-11 21:44:06,260:INFO:             uvicorn: Not installed
2022-08-11 21:44:06,261:INFO:              m2cgen: Not installed
2022-08-11 21:44:06,261:INFO:           evidently: Not installed
2022-08-11 21:44:06,261:INFO:                nltk: 3.7
2022-08-11 21:44:06,261:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:44:06,261:INFO:              gensim: 3.8.3
2022-08-11 21:44:06,261:INFO:               spacy: 2.3.7
2022-08-11 21:44:06,261:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:44:06,261:INFO:            textblob: 0.17.1
2022-08-11 21:44:06,261:INFO:               fugue: Not installed
2022-08-11 21:44:06,261:INFO:           streamlit: Not installed
2022-08-11 21:44:06,261:INFO:             prophet: Not installed
2022-08-11 21:44:06,261:INFO:None
2022-08-11 21:44:06,262:INFO:Set up data.
2022-08-11 21:44:06,296:INFO:Set up train/test split.
2022-08-11 21:44:06,322:INFO:Set up folding strategy.
2022-08-11 21:44:06,323:INFO:Assigning column types.
2022-08-11 21:44:06,330:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:44:06,330:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,335:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,340:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,445:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,446:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:06,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:06,449:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,453:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,521:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,565:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:06,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:06,567:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:44:06,571:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,576:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,681:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,682:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:06,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:06,689:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,693:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,756:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,800:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:06,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:06,803:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:44:06,812:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,876:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,920:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:06,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:06,932:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:44:06,993:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,035:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,036:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,038:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:44:07,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,147:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,219:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,261:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,261:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,264:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:44:07,332:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,374:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,445:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:44:07,486:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,489:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:44:07,599:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,709:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:07,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:07,712:INFO:Preparing preprocessing pipeline...
2022-08-11 21:44:07,714:INFO:Set up simple imputation.
2022-08-11 21:44:07,714:INFO:Set up variance threshold.
2022-08-11 21:44:07,910:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:44:07,914:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:44:07,914:INFO:Creating final display dataframe.
2022-08-11 21:44:08,736:INFO:Setup display_container:                Description             Value
0               Session id               976
1                   Target              Y_06
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              a42d
2022-08-11 21:44:08,851:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:08,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:08,960:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:44:08,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:44:08,982:INFO:setup() successfully completed in 2.73s...............
2022-08-11 21:44:08,987:INFO:Initializing compare_models()
2022-08-11 21:44:08,987:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:44:08,988:INFO:Checking exceptions
2022-08-11 21:44:08,993:INFO:Preparing display monitor
2022-08-11 21:44:09,019:INFO:Initializing Linear Regression
2022-08-11 21:44:09,020:INFO:Total runtime is 2.666314442952474e-06 minutes
2022-08-11 21:44:09,022:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:09,023:INFO:Initializing create_model()
2022-08-11 21:44:09,023:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:09,023:INFO:Checking exceptions
2022-08-11 21:44:09,031:INFO:Importing libraries
2022-08-11 21:44:09,031:INFO:Copying training dataset
2022-08-11 21:44:09,040:INFO:Defining folds
2022-08-11 21:44:09,040:INFO:Declaring metric variables
2022-08-11 21:44:09,042:INFO:Importing untrained model
2022-08-11 21:44:09,045:INFO:Linear Regression Imported successfully
2022-08-11 21:44:09,051:INFO:Starting cross validation
2022-08-11 21:44:09,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:09,913:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:09,922:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:09,926:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:09,944:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:09,944:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:09,954:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,007:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,011:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,052:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,057:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,352:INFO:Calculating mean and std
2022-08-11 21:44:10,353:INFO:Creating metrics dataframe
2022-08-11 21:44:10,356:INFO:Uploading results into container
2022-08-11 21:44:10,357:INFO:Uploading model into container now
2022-08-11 21:44:10,357:INFO:master_model_container: 1
2022-08-11 21:44:10,357:INFO:display_container: 2
2022-08-11 21:44:10,358:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:44:10,358:INFO:create_model() successfully completed......................................
2022-08-11 21:44:10,468:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:10,468:INFO:Creating metrics dataframe
2022-08-11 21:44:10,475:INFO:Initializing Lasso Regression
2022-08-11 21:44:10,475:INFO:Total runtime is 0.024267832438151043 minutes
2022-08-11 21:44:10,478:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:10,479:INFO:Initializing create_model()
2022-08-11 21:44:10,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:10,479:INFO:Checking exceptions
2022-08-11 21:44:10,484:INFO:Importing libraries
2022-08-11 21:44:10,484:INFO:Copying training dataset
2022-08-11 21:44:10,493:INFO:Defining folds
2022-08-11 21:44:10,493:INFO:Declaring metric variables
2022-08-11 21:44:10,496:INFO:Importing untrained model
2022-08-11 21:44:10,499:INFO:Lasso Regression Imported successfully
2022-08-11 21:44:10,505:INFO:Starting cross validation
2022-08-11 21:44:10,506:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:10,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,662:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,666:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,706:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,708:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:10,827:INFO:Calculating mean and std
2022-08-11 21:44:10,828:INFO:Creating metrics dataframe
2022-08-11 21:44:10,831:INFO:Uploading results into container
2022-08-11 21:44:10,832:INFO:Uploading model into container now
2022-08-11 21:44:10,832:INFO:master_model_container: 2
2022-08-11 21:44:10,833:INFO:display_container: 2
2022-08-11 21:44:10,833:INFO:Lasso(random_state=976)
2022-08-11 21:44:10,833:INFO:create_model() successfully completed......................................
2022-08-11 21:44:10,943:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:10,943:INFO:Creating metrics dataframe
2022-08-11 21:44:10,950:INFO:Initializing Ridge Regression
2022-08-11 21:44:10,950:INFO:Total runtime is 0.03218003114064535 minutes
2022-08-11 21:44:10,952:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:10,953:INFO:Initializing create_model()
2022-08-11 21:44:10,953:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:10,953:INFO:Checking exceptions
2022-08-11 21:44:10,957:INFO:Importing libraries
2022-08-11 21:44:10,957:INFO:Copying training dataset
2022-08-11 21:44:10,965:INFO:Defining folds
2022-08-11 21:44:10,965:INFO:Declaring metric variables
2022-08-11 21:44:10,968:INFO:Importing untrained model
2022-08-11 21:44:10,971:INFO:Ridge Regression Imported successfully
2022-08-11 21:44:10,977:INFO:Starting cross validation
2022-08-11 21:44:10,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:11,105:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,117:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,122:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,126:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,151:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,171:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,219:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,335:INFO:Calculating mean and std
2022-08-11 21:44:11,337:INFO:Creating metrics dataframe
2022-08-11 21:44:11,339:INFO:Uploading results into container
2022-08-11 21:44:11,340:INFO:Uploading model into container now
2022-08-11 21:44:11,340:INFO:master_model_container: 3
2022-08-11 21:44:11,340:INFO:display_container: 2
2022-08-11 21:44:11,340:INFO:Ridge(random_state=976)
2022-08-11 21:44:11,340:INFO:create_model() successfully completed......................................
2022-08-11 21:44:11,450:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:11,450:INFO:Creating metrics dataframe
2022-08-11 21:44:11,458:INFO:Initializing Elastic Net
2022-08-11 21:44:11,458:INFO:Total runtime is 0.040638069311777755 minutes
2022-08-11 21:44:11,460:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:11,461:INFO:Initializing create_model()
2022-08-11 21:44:11,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:11,461:INFO:Checking exceptions
2022-08-11 21:44:11,466:INFO:Importing libraries
2022-08-11 21:44:11,466:INFO:Copying training dataset
2022-08-11 21:44:11,475:INFO:Defining folds
2022-08-11 21:44:11,475:INFO:Declaring metric variables
2022-08-11 21:44:11,478:INFO:Importing untrained model
2022-08-11 21:44:11,482:INFO:Elastic Net Imported successfully
2022-08-11 21:44:11,486:INFO:Starting cross validation
2022-08-11 21:44:11,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:11,605:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,619:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,631:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,639:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,647:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,709:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:11,724:INFO:Calculating mean and std
2022-08-11 21:44:11,725:INFO:Creating metrics dataframe
2022-08-11 21:44:11,727:INFO:Uploading results into container
2022-08-11 21:44:11,728:INFO:Uploading model into container now
2022-08-11 21:44:11,728:INFO:master_model_container: 4
2022-08-11 21:44:11,729:INFO:display_container: 2
2022-08-11 21:44:11,729:INFO:ElasticNet(random_state=976)
2022-08-11 21:44:11,729:INFO:create_model() successfully completed......................................
2022-08-11 21:44:11,836:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:11,837:INFO:Creating metrics dataframe
2022-08-11 21:44:11,843:INFO:Initializing Least Angle Regression
2022-08-11 21:44:11,843:INFO:Total runtime is 0.047062385082244876 minutes
2022-08-11 21:44:11,846:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:11,846:INFO:Initializing create_model()
2022-08-11 21:44:11,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:11,846:INFO:Checking exceptions
2022-08-11 21:44:11,851:INFO:Importing libraries
2022-08-11 21:44:11,851:INFO:Copying training dataset
2022-08-11 21:44:11,861:INFO:Defining folds
2022-08-11 21:44:11,861:INFO:Declaring metric variables
2022-08-11 21:44:11,864:INFO:Importing untrained model
2022-08-11 21:44:11,867:INFO:Least Angle Regression Imported successfully
2022-08-11 21:44:11,872:INFO:Starting cross validation
2022-08-11 21:44:11,873:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:11,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,004:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,017:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,025:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,026:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,027:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,029:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,033:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,040:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,044:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,053:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,054:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,062:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,072:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,191:INFO:Calculating mean and std
2022-08-11 21:44:12,192:INFO:Creating metrics dataframe
2022-08-11 21:44:12,194:INFO:Uploading results into container
2022-08-11 21:44:12,195:INFO:Uploading model into container now
2022-08-11 21:44:12,195:INFO:master_model_container: 5
2022-08-11 21:44:12,195:INFO:display_container: 2
2022-08-11 21:44:12,196:INFO:Lars(random_state=976)
2022-08-11 21:44:12,196:INFO:create_model() successfully completed......................................
2022-08-11 21:44:12,303:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:12,303:INFO:Creating metrics dataframe
2022-08-11 21:44:12,310:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:44:12,310:INFO:Total runtime is 0.054846918582916265 minutes
2022-08-11 21:44:12,313:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:12,313:INFO:Initializing create_model()
2022-08-11 21:44:12,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:12,313:INFO:Checking exceptions
2022-08-11 21:44:12,318:INFO:Importing libraries
2022-08-11 21:44:12,318:INFO:Copying training dataset
2022-08-11 21:44:12,327:INFO:Defining folds
2022-08-11 21:44:12,327:INFO:Declaring metric variables
2022-08-11 21:44:12,330:INFO:Importing untrained model
2022-08-11 21:44:12,333:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:44:12,338:INFO:Starting cross validation
2022-08-11 21:44:12,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:12,450:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,462:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,469:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,473:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,481:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,481:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,496:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,501:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,510:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,512:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,522:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:44:12,523:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,533:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,651:INFO:Calculating mean and std
2022-08-11 21:44:12,652:INFO:Creating metrics dataframe
2022-08-11 21:44:12,654:INFO:Uploading results into container
2022-08-11 21:44:12,654:INFO:Uploading model into container now
2022-08-11 21:44:12,654:INFO:master_model_container: 6
2022-08-11 21:44:12,654:INFO:display_container: 2
2022-08-11 21:44:12,655:INFO:LassoLars(random_state=976)
2022-08-11 21:44:12,655:INFO:create_model() successfully completed......................................
2022-08-11 21:44:12,763:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:12,764:INFO:Creating metrics dataframe
2022-08-11 21:44:12,771:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:44:12,772:INFO:Total runtime is 0.06253513495127361 minutes
2022-08-11 21:44:12,775:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:12,775:INFO:Initializing create_model()
2022-08-11 21:44:12,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:12,775:INFO:Checking exceptions
2022-08-11 21:44:12,781:INFO:Importing libraries
2022-08-11 21:44:12,781:INFO:Copying training dataset
2022-08-11 21:44:12,791:INFO:Defining folds
2022-08-11 21:44:12,791:INFO:Declaring metric variables
2022-08-11 21:44:12,796:INFO:Importing untrained model
2022-08-11 21:44:12,800:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:44:12,806:INFO:Starting cross validation
2022-08-11 21:44:12,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:12,921:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,928:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,933:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,934:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,942:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,944:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,933:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,958:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,962:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,964:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,966:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,973:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:12,977:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,979:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:12,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:13,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,030:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:44:13,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,158:INFO:Calculating mean and std
2022-08-11 21:44:13,160:INFO:Creating metrics dataframe
2022-08-11 21:44:13,163:INFO:Uploading results into container
2022-08-11 21:44:13,164:INFO:Uploading model into container now
2022-08-11 21:44:13,164:INFO:master_model_container: 7
2022-08-11 21:44:13,164:INFO:display_container: 2
2022-08-11 21:44:13,164:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:44:13,164:INFO:create_model() successfully completed......................................
2022-08-11 21:44:13,274:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:13,275:INFO:Creating metrics dataframe
2022-08-11 21:44:13,282:INFO:Initializing Bayesian Ridge
2022-08-11 21:44:13,282:INFO:Total runtime is 0.0710438330968221 minutes
2022-08-11 21:44:13,284:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:13,285:INFO:Initializing create_model()
2022-08-11 21:44:13,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:13,285:INFO:Checking exceptions
2022-08-11 21:44:13,290:INFO:Importing libraries
2022-08-11 21:44:13,290:INFO:Copying training dataset
2022-08-11 21:44:13,297:INFO:Defining folds
2022-08-11 21:44:13,297:INFO:Declaring metric variables
2022-08-11 21:44:13,300:INFO:Importing untrained model
2022-08-11 21:44:13,302:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:44:13,308:INFO:Starting cross validation
2022-08-11 21:44:13,308:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:13,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,709:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,730:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,748:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,762:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:13,880:INFO:Calculating mean and std
2022-08-11 21:44:13,882:INFO:Creating metrics dataframe
2022-08-11 21:44:13,885:INFO:Uploading results into container
2022-08-11 21:44:13,885:INFO:Uploading model into container now
2022-08-11 21:44:13,885:INFO:master_model_container: 8
2022-08-11 21:44:13,885:INFO:display_container: 2
2022-08-11 21:44:13,886:INFO:BayesianRidge()
2022-08-11 21:44:13,886:INFO:create_model() successfully completed......................................
2022-08-11 21:44:13,994:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:13,994:INFO:Creating metrics dataframe
2022-08-11 21:44:14,001:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:44:14,002:INFO:Total runtime is 0.08303656578063966 minutes
2022-08-11 21:44:14,004:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:14,005:INFO:Initializing create_model()
2022-08-11 21:44:14,005:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:14,005:INFO:Checking exceptions
2022-08-11 21:44:14,010:INFO:Importing libraries
2022-08-11 21:44:14,027:INFO:Copying training dataset
2022-08-11 21:44:14,036:INFO:Defining folds
2022-08-11 21:44:14,036:INFO:Declaring metric variables
2022-08-11 21:44:14,039:INFO:Importing untrained model
2022-08-11 21:44:14,041:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:44:14,046:INFO:Starting cross validation
2022-08-11 21:44:14,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:14,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,246:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,263:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,271:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,309:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:14,429:INFO:Calculating mean and std
2022-08-11 21:44:14,430:INFO:Creating metrics dataframe
2022-08-11 21:44:14,432:INFO:Uploading results into container
2022-08-11 21:44:14,433:INFO:Uploading model into container now
2022-08-11 21:44:14,433:INFO:master_model_container: 9
2022-08-11 21:44:14,433:INFO:display_container: 2
2022-08-11 21:44:14,433:INFO:PassiveAggressiveRegressor(random_state=976)
2022-08-11 21:44:14,434:INFO:create_model() successfully completed......................................
2022-08-11 21:44:14,543:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:14,543:INFO:Creating metrics dataframe
2022-08-11 21:44:14,551:INFO:Initializing Huber Regressor
2022-08-11 21:44:14,551:INFO:Total runtime is 0.09219828446706137 minutes
2022-08-11 21:44:14,554:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:14,554:INFO:Initializing create_model()
2022-08-11 21:44:14,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:14,554:INFO:Checking exceptions
2022-08-11 21:44:14,559:INFO:Importing libraries
2022-08-11 21:44:14,560:INFO:Copying training dataset
2022-08-11 21:44:14,568:INFO:Defining folds
2022-08-11 21:44:14,568:INFO:Declaring metric variables
2022-08-11 21:44:14,571:INFO:Importing untrained model
2022-08-11 21:44:14,574:INFO:Huber Regressor Imported successfully
2022-08-11 21:44:14,579:INFO:Starting cross validation
2022-08-11 21:44:14,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:15,555:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,556:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,633:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,636:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,637:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,674:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,674:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,684:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,724:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,726:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,726:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:44:15,730:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:15,849:INFO:Calculating mean and std
2022-08-11 21:44:15,851:INFO:Creating metrics dataframe
2022-08-11 21:44:15,854:INFO:Uploading results into container
2022-08-11 21:44:15,854:INFO:Uploading model into container now
2022-08-11 21:44:15,854:INFO:master_model_container: 10
2022-08-11 21:44:15,855:INFO:display_container: 2
2022-08-11 21:44:15,855:INFO:HuberRegressor()
2022-08-11 21:44:15,855:INFO:create_model() successfully completed......................................
2022-08-11 21:44:15,963:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:15,963:INFO:Creating metrics dataframe
2022-08-11 21:44:15,972:INFO:Initializing K Neighbors Regressor
2022-08-11 21:44:15,972:INFO:Total runtime is 0.11587986946105958 minutes
2022-08-11 21:44:15,975:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:15,975:INFO:Initializing create_model()
2022-08-11 21:44:15,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:15,976:INFO:Checking exceptions
2022-08-11 21:44:15,980:INFO:Importing libraries
2022-08-11 21:44:15,981:INFO:Copying training dataset
2022-08-11 21:44:15,989:INFO:Defining folds
2022-08-11 21:44:15,989:INFO:Declaring metric variables
2022-08-11 21:44:15,992:INFO:Importing untrained model
2022-08-11 21:44:15,995:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:44:16,000:INFO:Starting cross validation
2022-08-11 21:44:16,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:16,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,118:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,119:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,122:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,126:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,150:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,151:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,180:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:16,314:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:17,282:INFO:Calculating mean and std
2022-08-11 21:44:17,284:INFO:Creating metrics dataframe
2022-08-11 21:44:17,286:INFO:Uploading results into container
2022-08-11 21:44:17,287:INFO:Uploading model into container now
2022-08-11 21:44:17,287:INFO:master_model_container: 11
2022-08-11 21:44:17,287:INFO:display_container: 2
2022-08-11 21:44:17,288:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:44:17,288:INFO:create_model() successfully completed......................................
2022-08-11 21:44:17,395:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:17,395:INFO:Creating metrics dataframe
2022-08-11 21:44:17,403:INFO:Initializing Decision Tree Regressor
2022-08-11 21:44:17,403:INFO:Total runtime is 0.1397296984990438 minutes
2022-08-11 21:44:17,406:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:17,406:INFO:Initializing create_model()
2022-08-11 21:44:17,406:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:17,407:INFO:Checking exceptions
2022-08-11 21:44:17,411:INFO:Importing libraries
2022-08-11 21:44:17,411:INFO:Copying training dataset
2022-08-11 21:44:17,420:INFO:Defining folds
2022-08-11 21:44:17,420:INFO:Declaring metric variables
2022-08-11 21:44:17,423:INFO:Importing untrained model
2022-08-11 21:44:17,441:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:44:17,446:INFO:Starting cross validation
2022-08-11 21:44:17,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:44:18,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,083:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,152:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,169:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,183:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,204:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,204:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,220:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,228:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:44:19,345:INFO:Calculating mean and std
2022-08-11 21:44:19,346:INFO:Creating metrics dataframe
2022-08-11 21:44:19,350:INFO:Uploading results into container
2022-08-11 21:44:19,350:INFO:Uploading model into container now
2022-08-11 21:44:19,351:INFO:master_model_container: 12
2022-08-11 21:44:19,351:INFO:display_container: 2
2022-08-11 21:44:19,351:INFO:DecisionTreeRegressor(random_state=976)
2022-08-11 21:44:19,351:INFO:create_model() successfully completed......................................
2022-08-11 21:44:19,458:INFO:SubProcess create_model() end ==================================
2022-08-11 21:44:19,458:INFO:Creating metrics dataframe
2022-08-11 21:44:19,467:INFO:Initializing Random Forest Regressor
2022-08-11 21:44:19,468:INFO:Total runtime is 0.17413766781489054 minutes
2022-08-11 21:44:19,470:INFO:SubProcess create_model() called ==================================
2022-08-11 21:44:19,470:INFO:Initializing create_model()
2022-08-11 21:44:19,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:44:19,471:INFO:Checking exceptions
2022-08-11 21:44:19,475:INFO:Importing libraries
2022-08-11 21:44:19,476:INFO:Copying training dataset
2022-08-11 21:44:19,485:INFO:Defining folds
2022-08-11 21:44:19,485:INFO:Declaring metric variables
2022-08-11 21:44:19,488:INFO:Importing untrained model
2022-08-11 21:44:19,491:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:44:19,496:INFO:Starting cross validation
2022-08-11 21:44:19,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:46:01,613:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:01,820:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:02,367:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:02,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:02,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:02,751:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:02,784:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:02,996:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:03,021:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:03,186:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:03,331:INFO:Calculating mean and std
2022-08-11 21:46:03,332:INFO:Creating metrics dataframe
2022-08-11 21:46:03,335:INFO:Uploading results into container
2022-08-11 21:46:03,336:INFO:Uploading model into container now
2022-08-11 21:46:03,337:INFO:master_model_container: 13
2022-08-11 21:46:03,337:INFO:display_container: 2
2022-08-11 21:46:03,337:INFO:RandomForestRegressor(n_jobs=-1, random_state=976)
2022-08-11 21:46:03,337:INFO:create_model() successfully completed......................................
2022-08-11 21:46:03,447:INFO:SubProcess create_model() end ==================================
2022-08-11 21:46:03,447:INFO:Creating metrics dataframe
2022-08-11 21:46:03,455:INFO:Initializing Extra Trees Regressor
2022-08-11 21:46:03,456:INFO:Total runtime is 1.907268985112508 minutes
2022-08-11 21:46:03,458:INFO:SubProcess create_model() called ==================================
2022-08-11 21:46:03,459:INFO:Initializing create_model()
2022-08-11 21:46:03,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:46:03,459:INFO:Checking exceptions
2022-08-11 21:46:03,464:INFO:Importing libraries
2022-08-11 21:46:03,464:INFO:Copying training dataset
2022-08-11 21:46:03,472:INFO:Defining folds
2022-08-11 21:46:03,472:INFO:Declaring metric variables
2022-08-11 21:46:03,475:INFO:Importing untrained model
2022-08-11 21:46:03,478:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:46:03,484:INFO:Starting cross validation
2022-08-11 21:46:03,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:46:31,458:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:32,958:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:32,958:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:34,069:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:35,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:35,365:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:35,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:35,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:35,618:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:36,552:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:36,814:INFO:Calculating mean and std
2022-08-11 21:46:36,815:INFO:Creating metrics dataframe
2022-08-11 21:46:36,818:INFO:Uploading results into container
2022-08-11 21:46:36,819:INFO:Uploading model into container now
2022-08-11 21:46:36,819:INFO:master_model_container: 14
2022-08-11 21:46:36,819:INFO:display_container: 2
2022-08-11 21:46:36,820:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=976)
2022-08-11 21:46:36,820:INFO:create_model() successfully completed......................................
2022-08-11 21:46:36,937:INFO:SubProcess create_model() end ==================================
2022-08-11 21:46:36,937:INFO:Creating metrics dataframe
2022-08-11 21:46:36,947:INFO:Initializing AdaBoost Regressor
2022-08-11 21:46:36,947:INFO:Total runtime is 2.4654587348302206 minutes
2022-08-11 21:46:36,950:INFO:SubProcess create_model() called ==================================
2022-08-11 21:46:36,950:INFO:Initializing create_model()
2022-08-11 21:46:36,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:46:36,950:INFO:Checking exceptions
2022-08-11 21:46:36,955:INFO:Importing libraries
2022-08-11 21:46:36,955:INFO:Copying training dataset
2022-08-11 21:46:36,964:INFO:Defining folds
2022-08-11 21:46:36,964:INFO:Declaring metric variables
2022-08-11 21:46:36,967:INFO:Importing untrained model
2022-08-11 21:46:36,970:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:46:36,975:INFO:Starting cross validation
2022-08-11 21:46:36,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:46:40,669:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:40,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:40,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:40,929:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,106:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,161:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,201:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,587:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:46:41,734:INFO:Calculating mean and std
2022-08-11 21:46:41,737:INFO:Creating metrics dataframe
2022-08-11 21:46:41,741:INFO:Uploading results into container
2022-08-11 21:46:41,741:INFO:Uploading model into container now
2022-08-11 21:46:41,742:INFO:master_model_container: 15
2022-08-11 21:46:41,742:INFO:display_container: 2
2022-08-11 21:46:41,742:INFO:AdaBoostRegressor(random_state=976)
2022-08-11 21:46:41,742:INFO:create_model() successfully completed......................................
2022-08-11 21:46:41,877:INFO:SubProcess create_model() end ==================================
2022-08-11 21:46:41,877:INFO:Creating metrics dataframe
2022-08-11 21:46:41,887:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:46:41,888:INFO:Total runtime is 2.547803787390391 minutes
2022-08-11 21:46:41,891:INFO:SubProcess create_model() called ==================================
2022-08-11 21:46:41,891:INFO:Initializing create_model()
2022-08-11 21:46:41,891:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:46:41,891:INFO:Checking exceptions
2022-08-11 21:46:41,903:INFO:Importing libraries
2022-08-11 21:46:41,903:INFO:Copying training dataset
2022-08-11 21:46:41,927:INFO:Defining folds
2022-08-11 21:46:41,927:INFO:Declaring metric variables
2022-08-11 21:46:41,929:INFO:Importing untrained model
2022-08-11 21:46:41,932:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:46:41,937:INFO:Starting cross validation
2022-08-11 21:46:41,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:47:01,145:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,247:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,291:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,301:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,318:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,318:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,327:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,370:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,392:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,418:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:01,536:INFO:Calculating mean and std
2022-08-11 21:47:01,537:INFO:Creating metrics dataframe
2022-08-11 21:47:01,540:INFO:Uploading results into container
2022-08-11 21:47:01,540:INFO:Uploading model into container now
2022-08-11 21:47:01,540:INFO:master_model_container: 16
2022-08-11 21:47:01,540:INFO:display_container: 2
2022-08-11 21:47:01,541:INFO:GradientBoostingRegressor(random_state=976)
2022-08-11 21:47:01,541:INFO:create_model() successfully completed......................................
2022-08-11 21:47:01,646:INFO:SubProcess create_model() end ==================================
2022-08-11 21:47:01,646:INFO:Creating metrics dataframe
2022-08-11 21:47:01,655:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:47:01,655:INFO:Total runtime is 2.877267134189606 minutes
2022-08-11 21:47:01,659:INFO:SubProcess create_model() called ==================================
2022-08-11 21:47:01,659:INFO:Initializing create_model()
2022-08-11 21:47:01,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:47:01,659:INFO:Checking exceptions
2022-08-11 21:47:01,668:INFO:Importing libraries
2022-08-11 21:47:01,668:INFO:Copying training dataset
2022-08-11 21:47:01,679:INFO:Defining folds
2022-08-11 21:47:01,680:INFO:Declaring metric variables
2022-08-11 21:47:01,682:INFO:Importing untrained model
2022-08-11 21:47:01,685:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:47:01,690:INFO:Starting cross validation
2022-08-11 21:47:01,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:47:13,109:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,272:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,280:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:13,510:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:15,904:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,032:INFO:Calculating mean and std
2022-08-11 21:47:16,033:INFO:Creating metrics dataframe
2022-08-11 21:47:16,035:INFO:Uploading results into container
2022-08-11 21:47:16,036:INFO:Uploading model into container now
2022-08-11 21:47:16,036:INFO:master_model_container: 17
2022-08-11 21:47:16,036:INFO:display_container: 2
2022-08-11 21:47:16,037:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=976,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:47:16,037:INFO:create_model() successfully completed......................................
2022-08-11 21:47:16,146:INFO:SubProcess create_model() end ==================================
2022-08-11 21:47:16,146:INFO:Creating metrics dataframe
2022-08-11 21:47:16,155:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:47:16,155:INFO:Total runtime is 3.1189290324846906 minutes
2022-08-11 21:47:16,158:INFO:SubProcess create_model() called ==================================
2022-08-11 21:47:16,158:INFO:Initializing create_model()
2022-08-11 21:47:16,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:47:16,158:INFO:Checking exceptions
2022-08-11 21:47:16,168:INFO:Importing libraries
2022-08-11 21:47:16,168:INFO:Copying training dataset
2022-08-11 21:47:16,184:INFO:Defining folds
2022-08-11 21:47:16,184:INFO:Declaring metric variables
2022-08-11 21:47:16,187:INFO:Importing untrained model
2022-08-11 21:47:16,190:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:47:16,195:INFO:Starting cross validation
2022-08-11 21:47:16,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:47:16,914:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,918:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,931:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,934:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,946:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,956:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,973:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:16,982:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,029:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,173:INFO:Calculating mean and std
2022-08-11 21:47:17,174:INFO:Creating metrics dataframe
2022-08-11 21:47:17,176:INFO:Uploading results into container
2022-08-11 21:47:17,177:INFO:Uploading model into container now
2022-08-11 21:47:17,177:INFO:master_model_container: 18
2022-08-11 21:47:17,177:INFO:display_container: 2
2022-08-11 21:47:17,177:INFO:LGBMRegressor(random_state=976)
2022-08-11 21:47:17,177:INFO:create_model() successfully completed......................................
2022-08-11 21:47:17,281:INFO:SubProcess create_model() end ==================================
2022-08-11 21:47:17,281:INFO:Creating metrics dataframe
2022-08-11 21:47:17,291:INFO:Initializing Dummy Regressor
2022-08-11 21:47:17,291:INFO:Total runtime is 3.137862066427867 minutes
2022-08-11 21:47:17,294:INFO:SubProcess create_model() called ==================================
2022-08-11 21:47:17,294:INFO:Initializing create_model()
2022-08-11 21:47:17,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec9b30760>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:47:17,294:INFO:Checking exceptions
2022-08-11 21:47:17,302:INFO:Importing libraries
2022-08-11 21:47:17,302:INFO:Copying training dataset
2022-08-11 21:47:17,313:INFO:Defining folds
2022-08-11 21:47:17,313:INFO:Declaring metric variables
2022-08-11 21:47:17,316:INFO:Importing untrained model
2022-08-11 21:47:17,319:INFO:Dummy Regressor Imported successfully
2022-08-11 21:47:17,325:INFO:Starting cross validation
2022-08-11 21:47:17,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:47:17,440:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,447:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,454:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,465:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,471:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,496:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,503:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:47:17,630:INFO:Calculating mean and std
2022-08-11 21:47:17,632:INFO:Creating metrics dataframe
2022-08-11 21:47:17,635:INFO:Uploading results into container
2022-08-11 21:47:17,636:INFO:Uploading model into container now
2022-08-11 21:47:17,636:INFO:master_model_container: 19
2022-08-11 21:47:17,636:INFO:display_container: 2
2022-08-11 21:47:17,637:INFO:DummyRegressor()
2022-08-11 21:47:17,637:INFO:create_model() successfully completed......................................
2022-08-11 21:47:17,744:INFO:SubProcess create_model() end ==================================
2022-08-11 21:47:17,745:INFO:Creating metrics dataframe
2022-08-11 21:47:17,762:INFO:Initializing create_model()
2022-08-11 21:47:17,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=LGBMRegressor(random_state=976), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:47:17,763:INFO:Checking exceptions
2022-08-11 21:47:17,770:INFO:Importing libraries
2022-08-11 21:47:17,770:INFO:Copying training dataset
2022-08-11 21:47:17,778:INFO:Defining folds
2022-08-11 21:47:17,778:INFO:Declaring metric variables
2022-08-11 21:47:17,778:INFO:Importing untrained model
2022-08-11 21:47:17,778:INFO:Declaring custom model
2022-08-11 21:47:17,779:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:47:17,779:INFO:Cross validation set to False
2022-08-11 21:47:17,779:INFO:Fitting Model
2022-08-11 21:47:20,234:INFO:LGBMRegressor(random_state=976)
2022-08-11 21:47:20,235:INFO:create_model() successfully completed......................................
2022-08-11 21:47:20,363:INFO:master_model_container: 19
2022-08-11 21:47:20,364:INFO:display_container: 2
2022-08-11 21:47:20,364:INFO:LGBMRegressor(random_state=976)
2022-08-11 21:47:20,364:INFO:compare_models() successfully completed......................................
2022-08-11 21:48:20,214:INFO:PyCaret RegressionExperiment
2022-08-11 21:48:20,214:INFO:Logging name: reg-default-name
2022-08-11 21:48:20,214:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:48:20,214:INFO:version 3.0.0.rc3
2022-08-11 21:48:20,216:INFO:Initializing setup()
2022-08-11 21:48:20,216:INFO:self.USI: 4f85
2022-08-11 21:48:20,216:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:48:20,216:INFO:Checking environment
2022-08-11 21:48:20,216:INFO:python_version: 3.8.8
2022-08-11 21:48:20,216:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:48:20,217:INFO:machine: x86_64
2022-08-11 21:48:20,217:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:48:20,217:INFO:Memory: svmem(total=34359738368, available=4367687680, percent=87.3, used=4053561344, free=763981824, active=3621380096, inactive=3589070848, wired=432181248)
2022-08-11 21:48:20,217:INFO:Physical Core: 10
2022-08-11 21:48:20,217:INFO:Logical Core: 10
2022-08-11 21:48:20,217:INFO:Checking libraries
2022-08-11 21:48:20,217:INFO:System:
2022-08-11 21:48:20,218:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:48:20,218:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:48:20,218:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:48:20,218:INFO:PyCaret required dependencies:
2022-08-11 21:48:20,218:INFO:                 pip: 22.1.2
2022-08-11 21:48:20,218:INFO:          setuptools: 61.2.0
2022-08-11 21:48:20,218:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:48:20,218:INFO:             IPython: 8.4.0
2022-08-11 21:48:20,219:INFO:          ipywidgets: 7.6.5
2022-08-11 21:48:20,219:INFO:                tqdm: 4.64.0
2022-08-11 21:48:20,219:INFO:               numpy: 1.22.4
2022-08-11 21:48:20,219:INFO:              pandas: 1.4.3
2022-08-11 21:48:20,219:INFO:              jinja2: 3.0.3
2022-08-11 21:48:20,219:INFO:               scipy: 1.5.4
2022-08-11 21:48:20,219:INFO:              joblib: 1.1.0
2022-08-11 21:48:20,219:INFO:             sklearn: 1.1.1
2022-08-11 21:48:20,219:INFO:                pyod: 1.0.4
2022-08-11 21:48:20,219:INFO:            imblearn: 0.9.1
2022-08-11 21:48:20,220:INFO:   category_encoders: 2.5.0
2022-08-11 21:48:20,220:INFO:            lightgbm: 3.2.1
2022-08-11 21:48:20,220:INFO:               numba: 0.55.2
2022-08-11 21:48:20,220:INFO:            requests: 2.28.1
2022-08-11 21:48:20,220:INFO:          matplotlib: 3.5.1
2022-08-11 21:48:20,220:INFO:          scikitplot: 0.3.7
2022-08-11 21:48:20,220:INFO:         yellowbrick: 1.4
2022-08-11 21:48:20,220:INFO:              plotly: 5.9.0
2022-08-11 21:48:20,220:INFO:             kaleido: 0.2.1
2022-08-11 21:48:20,220:INFO:         statsmodels: 0.13.2
2022-08-11 21:48:20,221:INFO:              sktime: 0.13.0
2022-08-11 21:48:20,221:INFO:               tbats: 1.1.0
2022-08-11 21:48:20,221:INFO:            pmdarima: 1.8.5
2022-08-11 21:48:20,221:INFO:              psutil: 5.9.1
2022-08-11 21:48:20,221:INFO:PyCaret optional dependencies:
2022-08-11 21:48:20,221:INFO:                shap: Not installed
2022-08-11 21:48:20,221:INFO:           interpret: Not installed
2022-08-11 21:48:20,221:INFO:                umap: 0.5.3
2022-08-11 21:48:20,221:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:48:20,221:INFO:  explainerdashboard: Not installed
2022-08-11 21:48:20,222:INFO:             autoviz: Not installed
2022-08-11 21:48:20,222:INFO:           fairlearn: Not installed
2022-08-11 21:48:20,222:INFO:             xgboost: 1.6.1
2022-08-11 21:48:20,222:INFO:            catboost: Not installed
2022-08-11 21:48:20,222:INFO:              kmodes: 0.12.1
2022-08-11 21:48:20,222:INFO:             mlxtend: 0.19.0
2022-08-11 21:48:20,222:INFO:       statsforecast: Not installed
2022-08-11 21:48:20,222:INFO:        tune_sklearn: Not installed
2022-08-11 21:48:20,222:INFO:                 ray: Not installed
2022-08-11 21:48:20,222:INFO:            hyperopt: Not installed
2022-08-11 21:48:20,223:INFO:              optuna: Not installed
2022-08-11 21:48:20,223:INFO:               skopt: Not installed
2022-08-11 21:48:20,223:INFO:              mlflow: 1.27.0
2022-08-11 21:48:20,223:INFO:              gradio: Not installed
2022-08-11 21:48:20,223:INFO:             fastapi: Not installed
2022-08-11 21:48:20,223:INFO:             uvicorn: Not installed
2022-08-11 21:48:20,223:INFO:              m2cgen: Not installed
2022-08-11 21:48:20,223:INFO:           evidently: Not installed
2022-08-11 21:48:20,223:INFO:                nltk: 3.7
2022-08-11 21:48:20,223:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:48:20,223:INFO:              gensim: 3.8.3
2022-08-11 21:48:20,223:INFO:               spacy: 2.3.7
2022-08-11 21:48:20,223:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:48:20,224:INFO:            textblob: 0.17.1
2022-08-11 21:48:20,224:INFO:               fugue: Not installed
2022-08-11 21:48:20,224:INFO:           streamlit: Not installed
2022-08-11 21:48:20,224:INFO:             prophet: Not installed
2022-08-11 21:48:20,224:INFO:None
2022-08-11 21:48:20,224:INFO:Set up data.
2022-08-11 21:48:20,268:INFO:Set up train/test split.
2022-08-11 21:48:20,291:INFO:Set up folding strategy.
2022-08-11 21:48:20,291:INFO:Assigning column types.
2022-08-11 21:48:20,305:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:48:20,305:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,309:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,313:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,375:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,416:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,416:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:20,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:20,419:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,423:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,428:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,488:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,531:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,532:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:20,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:20,534:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:48:20,538:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,542:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,602:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,645:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,646:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:20,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:20,652:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,657:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,720:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,763:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:20,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:20,765:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:48:20,774:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,877:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:20,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:20,887:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:20,989:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:20,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:20,992:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:48:21,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:21,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:21,105:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:21,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:21,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:21,217:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:48:21,218:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:21,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:21,220:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:48:21,290:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:21,334:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:21,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:21,410:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:48:21,453:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:21,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:21,456:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:48:21,566:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:21,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:21,681:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:21,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:21,685:INFO:Preparing preprocessing pipeline...
2022-08-11 21:48:21,686:INFO:Set up simple imputation.
2022-08-11 21:48:21,686:INFO:Set up variance threshold.
2022-08-11 21:48:21,857:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:48:21,860:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:48:21,860:INFO:Creating final display dataframe.
2022-08-11 21:48:22,551:INFO:Setup display_container:                Description             Value
0               Session id               581
1                   Target              Y_07
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              4f85
2022-08-11 21:48:22,661:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:22,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:22,764:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:48:22,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:48:22,784:INFO:setup() successfully completed in 2.57s...............
2022-08-11 21:48:22,788:INFO:Initializing compare_models()
2022-08-11 21:48:22,789:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:48:22,789:INFO:Checking exceptions
2022-08-11 21:48:22,795:INFO:Preparing display monitor
2022-08-11 21:48:22,820:INFO:Initializing Linear Regression
2022-08-11 21:48:22,820:INFO:Total runtime is 3.0835469563802084e-06 minutes
2022-08-11 21:48:22,823:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:22,823:INFO:Initializing create_model()
2022-08-11 21:48:22,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:22,823:INFO:Checking exceptions
2022-08-11 21:48:22,830:INFO:Importing libraries
2022-08-11 21:48:22,830:INFO:Copying training dataset
2022-08-11 21:48:22,837:INFO:Defining folds
2022-08-11 21:48:22,838:INFO:Declaring metric variables
2022-08-11 21:48:22,840:INFO:Importing untrained model
2022-08-11 21:48:22,843:INFO:Linear Regression Imported successfully
2022-08-11 21:48:22,847:INFO:Starting cross validation
2022-08-11 21:48:22,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:23,500:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,529:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,554:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,556:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,557:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,627:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:23,906:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,154:INFO:Calculating mean and std
2022-08-11 21:48:24,156:INFO:Creating metrics dataframe
2022-08-11 21:48:24,160:INFO:Uploading results into container
2022-08-11 21:48:24,160:INFO:Uploading model into container now
2022-08-11 21:48:24,160:INFO:master_model_container: 1
2022-08-11 21:48:24,160:INFO:display_container: 2
2022-08-11 21:48:24,161:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:48:24,161:INFO:create_model() successfully completed......................................
2022-08-11 21:48:24,269:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:24,269:INFO:Creating metrics dataframe
2022-08-11 21:48:24,275:INFO:Initializing Lasso Regression
2022-08-11 21:48:24,275:INFO:Total runtime is 0.024258764584859212 minutes
2022-08-11 21:48:24,277:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:24,278:INFO:Initializing create_model()
2022-08-11 21:48:24,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:24,278:INFO:Checking exceptions
2022-08-11 21:48:24,283:INFO:Importing libraries
2022-08-11 21:48:24,283:INFO:Copying training dataset
2022-08-11 21:48:24,291:INFO:Defining folds
2022-08-11 21:48:24,291:INFO:Declaring metric variables
2022-08-11 21:48:24,294:INFO:Importing untrained model
2022-08-11 21:48:24,297:INFO:Lasso Regression Imported successfully
2022-08-11 21:48:24,302:INFO:Starting cross validation
2022-08-11 21:48:24,303:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:24,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,457:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,459:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,465:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,506:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,525:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,528:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,648:INFO:Calculating mean and std
2022-08-11 21:48:24,649:INFO:Creating metrics dataframe
2022-08-11 21:48:24,651:INFO:Uploading results into container
2022-08-11 21:48:24,651:INFO:Uploading model into container now
2022-08-11 21:48:24,652:INFO:master_model_container: 2
2022-08-11 21:48:24,652:INFO:display_container: 2
2022-08-11 21:48:24,653:INFO:Lasso(random_state=581)
2022-08-11 21:48:24,653:INFO:create_model() successfully completed......................................
2022-08-11 21:48:24,755:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:24,755:INFO:Creating metrics dataframe
2022-08-11 21:48:24,761:INFO:Initializing Ridge Regression
2022-08-11 21:48:24,761:INFO:Total runtime is 0.0323545495669047 minutes
2022-08-11 21:48:24,764:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:24,764:INFO:Initializing create_model()
2022-08-11 21:48:24,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:24,765:INFO:Checking exceptions
2022-08-11 21:48:24,769:INFO:Importing libraries
2022-08-11 21:48:24,769:INFO:Copying training dataset
2022-08-11 21:48:24,777:INFO:Defining folds
2022-08-11 21:48:24,777:INFO:Declaring metric variables
2022-08-11 21:48:24,779:INFO:Importing untrained model
2022-08-11 21:48:24,783:INFO:Ridge Regression Imported successfully
2022-08-11 21:48:24,788:INFO:Starting cross validation
2022-08-11 21:48:24,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:24,927:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,929:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,935:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,948:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,949:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:24,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,002:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,040:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,173:INFO:Calculating mean and std
2022-08-11 21:48:25,175:INFO:Creating metrics dataframe
2022-08-11 21:48:25,177:INFO:Uploading results into container
2022-08-11 21:48:25,177:INFO:Uploading model into container now
2022-08-11 21:48:25,178:INFO:master_model_container: 3
2022-08-11 21:48:25,178:INFO:display_container: 2
2022-08-11 21:48:25,178:INFO:Ridge(random_state=581)
2022-08-11 21:48:25,178:INFO:create_model() successfully completed......................................
2022-08-11 21:48:25,282:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:25,282:INFO:Creating metrics dataframe
2022-08-11 21:48:25,289:INFO:Initializing Elastic Net
2022-08-11 21:48:25,289:INFO:Total runtime is 0.04115771849950154 minutes
2022-08-11 21:48:25,292:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:25,292:INFO:Initializing create_model()
2022-08-11 21:48:25,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:25,292:INFO:Checking exceptions
2022-08-11 21:48:25,297:INFO:Importing libraries
2022-08-11 21:48:25,297:INFO:Copying training dataset
2022-08-11 21:48:25,305:INFO:Defining folds
2022-08-11 21:48:25,305:INFO:Declaring metric variables
2022-08-11 21:48:25,308:INFO:Importing untrained model
2022-08-11 21:48:25,311:INFO:Elastic Net Imported successfully
2022-08-11 21:48:25,317:INFO:Starting cross validation
2022-08-11 21:48:25,318:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:25,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,462:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,495:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,537:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,570:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,688:INFO:Calculating mean and std
2022-08-11 21:48:25,690:INFO:Creating metrics dataframe
2022-08-11 21:48:25,692:INFO:Uploading results into container
2022-08-11 21:48:25,693:INFO:Uploading model into container now
2022-08-11 21:48:25,694:INFO:master_model_container: 4
2022-08-11 21:48:25,694:INFO:display_container: 2
2022-08-11 21:48:25,694:INFO:ElasticNet(random_state=581)
2022-08-11 21:48:25,694:INFO:create_model() successfully completed......................................
2022-08-11 21:48:25,797:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:25,797:INFO:Creating metrics dataframe
2022-08-11 21:48:25,803:INFO:Initializing Least Angle Regression
2022-08-11 21:48:25,804:INFO:Total runtime is 0.04973375002543131 minutes
2022-08-11 21:48:25,806:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:25,807:INFO:Initializing create_model()
2022-08-11 21:48:25,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:25,807:INFO:Checking exceptions
2022-08-11 21:48:25,812:INFO:Importing libraries
2022-08-11 21:48:25,812:INFO:Copying training dataset
2022-08-11 21:48:25,820:INFO:Defining folds
2022-08-11 21:48:25,820:INFO:Declaring metric variables
2022-08-11 21:48:25,824:INFO:Importing untrained model
2022-08-11 21:48:25,827:INFO:Least Angle Regression Imported successfully
2022-08-11 21:48:25,833:INFO:Starting cross validation
2022-08-11 21:48:25,834:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:25,948:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,964:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,965:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,966:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,975:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:25,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:25,993:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,003:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,007:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,010:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,020:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,040:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,047:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,055:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,174:INFO:Calculating mean and std
2022-08-11 21:48:26,175:INFO:Creating metrics dataframe
2022-08-11 21:48:26,177:INFO:Uploading results into container
2022-08-11 21:48:26,177:INFO:Uploading model into container now
2022-08-11 21:48:26,178:INFO:master_model_container: 5
2022-08-11 21:48:26,178:INFO:display_container: 2
2022-08-11 21:48:26,178:INFO:Lars(random_state=581)
2022-08-11 21:48:26,178:INFO:create_model() successfully completed......................................
2022-08-11 21:48:26,280:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:26,280:INFO:Creating metrics dataframe
2022-08-11 21:48:26,287:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:48:26,287:INFO:Total runtime is 0.05778503417968749 minutes
2022-08-11 21:48:26,289:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:26,289:INFO:Initializing create_model()
2022-08-11 21:48:26,290:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:26,290:INFO:Checking exceptions
2022-08-11 21:48:26,295:INFO:Importing libraries
2022-08-11 21:48:26,295:INFO:Copying training dataset
2022-08-11 21:48:26,303:INFO:Defining folds
2022-08-11 21:48:26,304:INFO:Declaring metric variables
2022-08-11 21:48:26,307:INFO:Importing untrained model
2022-08-11 21:48:26,310:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:48:26,315:INFO:Starting cross validation
2022-08-11 21:48:26,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:26,436:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,438:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,451:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,455:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,458:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,462:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,471:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,478:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,479:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,480:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,519:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,530:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,530:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,533:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:48:26,543:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,667:INFO:Calculating mean and std
2022-08-11 21:48:26,668:INFO:Creating metrics dataframe
2022-08-11 21:48:26,671:INFO:Uploading results into container
2022-08-11 21:48:26,671:INFO:Uploading model into container now
2022-08-11 21:48:26,672:INFO:master_model_container: 6
2022-08-11 21:48:26,672:INFO:display_container: 2
2022-08-11 21:48:26,672:INFO:LassoLars(random_state=581)
2022-08-11 21:48:26,672:INFO:create_model() successfully completed......................................
2022-08-11 21:48:26,782:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:26,782:INFO:Creating metrics dataframe
2022-08-11 21:48:26,789:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:48:26,789:INFO:Total runtime is 0.06616078217824299 minutes
2022-08-11 21:48:26,791:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:26,792:INFO:Initializing create_model()
2022-08-11 21:48:26,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:26,792:INFO:Checking exceptions
2022-08-11 21:48:26,797:INFO:Importing libraries
2022-08-11 21:48:26,798:INFO:Copying training dataset
2022-08-11 21:48:26,806:INFO:Defining folds
2022-08-11 21:48:26,807:INFO:Declaring metric variables
2022-08-11 21:48:26,810:INFO:Importing untrained model
2022-08-11 21:48:26,812:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:48:26,817:INFO:Starting cross validation
2022-08-11 21:48:26,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:26,937:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,951:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,952:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,973:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,976:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,977:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,980:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,995:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:26,996:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:26,996:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:27,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:48:27,053:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,174:INFO:Calculating mean and std
2022-08-11 21:48:27,175:INFO:Creating metrics dataframe
2022-08-11 21:48:27,178:INFO:Uploading results into container
2022-08-11 21:48:27,178:INFO:Uploading model into container now
2022-08-11 21:48:27,179:INFO:master_model_container: 7
2022-08-11 21:48:27,179:INFO:display_container: 2
2022-08-11 21:48:27,179:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:48:27,179:INFO:create_model() successfully completed......................................
2022-08-11 21:48:27,285:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:27,286:INFO:Creating metrics dataframe
2022-08-11 21:48:27,292:INFO:Initializing Bayesian Ridge
2022-08-11 21:48:27,292:INFO:Total runtime is 0.0745448350906372 minutes
2022-08-11 21:48:27,295:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:27,295:INFO:Initializing create_model()
2022-08-11 21:48:27,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:27,295:INFO:Checking exceptions
2022-08-11 21:48:27,300:INFO:Importing libraries
2022-08-11 21:48:27,300:INFO:Copying training dataset
2022-08-11 21:48:27,308:INFO:Defining folds
2022-08-11 21:48:27,308:INFO:Declaring metric variables
2022-08-11 21:48:27,311:INFO:Importing untrained model
2022-08-11 21:48:27,313:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:48:27,318:INFO:Starting cross validation
2022-08-11 21:48:27,319:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:27,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,724:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,734:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,734:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,743:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,777:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:27,894:INFO:Calculating mean and std
2022-08-11 21:48:27,896:INFO:Creating metrics dataframe
2022-08-11 21:48:27,899:INFO:Uploading results into container
2022-08-11 21:48:27,900:INFO:Uploading model into container now
2022-08-11 21:48:27,901:INFO:master_model_container: 8
2022-08-11 21:48:27,901:INFO:display_container: 2
2022-08-11 21:48:27,901:INFO:BayesianRidge()
2022-08-11 21:48:27,901:INFO:create_model() successfully completed......................................
2022-08-11 21:48:28,007:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:28,007:INFO:Creating metrics dataframe
2022-08-11 21:48:28,014:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:48:28,014:INFO:Total runtime is 0.08657230138778685 minutes
2022-08-11 21:48:28,017:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:28,017:INFO:Initializing create_model()
2022-08-11 21:48:28,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:28,018:INFO:Checking exceptions
2022-08-11 21:48:28,022:INFO:Importing libraries
2022-08-11 21:48:28,022:INFO:Copying training dataset
2022-08-11 21:48:28,031:INFO:Defining folds
2022-08-11 21:48:28,031:INFO:Declaring metric variables
2022-08-11 21:48:28,033:INFO:Importing untrained model
2022-08-11 21:48:28,036:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:48:28,040:INFO:Starting cross validation
2022-08-11 21:48:28,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:28,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,245:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,278:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,300:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,303:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:28,422:INFO:Calculating mean and std
2022-08-11 21:48:28,423:INFO:Creating metrics dataframe
2022-08-11 21:48:28,425:INFO:Uploading results into container
2022-08-11 21:48:28,426:INFO:Uploading model into container now
2022-08-11 21:48:28,426:INFO:master_model_container: 9
2022-08-11 21:48:28,426:INFO:display_container: 2
2022-08-11 21:48:28,427:INFO:PassiveAggressiveRegressor(random_state=581)
2022-08-11 21:48:28,427:INFO:create_model() successfully completed......................................
2022-08-11 21:48:28,528:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:28,528:INFO:Creating metrics dataframe
2022-08-11 21:48:28,536:INFO:Initializing Huber Regressor
2022-08-11 21:48:28,536:INFO:Total runtime is 0.09527806838353473 minutes
2022-08-11 21:48:28,539:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:28,540:INFO:Initializing create_model()
2022-08-11 21:48:28,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:28,540:INFO:Checking exceptions
2022-08-11 21:48:28,544:INFO:Importing libraries
2022-08-11 21:48:28,544:INFO:Copying training dataset
2022-08-11 21:48:28,552:INFO:Defining folds
2022-08-11 21:48:28,553:INFO:Declaring metric variables
2022-08-11 21:48:28,555:INFO:Importing untrained model
2022-08-11 21:48:28,557:INFO:Huber Regressor Imported successfully
2022-08-11 21:48:28,562:INFO:Starting cross validation
2022-08-11 21:48:28,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:29,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,620:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,622:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,625:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,669:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,671:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,678:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,679:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,698:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,716:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:48:29,716:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:29,836:INFO:Calculating mean and std
2022-08-11 21:48:29,837:INFO:Creating metrics dataframe
2022-08-11 21:48:29,839:INFO:Uploading results into container
2022-08-11 21:48:29,840:INFO:Uploading model into container now
2022-08-11 21:48:29,841:INFO:master_model_container: 10
2022-08-11 21:48:29,841:INFO:display_container: 2
2022-08-11 21:48:29,841:INFO:HuberRegressor()
2022-08-11 21:48:29,841:INFO:create_model() successfully completed......................................
2022-08-11 21:48:29,952:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:29,953:INFO:Creating metrics dataframe
2022-08-11 21:48:29,961:INFO:Initializing K Neighbors Regressor
2022-08-11 21:48:29,961:INFO:Total runtime is 0.11902696688969927 minutes
2022-08-11 21:48:29,965:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:29,965:INFO:Initializing create_model()
2022-08-11 21:48:29,965:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:29,965:INFO:Checking exceptions
2022-08-11 21:48:29,970:INFO:Importing libraries
2022-08-11 21:48:29,970:INFO:Copying training dataset
2022-08-11 21:48:29,978:INFO:Defining folds
2022-08-11 21:48:29,978:INFO:Declaring metric variables
2022-08-11 21:48:29,982:INFO:Importing untrained model
2022-08-11 21:48:29,984:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:48:29,989:INFO:Starting cross validation
2022-08-11 21:48:29,990:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:30,101:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,153:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,158:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,187:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,198:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:30,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:31,463:INFO:Calculating mean and std
2022-08-11 21:48:31,464:INFO:Creating metrics dataframe
2022-08-11 21:48:31,466:INFO:Uploading results into container
2022-08-11 21:48:31,466:INFO:Uploading model into container now
2022-08-11 21:48:31,466:INFO:master_model_container: 11
2022-08-11 21:48:31,466:INFO:display_container: 2
2022-08-11 21:48:31,467:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:48:31,467:INFO:create_model() successfully completed......................................
2022-08-11 21:48:31,570:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:31,571:INFO:Creating metrics dataframe
2022-08-11 21:48:31,578:INFO:Initializing Decision Tree Regressor
2022-08-11 21:48:31,579:INFO:Total runtime is 0.14598344961802162 minutes
2022-08-11 21:48:31,581:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:31,581:INFO:Initializing create_model()
2022-08-11 21:48:31,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:31,581:INFO:Checking exceptions
2022-08-11 21:48:31,586:INFO:Importing libraries
2022-08-11 21:48:31,586:INFO:Copying training dataset
2022-08-11 21:48:31,594:INFO:Defining folds
2022-08-11 21:48:31,594:INFO:Declaring metric variables
2022-08-11 21:48:31,596:INFO:Importing untrained model
2022-08-11 21:48:31,598:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:48:31,603:INFO:Starting cross validation
2022-08-11 21:48:31,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:48:33,032:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,034:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,064:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,107:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,189:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:48:33,308:INFO:Calculating mean and std
2022-08-11 21:48:33,309:INFO:Creating metrics dataframe
2022-08-11 21:48:33,311:INFO:Uploading results into container
2022-08-11 21:48:33,311:INFO:Uploading model into container now
2022-08-11 21:48:33,311:INFO:master_model_container: 12
2022-08-11 21:48:33,312:INFO:display_container: 2
2022-08-11 21:48:33,312:INFO:DecisionTreeRegressor(random_state=581)
2022-08-11 21:48:33,312:INFO:create_model() successfully completed......................................
2022-08-11 21:48:33,413:INFO:SubProcess create_model() end ==================================
2022-08-11 21:48:33,413:INFO:Creating metrics dataframe
2022-08-11 21:48:33,420:INFO:Initializing Random Forest Regressor
2022-08-11 21:48:33,420:INFO:Total runtime is 0.17667375008265174 minutes
2022-08-11 21:48:33,423:INFO:SubProcess create_model() called ==================================
2022-08-11 21:48:33,423:INFO:Initializing create_model()
2022-08-11 21:48:33,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:48:33,423:INFO:Checking exceptions
2022-08-11 21:48:33,427:INFO:Importing libraries
2022-08-11 21:48:33,427:INFO:Copying training dataset
2022-08-11 21:48:33,435:INFO:Defining folds
2022-08-11 21:48:33,435:INFO:Declaring metric variables
2022-08-11 21:48:33,438:INFO:Importing untrained model
2022-08-11 21:48:33,446:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:48:33,454:INFO:Starting cross validation
2022-08-11 21:48:33,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:50:00,874:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:00,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,024:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,045:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,101:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,183:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,213:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,294:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,334:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:01,477:INFO:Calculating mean and std
2022-08-11 21:50:01,479:INFO:Creating metrics dataframe
2022-08-11 21:50:01,481:INFO:Uploading results into container
2022-08-11 21:50:01,481:INFO:Uploading model into container now
2022-08-11 21:50:01,482:INFO:master_model_container: 13
2022-08-11 21:50:01,482:INFO:display_container: 2
2022-08-11 21:50:01,482:INFO:RandomForestRegressor(n_jobs=-1, random_state=581)
2022-08-11 21:50:01,482:INFO:create_model() successfully completed......................................
2022-08-11 21:50:01,587:INFO:SubProcess create_model() end ==================================
2022-08-11 21:50:01,587:INFO:Creating metrics dataframe
2022-08-11 21:50:01,597:INFO:Initializing Extra Trees Regressor
2022-08-11 21:50:01,597:INFO:Total runtime is 1.6462875684102376 minutes
2022-08-11 21:50:01,599:INFO:SubProcess create_model() called ==================================
2022-08-11 21:50:01,599:INFO:Initializing create_model()
2022-08-11 21:50:01,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:50:01,600:INFO:Checking exceptions
2022-08-11 21:50:01,605:INFO:Importing libraries
2022-08-11 21:50:01,605:INFO:Copying training dataset
2022-08-11 21:50:01,614:INFO:Defining folds
2022-08-11 21:50:01,614:INFO:Declaring metric variables
2022-08-11 21:50:01,617:INFO:Importing untrained model
2022-08-11 21:50:01,620:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:50:01,625:INFO:Starting cross validation
2022-08-11 21:50:01,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:50:31,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:32,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:32,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:32,588:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:32,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:34,880:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:35,119:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:35,386:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:35,513:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:35,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:36,526:INFO:Calculating mean and std
2022-08-11 21:50:36,528:INFO:Creating metrics dataframe
2022-08-11 21:50:36,530:INFO:Uploading results into container
2022-08-11 21:50:36,531:INFO:Uploading model into container now
2022-08-11 21:50:36,531:INFO:master_model_container: 14
2022-08-11 21:50:36,531:INFO:display_container: 2
2022-08-11 21:50:36,532:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=581)
2022-08-11 21:50:36,532:INFO:create_model() successfully completed......................................
2022-08-11 21:50:36,639:INFO:SubProcess create_model() end ==================================
2022-08-11 21:50:36,639:INFO:Creating metrics dataframe
2022-08-11 21:50:36,647:INFO:Initializing AdaBoost Regressor
2022-08-11 21:50:36,647:INFO:Total runtime is 2.2304530143737793 minutes
2022-08-11 21:50:36,649:INFO:SubProcess create_model() called ==================================
2022-08-11 21:50:36,650:INFO:Initializing create_model()
2022-08-11 21:50:36,650:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:50:36,650:INFO:Checking exceptions
2022-08-11 21:50:36,656:INFO:Importing libraries
2022-08-11 21:50:36,656:INFO:Copying training dataset
2022-08-11 21:50:36,664:INFO:Defining folds
2022-08-11 21:50:36,665:INFO:Declaring metric variables
2022-08-11 21:50:36,673:INFO:Importing untrained model
2022-08-11 21:50:36,678:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:50:36,684:INFO:Starting cross validation
2022-08-11 21:50:36,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:50:43,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:44,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,679:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,679:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,714:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,781:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:50:45,911:INFO:Calculating mean and std
2022-08-11 21:50:45,914:INFO:Creating metrics dataframe
2022-08-11 21:50:45,917:INFO:Uploading results into container
2022-08-11 21:50:45,918:INFO:Uploading model into container now
2022-08-11 21:50:45,919:INFO:master_model_container: 15
2022-08-11 21:50:45,919:INFO:display_container: 2
2022-08-11 21:50:45,919:INFO:AdaBoostRegressor(random_state=581)
2022-08-11 21:50:45,919:INFO:create_model() successfully completed......................................
2022-08-11 21:50:46,049:INFO:SubProcess create_model() end ==================================
2022-08-11 21:50:46,049:INFO:Creating metrics dataframe
2022-08-11 21:50:46,057:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:50:46,058:INFO:Total runtime is 2.387297316392263 minutes
2022-08-11 21:50:46,060:INFO:SubProcess create_model() called ==================================
2022-08-11 21:50:46,061:INFO:Initializing create_model()
2022-08-11 21:50:46,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:50:46,061:INFO:Checking exceptions
2022-08-11 21:50:46,072:INFO:Importing libraries
2022-08-11 21:50:46,073:INFO:Copying training dataset
2022-08-11 21:50:46,089:INFO:Defining folds
2022-08-11 21:50:46,089:INFO:Declaring metric variables
2022-08-11 21:50:46,093:INFO:Importing untrained model
2022-08-11 21:50:46,095:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:50:46,099:INFO:Starting cross validation
2022-08-11 21:50:46,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:51:05,195:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,210:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,265:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,295:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,345:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,349:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,353:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,371:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:05,494:INFO:Calculating mean and std
2022-08-11 21:51:05,495:INFO:Creating metrics dataframe
2022-08-11 21:51:05,497:INFO:Uploading results into container
2022-08-11 21:51:05,497:INFO:Uploading model into container now
2022-08-11 21:51:05,498:INFO:master_model_container: 16
2022-08-11 21:51:05,498:INFO:display_container: 2
2022-08-11 21:51:05,498:INFO:GradientBoostingRegressor(random_state=581)
2022-08-11 21:51:05,498:INFO:create_model() successfully completed......................................
2022-08-11 21:51:05,601:INFO:SubProcess create_model() end ==================================
2022-08-11 21:51:05,601:INFO:Creating metrics dataframe
2022-08-11 21:51:05,610:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:51:05,610:INFO:Total runtime is 2.713179298241933 minutes
2022-08-11 21:51:05,613:INFO:SubProcess create_model() called ==================================
2022-08-11 21:51:05,613:INFO:Initializing create_model()
2022-08-11 21:51:05,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:51:05,613:INFO:Checking exceptions
2022-08-11 21:51:05,623:INFO:Importing libraries
2022-08-11 21:51:05,623:INFO:Copying training dataset
2022-08-11 21:51:05,636:INFO:Defining folds
2022-08-11 21:51:05,636:INFO:Declaring metric variables
2022-08-11 21:51:05,639:INFO:Importing untrained model
2022-08-11 21:51:05,642:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:51:05,646:INFO:Starting cross validation
2022-08-11 21:51:05,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:51:17,790:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:17,931:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:17,934:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:17,966:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:17,977:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:17,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:17,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:18,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:18,044:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:18,059:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:18,190:INFO:Calculating mean and std
2022-08-11 21:51:18,191:INFO:Creating metrics dataframe
2022-08-11 21:51:18,193:INFO:Uploading results into container
2022-08-11 21:51:18,194:INFO:Uploading model into container now
2022-08-11 21:51:18,194:INFO:master_model_container: 17
2022-08-11 21:51:18,194:INFO:display_container: 2
2022-08-11 21:51:18,195:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=581,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:51:18,195:INFO:create_model() successfully completed......................................
2022-08-11 21:51:18,297:INFO:SubProcess create_model() end ==================================
2022-08-11 21:51:18,298:INFO:Creating metrics dataframe
2022-08-11 21:51:18,308:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:51:18,308:INFO:Total runtime is 2.924804699420929 minutes
2022-08-11 21:51:18,310:INFO:SubProcess create_model() called ==================================
2022-08-11 21:51:18,311:INFO:Initializing create_model()
2022-08-11 21:51:18,311:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:51:18,311:INFO:Checking exceptions
2022-08-11 21:51:18,318:INFO:Importing libraries
2022-08-11 21:51:18,318:INFO:Copying training dataset
2022-08-11 21:51:18,328:INFO:Defining folds
2022-08-11 21:51:18,328:INFO:Declaring metric variables
2022-08-11 21:51:18,331:INFO:Importing untrained model
2022-08-11 21:51:18,335:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:51:18,340:INFO:Starting cross validation
2022-08-11 21:51:18,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:51:19,055:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,084:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,106:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,106:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,117:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,152:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,188:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,210:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,228:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,362:INFO:Calculating mean and std
2022-08-11 21:51:19,364:INFO:Creating metrics dataframe
2022-08-11 21:51:19,366:INFO:Uploading results into container
2022-08-11 21:51:19,366:INFO:Uploading model into container now
2022-08-11 21:51:19,367:INFO:master_model_container: 18
2022-08-11 21:51:19,367:INFO:display_container: 2
2022-08-11 21:51:19,367:INFO:LGBMRegressor(random_state=581)
2022-08-11 21:51:19,367:INFO:create_model() successfully completed......................................
2022-08-11 21:51:19,471:INFO:SubProcess create_model() end ==================================
2022-08-11 21:51:19,471:INFO:Creating metrics dataframe
2022-08-11 21:51:19,479:INFO:Initializing Dummy Regressor
2022-08-11 21:51:19,479:INFO:Total runtime is 2.944328884283702 minutes
2022-08-11 21:51:19,481:INFO:SubProcess create_model() called ==================================
2022-08-11 21:51:19,482:INFO:Initializing create_model()
2022-08-11 21:51:19,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9976d30>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:51:19,482:INFO:Checking exceptions
2022-08-11 21:51:19,487:INFO:Importing libraries
2022-08-11 21:51:19,487:INFO:Copying training dataset
2022-08-11 21:51:19,496:INFO:Defining folds
2022-08-11 21:51:19,496:INFO:Declaring metric variables
2022-08-11 21:51:19,498:INFO:Importing untrained model
2022-08-11 21:51:19,501:INFO:Dummy Regressor Imported successfully
2022-08-11 21:51:19,507:INFO:Starting cross validation
2022-08-11 21:51:19,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:51:19,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,634:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,639:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,647:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,650:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,653:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,654:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,684:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:51:19,802:INFO:Calculating mean and std
2022-08-11 21:51:19,803:INFO:Creating metrics dataframe
2022-08-11 21:51:19,805:INFO:Uploading results into container
2022-08-11 21:51:19,805:INFO:Uploading model into container now
2022-08-11 21:51:19,806:INFO:master_model_container: 19
2022-08-11 21:51:19,806:INFO:display_container: 2
2022-08-11 21:51:19,806:INFO:DummyRegressor()
2022-08-11 21:51:19,806:INFO:create_model() successfully completed......................................
2022-08-11 21:51:19,909:INFO:SubProcess create_model() end ==================================
2022-08-11 21:51:19,909:INFO:Creating metrics dataframe
2022-08-11 21:51:19,925:INFO:Initializing create_model()
2022-08-11 21:51:19,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=581), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:51:19,925:INFO:Checking exceptions
2022-08-11 21:51:19,932:INFO:Importing libraries
2022-08-11 21:51:19,932:INFO:Copying training dataset
2022-08-11 21:51:19,939:INFO:Defining folds
2022-08-11 21:51:19,939:INFO:Declaring metric variables
2022-08-11 21:51:19,940:INFO:Importing untrained model
2022-08-11 21:51:19,940:INFO:Declaring custom model
2022-08-11 21:51:19,940:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:51:19,941:INFO:Cross validation set to False
2022-08-11 21:51:19,941:INFO:Fitting Model
2022-08-11 21:51:30,840:INFO:RandomForestRegressor(n_jobs=-1, random_state=581)
2022-08-11 21:51:30,840:INFO:create_model() successfully completed......................................
2022-08-11 21:51:30,962:INFO:master_model_container: 19
2022-08-11 21:51:30,962:INFO:display_container: 2
2022-08-11 21:51:30,963:INFO:RandomForestRegressor(n_jobs=-1, random_state=581)
2022-08-11 21:51:30,963:INFO:compare_models() successfully completed......................................
2022-08-11 21:52:10,653:INFO:Initializing create_model()
2022-08-11 21:52:10,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:52:10,654:INFO:Checking exceptions
2022-08-11 21:52:10,693:INFO:Importing libraries
2022-08-11 21:52:10,693:INFO:Copying training dataset
2022-08-11 21:52:10,710:INFO:Defining folds
2022-08-11 21:52:10,710:INFO:Declaring metric variables
2022-08-11 21:52:10,713:INFO:Importing untrained model
2022-08-11 21:52:10,716:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:52:10,722:INFO:Starting cross validation
2022-08-11 21:52:10,724:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:53:38,465:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,482:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,657:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,747:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,786:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,859:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:38,874:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:53:39,022:INFO:Calculating mean and std
2022-08-11 21:53:39,024:INFO:Creating metrics dataframe
2022-08-11 21:53:39,027:INFO:Finalizing model
2022-08-11 21:53:49,266:INFO:Uploading results into container
2022-08-11 21:53:49,266:INFO:Uploading model into container now
2022-08-11 21:53:49,273:INFO:master_model_container: 20
2022-08-11 21:53:49,274:INFO:display_container: 3
2022-08-11 21:53:49,274:INFO:RandomForestRegressor(n_jobs=-1, random_state=581)
2022-08-11 21:53:49,274:INFO:create_model() successfully completed......................................
2022-08-11 21:53:49,380:INFO:Initializing finalize_model()
2022-08-11 21:53:49,380:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=581), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:53:49,381:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=581)
2022-08-11 21:53:49,403:INFO:Initializing create_model()
2022-08-11 21:53:49,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=RandomForestRegressor(n_jobs=-1, random_state=581), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:53:49,404:INFO:Checking exceptions
2022-08-11 21:53:49,405:INFO:Importing libraries
2022-08-11 21:53:49,405:INFO:Copying training dataset
2022-08-11 21:53:49,410:INFO:Defining folds
2022-08-11 21:53:49,411:INFO:Declaring metric variables
2022-08-11 21:53:49,411:INFO:Importing untrained model
2022-08-11 21:53:49,411:INFO:Declaring custom model
2022-08-11 21:53:49,411:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:53:49,412:INFO:Cross validation set to False
2022-08-11 21:53:49,412:INFO:Fitting Model
2022-08-11 21:54:04,809:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=581))])
2022-08-11 21:54:04,809:INFO:create_model() successfully completed......................................
2022-08-11 21:54:04,916:INFO:Initializing predict_model()
2022-08-11 21:54:04,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=581))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec09c9430>)
2022-08-11 21:54:04,916:INFO:Checking exceptions
2022-08-11 21:54:04,916:INFO:Preloading libraries
2022-08-11 21:54:05,199:INFO:Set up data.
2022-08-11 21:54:05,517:INFO:display_container: 4
2022-08-11 21:54:05,517:INFO:master_model_container: 20
2022-08-11 21:54:05,517:INFO:display_container: 4
2022-08-11 21:54:05,521:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=581))])
2022-08-11 21:54:05,521:INFO:finalize_model() successfully completed......................................
2022-08-11 21:54:05,628:INFO:Initializing predict_model()
2022-08-11 21:54:05,628:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ece219850>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=581))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e3980be50>)
2022-08-11 21:54:05,628:INFO:Checking exceptions
2022-08-11 21:54:05,628:INFO:Preloading libraries
2022-08-11 21:54:05,874:INFO:Set up data.
2022-08-11 21:54:06,467:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/1844309534.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_07'] = predict_model(model_y07, data=test_df)['prediction_label']

2022-08-11 21:54:06,473:INFO:PyCaret RegressionExperiment
2022-08-11 21:54:06,473:INFO:Logging name: reg-default-name
2022-08-11 21:54:06,473:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 21:54:06,473:INFO:version 3.0.0.rc3
2022-08-11 21:54:06,473:INFO:Initializing setup()
2022-08-11 21:54:06,473:INFO:self.USI: e471
2022-08-11 21:54:06,473:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 21:54:06,473:INFO:Checking environment
2022-08-11 21:54:06,473:INFO:python_version: 3.8.8
2022-08-11 21:54:06,473:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 21:54:06,473:INFO:machine: x86_64
2022-08-11 21:54:06,473:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:54:06,473:INFO:Memory: svmem(total=34359738368, available=4044369920, percent=88.2, used=4377042944, free=109543424, active=3939446784, inactive=3901235200, wired=437596160)
2022-08-11 21:54:06,473:INFO:Physical Core: 10
2022-08-11 21:54:06,473:INFO:Logical Core: 10
2022-08-11 21:54:06,473:INFO:Checking libraries
2022-08-11 21:54:06,473:INFO:System:
2022-08-11 21:54:06,473:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 21:54:06,473:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 21:54:06,473:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 21:54:06,473:INFO:PyCaret required dependencies:
2022-08-11 21:54:06,474:INFO:                 pip: 22.1.2
2022-08-11 21:54:06,474:INFO:          setuptools: 61.2.0
2022-08-11 21:54:06,474:INFO:             pycaret: 3.0.0rc3
2022-08-11 21:54:06,474:INFO:             IPython: 8.4.0
2022-08-11 21:54:06,474:INFO:          ipywidgets: 7.6.5
2022-08-11 21:54:06,474:INFO:                tqdm: 4.64.0
2022-08-11 21:54:06,474:INFO:               numpy: 1.22.4
2022-08-11 21:54:06,474:INFO:              pandas: 1.4.3
2022-08-11 21:54:06,474:INFO:              jinja2: 3.0.3
2022-08-11 21:54:06,474:INFO:               scipy: 1.5.4
2022-08-11 21:54:06,474:INFO:              joblib: 1.1.0
2022-08-11 21:54:06,474:INFO:             sklearn: 1.1.1
2022-08-11 21:54:06,474:INFO:                pyod: 1.0.4
2022-08-11 21:54:06,474:INFO:            imblearn: 0.9.1
2022-08-11 21:54:06,474:INFO:   category_encoders: 2.5.0
2022-08-11 21:54:06,474:INFO:            lightgbm: 3.2.1
2022-08-11 21:54:06,474:INFO:               numba: 0.55.2
2022-08-11 21:54:06,474:INFO:            requests: 2.28.1
2022-08-11 21:54:06,474:INFO:          matplotlib: 3.5.1
2022-08-11 21:54:06,474:INFO:          scikitplot: 0.3.7
2022-08-11 21:54:06,474:INFO:         yellowbrick: 1.4
2022-08-11 21:54:06,474:INFO:              plotly: 5.9.0
2022-08-11 21:54:06,474:INFO:             kaleido: 0.2.1
2022-08-11 21:54:06,474:INFO:         statsmodels: 0.13.2
2022-08-11 21:54:06,474:INFO:              sktime: 0.13.0
2022-08-11 21:54:06,474:INFO:               tbats: 1.1.0
2022-08-11 21:54:06,474:INFO:            pmdarima: 1.8.5
2022-08-11 21:54:06,474:INFO:              psutil: 5.9.1
2022-08-11 21:54:06,474:INFO:PyCaret optional dependencies:
2022-08-11 21:54:06,474:INFO:                shap: Not installed
2022-08-11 21:54:06,474:INFO:           interpret: Not installed
2022-08-11 21:54:06,474:INFO:                umap: 0.5.3
2022-08-11 21:54:06,474:INFO:    pandas_profiling: 2.9.0
2022-08-11 21:54:06,474:INFO:  explainerdashboard: Not installed
2022-08-11 21:54:06,474:INFO:             autoviz: Not installed
2022-08-11 21:54:06,475:INFO:           fairlearn: Not installed
2022-08-11 21:54:06,475:INFO:             xgboost: 1.6.1
2022-08-11 21:54:06,475:INFO:            catboost: Not installed
2022-08-11 21:54:06,475:INFO:              kmodes: 0.12.1
2022-08-11 21:54:06,475:INFO:             mlxtend: 0.19.0
2022-08-11 21:54:06,475:INFO:       statsforecast: Not installed
2022-08-11 21:54:06,475:INFO:        tune_sklearn: Not installed
2022-08-11 21:54:06,475:INFO:                 ray: Not installed
2022-08-11 21:54:06,475:INFO:            hyperopt: Not installed
2022-08-11 21:54:06,475:INFO:              optuna: Not installed
2022-08-11 21:54:06,475:INFO:               skopt: Not installed
2022-08-11 21:54:06,475:INFO:              mlflow: 1.27.0
2022-08-11 21:54:06,475:INFO:              gradio: Not installed
2022-08-11 21:54:06,475:INFO:             fastapi: Not installed
2022-08-11 21:54:06,475:INFO:             uvicorn: Not installed
2022-08-11 21:54:06,475:INFO:              m2cgen: Not installed
2022-08-11 21:54:06,475:INFO:           evidently: Not installed
2022-08-11 21:54:06,475:INFO:                nltk: 3.7
2022-08-11 21:54:06,475:INFO:            pyLDAvis: 3.2.2
2022-08-11 21:54:06,475:INFO:              gensim: 3.8.3
2022-08-11 21:54:06,475:INFO:               spacy: 2.3.7
2022-08-11 21:54:06,475:INFO:           wordcloud: 1.8.2.2
2022-08-11 21:54:06,475:INFO:            textblob: 0.17.1
2022-08-11 21:54:06,475:INFO:               fugue: Not installed
2022-08-11 21:54:06,475:INFO:           streamlit: Not installed
2022-08-11 21:54:06,475:INFO:             prophet: Not installed
2022-08-11 21:54:06,475:INFO:None
2022-08-11 21:54:06,475:INFO:Set up data.
2022-08-11 21:54:06,509:INFO:Set up train/test split.
2022-08-11 21:54:06,528:INFO:Set up folding strategy.
2022-08-11 21:54:06,528:INFO:Assigning column types.
2022-08-11 21:54:06,535:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 21:54:06,535:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,539:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,543:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,640:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,640:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:06,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:06,643:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,647:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,651:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,750:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:06,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:06,753:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 21:54:06,757:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,818:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,858:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:06,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:06,865:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,869:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:06,966:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:06,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:06,969:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 21:54:06,977:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,035:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,075:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,077:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,087:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,184:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,186:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 21:54:07,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,290:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,396:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,399:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 21:54:07,463:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,503:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,573:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 21:54:07,613:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,615:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 21:54:07,719:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,827:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:07,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:07,830:INFO:Preparing preprocessing pipeline...
2022-08-11 21:54:07,831:INFO:Set up simple imputation.
2022-08-11 21:54:07,831:INFO:Set up variance threshold.
2022-08-11 21:54:07,999:INFO:Finished creating preprocessing pipeline.
2022-08-11 21:54:08,002:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 21:54:08,002:INFO:Creating final display dataframe.
2022-08-11 21:54:08,674:INFO:Setup display_container:                Description             Value
0               Session id              3444
1                   Target              Y_06
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              e471
2022-08-11 21:54:08,785:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:08,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:08,890:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 21:54:08,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 21:54:08,908:INFO:setup() successfully completed in 2.44s...............
2022-08-11 21:54:08,911:INFO:Initializing compare_models()
2022-08-11 21:54:08,912:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 21:54:08,912:INFO:Checking exceptions
2022-08-11 21:54:08,919:INFO:Preparing display monitor
2022-08-11 21:54:08,945:INFO:Initializing Linear Regression
2022-08-11 21:54:08,945:INFO:Total runtime is 3.520647684733073e-06 minutes
2022-08-11 21:54:08,948:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:08,949:INFO:Initializing create_model()
2022-08-11 21:54:08,949:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:08,949:INFO:Checking exceptions
2022-08-11 21:54:08,955:INFO:Importing libraries
2022-08-11 21:54:08,956:INFO:Copying training dataset
2022-08-11 21:54:08,970:INFO:Defining folds
2022-08-11 21:54:08,970:INFO:Declaring metric variables
2022-08-11 21:54:08,973:INFO:Importing untrained model
2022-08-11 21:54:08,976:INFO:Linear Regression Imported successfully
2022-08-11 21:54:08,980:INFO:Starting cross validation
2022-08-11 21:54:08,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:09,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,703:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,707:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,711:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,748:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,758:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,759:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,774:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,809:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:09,860:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,097:INFO:Calculating mean and std
2022-08-11 21:54:10,098:INFO:Creating metrics dataframe
2022-08-11 21:54:10,100:INFO:Uploading results into container
2022-08-11 21:54:10,101:INFO:Uploading model into container now
2022-08-11 21:54:10,101:INFO:master_model_container: 1
2022-08-11 21:54:10,101:INFO:display_container: 2
2022-08-11 21:54:10,101:INFO:LinearRegression(n_jobs=-1)
2022-08-11 21:54:10,101:INFO:create_model() successfully completed......................................
2022-08-11 21:54:10,212:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:10,212:INFO:Creating metrics dataframe
2022-08-11 21:54:10,219:INFO:Initializing Lasso Regression
2022-08-11 21:54:10,219:INFO:Total runtime is 0.021226767698923746 minutes
2022-08-11 21:54:10,222:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:10,222:INFO:Initializing create_model()
2022-08-11 21:54:10,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:10,222:INFO:Checking exceptions
2022-08-11 21:54:10,230:INFO:Importing libraries
2022-08-11 21:54:10,230:INFO:Copying training dataset
2022-08-11 21:54:10,242:INFO:Defining folds
2022-08-11 21:54:10,242:INFO:Declaring metric variables
2022-08-11 21:54:10,245:INFO:Importing untrained model
2022-08-11 21:54:10,248:INFO:Lasso Regression Imported successfully
2022-08-11 21:54:10,253:INFO:Starting cross validation
2022-08-11 21:54:10,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:10,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,411:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,420:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,420:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,447:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,571:INFO:Calculating mean and std
2022-08-11 21:54:10,573:INFO:Creating metrics dataframe
2022-08-11 21:54:10,576:INFO:Uploading results into container
2022-08-11 21:54:10,576:INFO:Uploading model into container now
2022-08-11 21:54:10,576:INFO:master_model_container: 2
2022-08-11 21:54:10,576:INFO:display_container: 2
2022-08-11 21:54:10,576:INFO:Lasso(random_state=3444)
2022-08-11 21:54:10,576:INFO:create_model() successfully completed......................................
2022-08-11 21:54:10,682:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:10,683:INFO:Creating metrics dataframe
2022-08-11 21:54:10,688:INFO:Initializing Ridge Regression
2022-08-11 21:54:10,688:INFO:Total runtime is 0.02905440330505371 minutes
2022-08-11 21:54:10,690:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:10,691:INFO:Initializing create_model()
2022-08-11 21:54:10,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:10,691:INFO:Checking exceptions
2022-08-11 21:54:10,697:INFO:Importing libraries
2022-08-11 21:54:10,697:INFO:Copying training dataset
2022-08-11 21:54:10,705:INFO:Defining folds
2022-08-11 21:54:10,705:INFO:Declaring metric variables
2022-08-11 21:54:10,708:INFO:Importing untrained model
2022-08-11 21:54:10,711:INFO:Ridge Regression Imported successfully
2022-08-11 21:54:10,716:INFO:Starting cross validation
2022-08-11 21:54:10,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:10,845:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,851:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,855:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,856:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,861:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:10,914:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,032:INFO:Calculating mean and std
2022-08-11 21:54:11,034:INFO:Creating metrics dataframe
2022-08-11 21:54:11,036:INFO:Uploading results into container
2022-08-11 21:54:11,036:INFO:Uploading model into container now
2022-08-11 21:54:11,037:INFO:master_model_container: 3
2022-08-11 21:54:11,037:INFO:display_container: 2
2022-08-11 21:54:11,037:INFO:Ridge(random_state=3444)
2022-08-11 21:54:11,037:INFO:create_model() successfully completed......................................
2022-08-11 21:54:11,140:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:11,140:INFO:Creating metrics dataframe
2022-08-11 21:54:11,146:INFO:Initializing Elastic Net
2022-08-11 21:54:11,146:INFO:Total runtime is 0.03668676614761353 minutes
2022-08-11 21:54:11,148:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:11,149:INFO:Initializing create_model()
2022-08-11 21:54:11,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:11,149:INFO:Checking exceptions
2022-08-11 21:54:11,157:INFO:Importing libraries
2022-08-11 21:54:11,157:INFO:Copying training dataset
2022-08-11 21:54:11,165:INFO:Defining folds
2022-08-11 21:54:11,165:INFO:Declaring metric variables
2022-08-11 21:54:11,168:INFO:Importing untrained model
2022-08-11 21:54:11,171:INFO:Elastic Net Imported successfully
2022-08-11 21:54:11,176:INFO:Starting cross validation
2022-08-11 21:54:11,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:11,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,309:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,319:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,315:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,310:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,339:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,398:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,517:INFO:Calculating mean and std
2022-08-11 21:54:11,519:INFO:Creating metrics dataframe
2022-08-11 21:54:11,521:INFO:Uploading results into container
2022-08-11 21:54:11,522:INFO:Uploading model into container now
2022-08-11 21:54:11,522:INFO:master_model_container: 4
2022-08-11 21:54:11,522:INFO:display_container: 2
2022-08-11 21:54:11,522:INFO:ElasticNet(random_state=3444)
2022-08-11 21:54:11,522:INFO:create_model() successfully completed......................................
2022-08-11 21:54:11,626:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:11,626:INFO:Creating metrics dataframe
2022-08-11 21:54:11,632:INFO:Initializing Least Angle Regression
2022-08-11 21:54:11,633:INFO:Total runtime is 0.044788920879364015 minutes
2022-08-11 21:54:11,635:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:11,635:INFO:Initializing create_model()
2022-08-11 21:54:11,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:11,636:INFO:Checking exceptions
2022-08-11 21:54:11,640:INFO:Importing libraries
2022-08-11 21:54:11,641:INFO:Copying training dataset
2022-08-11 21:54:11,649:INFO:Defining folds
2022-08-11 21:54:11,649:INFO:Declaring metric variables
2022-08-11 21:54:11,652:INFO:Importing untrained model
2022-08-11 21:54:11,655:INFO:Least Angle Regression Imported successfully
2022-08-11 21:54:11,659:INFO:Starting cross validation
2022-08-11 21:54:11,660:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:11,781:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,783:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,784:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,785:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,788:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,790:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,799:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,800:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,807:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,815:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,816:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,826:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,826:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,831:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:11,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,852:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:11,966:INFO:Calculating mean and std
2022-08-11 21:54:11,967:INFO:Creating metrics dataframe
2022-08-11 21:54:11,969:INFO:Uploading results into container
2022-08-11 21:54:11,970:INFO:Uploading model into container now
2022-08-11 21:54:11,970:INFO:master_model_container: 5
2022-08-11 21:54:11,970:INFO:display_container: 2
2022-08-11 21:54:11,970:INFO:Lars(random_state=3444)
2022-08-11 21:54:11,970:INFO:create_model() successfully completed......................................
2022-08-11 21:54:12,074:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:12,074:INFO:Creating metrics dataframe
2022-08-11 21:54:12,080:INFO:Initializing Lasso Least Angle Regression
2022-08-11 21:54:12,081:INFO:Total runtime is 0.05225748618443807 minutes
2022-08-11 21:54:12,083:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:12,083:INFO:Initializing create_model()
2022-08-11 21:54:12,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:12,083:INFO:Checking exceptions
2022-08-11 21:54:12,088:INFO:Importing libraries
2022-08-11 21:54:12,088:INFO:Copying training dataset
2022-08-11 21:54:12,097:INFO:Defining folds
2022-08-11 21:54:12,097:INFO:Declaring metric variables
2022-08-11 21:54:12,100:INFO:Importing untrained model
2022-08-11 21:54:12,102:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 21:54:12,107:INFO:Starting cross validation
2022-08-11 21:54:12,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:12,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,226:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,230:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,234:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,234:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,239:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,241:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,241:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,262:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,272:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,280:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,293:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,325:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 21:54:12,335:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,450:INFO:Calculating mean and std
2022-08-11 21:54:12,451:INFO:Creating metrics dataframe
2022-08-11 21:54:12,453:INFO:Uploading results into container
2022-08-11 21:54:12,454:INFO:Uploading model into container now
2022-08-11 21:54:12,454:INFO:master_model_container: 6
2022-08-11 21:54:12,454:INFO:display_container: 2
2022-08-11 21:54:12,455:INFO:LassoLars(random_state=3444)
2022-08-11 21:54:12,455:INFO:create_model() successfully completed......................................
2022-08-11 21:54:12,558:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:12,558:INFO:Creating metrics dataframe
2022-08-11 21:54:12,564:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 21:54:12,564:INFO:Total runtime is 0.06031925280888875 minutes
2022-08-11 21:54:12,567:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:12,567:INFO:Initializing create_model()
2022-08-11 21:54:12,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:12,568:INFO:Checking exceptions
2022-08-11 21:54:12,572:INFO:Importing libraries
2022-08-11 21:54:12,572:INFO:Copying training dataset
2022-08-11 21:54:12,581:INFO:Defining folds
2022-08-11 21:54:12,581:INFO:Declaring metric variables
2022-08-11 21:54:12,583:INFO:Importing untrained model
2022-08-11 21:54:12,586:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 21:54:12,591:INFO:Starting cross validation
2022-08-11 21:54:12,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:12,707:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,708:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,711:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,722:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,725:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,726:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,726:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,726:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,736:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,747:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,747:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,753:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,785:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 21:54:12,796:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:12,910:INFO:Calculating mean and std
2022-08-11 21:54:12,912:INFO:Creating metrics dataframe
2022-08-11 21:54:12,915:INFO:Uploading results into container
2022-08-11 21:54:12,915:INFO:Uploading model into container now
2022-08-11 21:54:12,916:INFO:master_model_container: 7
2022-08-11 21:54:12,916:INFO:display_container: 2
2022-08-11 21:54:12,916:INFO:OrthogonalMatchingPursuit()
2022-08-11 21:54:12,916:INFO:create_model() successfully completed......................................
2022-08-11 21:54:13,018:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:13,019:INFO:Creating metrics dataframe
2022-08-11 21:54:13,025:INFO:Initializing Bayesian Ridge
2022-08-11 21:54:13,025:INFO:Total runtime is 0.06799715360005697 minutes
2022-08-11 21:54:13,027:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:13,028:INFO:Initializing create_model()
2022-08-11 21:54:13,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:13,028:INFO:Checking exceptions
2022-08-11 21:54:13,034:INFO:Importing libraries
2022-08-11 21:54:13,034:INFO:Copying training dataset
2022-08-11 21:54:13,043:INFO:Defining folds
2022-08-11 21:54:13,044:INFO:Declaring metric variables
2022-08-11 21:54:13,047:INFO:Importing untrained model
2022-08-11 21:54:13,049:INFO:Bayesian Ridge Imported successfully
2022-08-11 21:54:13,054:INFO:Starting cross validation
2022-08-11 21:54:13,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:13,427:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,458:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,459:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,469:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,472:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,472:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,500:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,620:INFO:Calculating mean and std
2022-08-11 21:54:13,621:INFO:Creating metrics dataframe
2022-08-11 21:54:13,623:INFO:Uploading results into container
2022-08-11 21:54:13,623:INFO:Uploading model into container now
2022-08-11 21:54:13,624:INFO:master_model_container: 8
2022-08-11 21:54:13,624:INFO:display_container: 2
2022-08-11 21:54:13,624:INFO:BayesianRidge()
2022-08-11 21:54:13,624:INFO:create_model() successfully completed......................................
2022-08-11 21:54:13,729:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:13,729:INFO:Creating metrics dataframe
2022-08-11 21:54:13,736:INFO:Initializing Passive Aggressive Regressor
2022-08-11 21:54:13,736:INFO:Total runtime is 0.07985171874364218 minutes
2022-08-11 21:54:13,738:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:13,739:INFO:Initializing create_model()
2022-08-11 21:54:13,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:13,739:INFO:Checking exceptions
2022-08-11 21:54:13,743:INFO:Importing libraries
2022-08-11 21:54:13,743:INFO:Copying training dataset
2022-08-11 21:54:13,753:INFO:Defining folds
2022-08-11 21:54:13,753:INFO:Declaring metric variables
2022-08-11 21:54:13,755:INFO:Importing untrained model
2022-08-11 21:54:13,758:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 21:54:13,763:INFO:Starting cross validation
2022-08-11 21:54:13,764:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:13,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:13,990:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,003:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,015:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,015:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,015:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,028:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,045:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,048:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,168:INFO:Calculating mean and std
2022-08-11 21:54:14,169:INFO:Creating metrics dataframe
2022-08-11 21:54:14,171:INFO:Uploading results into container
2022-08-11 21:54:14,171:INFO:Uploading model into container now
2022-08-11 21:54:14,171:INFO:master_model_container: 9
2022-08-11 21:54:14,172:INFO:display_container: 2
2022-08-11 21:54:14,172:INFO:PassiveAggressiveRegressor(random_state=3444)
2022-08-11 21:54:14,172:INFO:create_model() successfully completed......................................
2022-08-11 21:54:14,274:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:14,274:INFO:Creating metrics dataframe
2022-08-11 21:54:14,282:INFO:Initializing Huber Regressor
2022-08-11 21:54:14,282:INFO:Total runtime is 0.08894856770833334 minutes
2022-08-11 21:54:14,284:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:14,285:INFO:Initializing create_model()
2022-08-11 21:54:14,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:14,285:INFO:Checking exceptions
2022-08-11 21:54:14,289:INFO:Importing libraries
2022-08-11 21:54:14,290:INFO:Copying training dataset
2022-08-11 21:54:14,297:INFO:Defining folds
2022-08-11 21:54:14,298:INFO:Declaring metric variables
2022-08-11 21:54:14,300:INFO:Importing untrained model
2022-08-11 21:54:14,302:INFO:Huber Regressor Imported successfully
2022-08-11 21:54:14,307:INFO:Starting cross validation
2022-08-11 21:54:14,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:14,766:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:14,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,171:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,202:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,227:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,228:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,257:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,285:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 21:54:15,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,406:INFO:Calculating mean and std
2022-08-11 21:54:15,408:INFO:Creating metrics dataframe
2022-08-11 21:54:15,410:INFO:Uploading results into container
2022-08-11 21:54:15,410:INFO:Uploading model into container now
2022-08-11 21:54:15,411:INFO:master_model_container: 10
2022-08-11 21:54:15,411:INFO:display_container: 2
2022-08-11 21:54:15,411:INFO:HuberRegressor()
2022-08-11 21:54:15,411:INFO:create_model() successfully completed......................................
2022-08-11 21:54:15,512:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:15,512:INFO:Creating metrics dataframe
2022-08-11 21:54:15,520:INFO:Initializing K Neighbors Regressor
2022-08-11 21:54:15,520:INFO:Total runtime is 0.1095810333887736 minutes
2022-08-11 21:54:15,522:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:15,522:INFO:Initializing create_model()
2022-08-11 21:54:15,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:15,522:INFO:Checking exceptions
2022-08-11 21:54:15,527:INFO:Importing libraries
2022-08-11 21:54:15,527:INFO:Copying training dataset
2022-08-11 21:54:15,535:INFO:Defining folds
2022-08-11 21:54:15,535:INFO:Declaring metric variables
2022-08-11 21:54:15,537:INFO:Importing untrained model
2022-08-11 21:54:15,540:INFO:K Neighbors Regressor Imported successfully
2022-08-11 21:54:15,544:INFO:Starting cross validation
2022-08-11 21:54:15,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:15,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,672:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,672:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,684:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,693:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,695:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:15,752:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:16,937:INFO:Calculating mean and std
2022-08-11 21:54:16,938:INFO:Creating metrics dataframe
2022-08-11 21:54:16,940:INFO:Uploading results into container
2022-08-11 21:54:16,941:INFO:Uploading model into container now
2022-08-11 21:54:16,941:INFO:master_model_container: 11
2022-08-11 21:54:16,941:INFO:display_container: 2
2022-08-11 21:54:16,942:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 21:54:16,942:INFO:create_model() successfully completed......................................
2022-08-11 21:54:17,045:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:17,045:INFO:Creating metrics dataframe
2022-08-11 21:54:17,052:INFO:Initializing Decision Tree Regressor
2022-08-11 21:54:17,053:INFO:Total runtime is 0.13512263695398968 minutes
2022-08-11 21:54:17,055:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:17,055:INFO:Initializing create_model()
2022-08-11 21:54:17,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:17,055:INFO:Checking exceptions
2022-08-11 21:54:17,060:INFO:Importing libraries
2022-08-11 21:54:17,060:INFO:Copying training dataset
2022-08-11 21:54:17,068:INFO:Defining folds
2022-08-11 21:54:17,068:INFO:Declaring metric variables
2022-08-11 21:54:17,071:INFO:Importing untrained model
2022-08-11 21:54:17,074:INFO:Decision Tree Regressor Imported successfully
2022-08-11 21:54:17,078:INFO:Starting cross validation
2022-08-11 21:54:17,079:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:54:18,649:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,772:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,797:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,827:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,876:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,930:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:18,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:54:19,074:INFO:Calculating mean and std
2022-08-11 21:54:19,075:INFO:Creating metrics dataframe
2022-08-11 21:54:19,077:INFO:Uploading results into container
2022-08-11 21:54:19,078:INFO:Uploading model into container now
2022-08-11 21:54:19,078:INFO:master_model_container: 12
2022-08-11 21:54:19,078:INFO:display_container: 2
2022-08-11 21:54:19,078:INFO:DecisionTreeRegressor(random_state=3444)
2022-08-11 21:54:19,078:INFO:create_model() successfully completed......................................
2022-08-11 21:54:19,183:INFO:SubProcess create_model() end ==================================
2022-08-11 21:54:19,183:INFO:Creating metrics dataframe
2022-08-11 21:54:19,192:INFO:Initializing Random Forest Regressor
2022-08-11 21:54:19,192:INFO:Total runtime is 0.17077873547871908 minutes
2022-08-11 21:54:19,195:INFO:SubProcess create_model() called ==================================
2022-08-11 21:54:19,195:INFO:Initializing create_model()
2022-08-11 21:54:19,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:54:19,195:INFO:Checking exceptions
2022-08-11 21:54:19,200:INFO:Importing libraries
2022-08-11 21:54:19,200:INFO:Copying training dataset
2022-08-11 21:54:19,208:INFO:Defining folds
2022-08-11 21:54:19,208:INFO:Declaring metric variables
2022-08-11 21:54:19,211:INFO:Importing untrained model
2022-08-11 21:54:19,214:INFO:Random Forest Regressor Imported successfully
2022-08-11 21:54:19,219:INFO:Starting cross validation
2022-08-11 21:54:19,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:56:02,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:02,345:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:02,358:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:02,567:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:02,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:02,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:03,024:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:03,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:03,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:03,138:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:03,289:INFO:Calculating mean and std
2022-08-11 21:56:03,291:INFO:Creating metrics dataframe
2022-08-11 21:56:03,292:INFO:Uploading results into container
2022-08-11 21:56:03,293:INFO:Uploading model into container now
2022-08-11 21:56:03,293:INFO:master_model_container: 13
2022-08-11 21:56:03,294:INFO:display_container: 2
2022-08-11 21:56:03,294:INFO:RandomForestRegressor(n_jobs=-1, random_state=3444)
2022-08-11 21:56:03,294:INFO:create_model() successfully completed......................................
2022-08-11 21:56:03,398:INFO:SubProcess create_model() end ==================================
2022-08-11 21:56:03,399:INFO:Creating metrics dataframe
2022-08-11 21:56:03,407:INFO:Initializing Extra Trees Regressor
2022-08-11 21:56:03,407:INFO:Total runtime is 1.9076959689458213 minutes
2022-08-11 21:56:03,409:INFO:SubProcess create_model() called ==================================
2022-08-11 21:56:03,410:INFO:Initializing create_model()
2022-08-11 21:56:03,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:56:03,410:INFO:Checking exceptions
2022-08-11 21:56:03,414:INFO:Importing libraries
2022-08-11 21:56:03,415:INFO:Copying training dataset
2022-08-11 21:56:03,423:INFO:Defining folds
2022-08-11 21:56:03,423:INFO:Declaring metric variables
2022-08-11 21:56:03,426:INFO:Importing untrained model
2022-08-11 21:56:03,428:INFO:Extra Trees Regressor Imported successfully
2022-08-11 21:56:03,448:INFO:Starting cross validation
2022-08-11 21:56:03,448:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:56:33,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:33,900:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:34,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:34,477:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:35,313:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:36,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:37,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:37,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:38,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:38,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:39,118:INFO:Calculating mean and std
2022-08-11 21:56:39,119:INFO:Creating metrics dataframe
2022-08-11 21:56:39,121:INFO:Uploading results into container
2022-08-11 21:56:39,122:INFO:Uploading model into container now
2022-08-11 21:56:39,122:INFO:master_model_container: 14
2022-08-11 21:56:39,122:INFO:display_container: 2
2022-08-11 21:56:39,122:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3444)
2022-08-11 21:56:39,122:INFO:create_model() successfully completed......................................
2022-08-11 21:56:39,227:INFO:SubProcess create_model() end ==================================
2022-08-11 21:56:39,227:INFO:Creating metrics dataframe
2022-08-11 21:56:39,236:INFO:Initializing AdaBoost Regressor
2022-08-11 21:56:39,236:INFO:Total runtime is 2.5048474550247195 minutes
2022-08-11 21:56:39,239:INFO:SubProcess create_model() called ==================================
2022-08-11 21:56:39,239:INFO:Initializing create_model()
2022-08-11 21:56:39,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:56:39,239:INFO:Checking exceptions
2022-08-11 21:56:39,245:INFO:Importing libraries
2022-08-11 21:56:39,245:INFO:Copying training dataset
2022-08-11 21:56:39,253:INFO:Defining folds
2022-08-11 21:56:39,253:INFO:Declaring metric variables
2022-08-11 21:56:39,256:INFO:Importing untrained model
2022-08-11 21:56:39,258:INFO:AdaBoost Regressor Imported successfully
2022-08-11 21:56:39,264:INFO:Starting cross validation
2022-08-11 21:56:39,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:56:43,015:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:43,376:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:43,534:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:43,613:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:43,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:43,935:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:43,993:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:44,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:44,556:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:45,920:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:56:46,045:INFO:Calculating mean and std
2022-08-11 21:56:46,047:INFO:Creating metrics dataframe
2022-08-11 21:56:46,051:INFO:Uploading results into container
2022-08-11 21:56:46,052:INFO:Uploading model into container now
2022-08-11 21:56:46,053:INFO:master_model_container: 15
2022-08-11 21:56:46,053:INFO:display_container: 2
2022-08-11 21:56:46,053:INFO:AdaBoostRegressor(random_state=3444)
2022-08-11 21:56:46,053:INFO:create_model() successfully completed......................................
2022-08-11 21:56:46,183:INFO:SubProcess create_model() end ==================================
2022-08-11 21:56:46,183:INFO:Creating metrics dataframe
2022-08-11 21:56:46,193:INFO:Initializing Gradient Boosting Regressor
2022-08-11 21:56:46,194:INFO:Total runtime is 2.6208071351051334 minutes
2022-08-11 21:56:46,197:INFO:SubProcess create_model() called ==================================
2022-08-11 21:56:46,197:INFO:Initializing create_model()
2022-08-11 21:56:46,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:56:46,197:INFO:Checking exceptions
2022-08-11 21:56:46,210:INFO:Importing libraries
2022-08-11 21:56:46,210:INFO:Copying training dataset
2022-08-11 21:56:46,222:INFO:Defining folds
2022-08-11 21:56:46,223:INFO:Declaring metric variables
2022-08-11 21:56:46,225:INFO:Importing untrained model
2022-08-11 21:56:46,228:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 21:56:46,234:INFO:Starting cross validation
2022-08-11 21:56:46,235:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:57:05,540:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,616:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,654:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,684:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,692:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,750:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,801:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:05,923:INFO:Calculating mean and std
2022-08-11 21:57:05,924:INFO:Creating metrics dataframe
2022-08-11 21:57:05,926:INFO:Uploading results into container
2022-08-11 21:57:05,927:INFO:Uploading model into container now
2022-08-11 21:57:05,927:INFO:master_model_container: 16
2022-08-11 21:57:05,927:INFO:display_container: 2
2022-08-11 21:57:05,927:INFO:GradientBoostingRegressor(random_state=3444)
2022-08-11 21:57:05,927:INFO:create_model() successfully completed......................................
2022-08-11 21:57:06,031:INFO:SubProcess create_model() end ==================================
2022-08-11 21:57:06,032:INFO:Creating metrics dataframe
2022-08-11 21:57:06,040:INFO:Initializing Extreme Gradient Boosting
2022-08-11 21:57:06,040:INFO:Total runtime is 2.9515818675359093 minutes
2022-08-11 21:57:06,042:INFO:SubProcess create_model() called ==================================
2022-08-11 21:57:06,042:INFO:Initializing create_model()
2022-08-11 21:57:06,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:57:06,042:INFO:Checking exceptions
2022-08-11 21:57:06,055:INFO:Importing libraries
2022-08-11 21:57:06,055:INFO:Copying training dataset
2022-08-11 21:57:06,073:INFO:Defining folds
2022-08-11 21:57:06,073:INFO:Declaring metric variables
2022-08-11 21:57:06,076:INFO:Importing untrained model
2022-08-11 21:57:06,079:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 21:57:06,084:INFO:Starting cross validation
2022-08-11 21:57:06,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:57:17,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:17,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,076:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,098:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,149:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,171:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,219:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,240:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:18,374:INFO:Calculating mean and std
2022-08-11 21:57:18,376:INFO:Creating metrics dataframe
2022-08-11 21:57:18,377:INFO:Uploading results into container
2022-08-11 21:57:18,378:INFO:Uploading model into container now
2022-08-11 21:57:18,378:INFO:master_model_container: 17
2022-08-11 21:57:18,378:INFO:display_container: 2
2022-08-11 21:57:18,379:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=3444,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 21:57:18,379:INFO:create_model() successfully completed......................................
2022-08-11 21:57:18,481:INFO:SubProcess create_model() end ==================================
2022-08-11 21:57:18,481:INFO:Creating metrics dataframe
2022-08-11 21:57:18,492:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 21:57:18,493:INFO:Total runtime is 3.1591222882270817 minutes
2022-08-11 21:57:18,495:INFO:SubProcess create_model() called ==================================
2022-08-11 21:57:18,495:INFO:Initializing create_model()
2022-08-11 21:57:18,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:57:18,496:INFO:Checking exceptions
2022-08-11 21:57:18,505:INFO:Importing libraries
2022-08-11 21:57:18,505:INFO:Copying training dataset
2022-08-11 21:57:18,520:INFO:Defining folds
2022-08-11 21:57:18,520:INFO:Declaring metric variables
2022-08-11 21:57:18,523:INFO:Importing untrained model
2022-08-11 21:57:18,526:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:57:18,531:INFO:Starting cross validation
2022-08-11 21:57:18,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:57:19,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,271:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,275:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,338:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,345:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,346:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,367:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,510:INFO:Calculating mean and std
2022-08-11 21:57:19,511:INFO:Creating metrics dataframe
2022-08-11 21:57:19,513:INFO:Uploading results into container
2022-08-11 21:57:19,514:INFO:Uploading model into container now
2022-08-11 21:57:19,514:INFO:master_model_container: 18
2022-08-11 21:57:19,514:INFO:display_container: 2
2022-08-11 21:57:19,514:INFO:LGBMRegressor(random_state=3444)
2022-08-11 21:57:19,515:INFO:create_model() successfully completed......................................
2022-08-11 21:57:19,617:INFO:SubProcess create_model() end ==================================
2022-08-11 21:57:19,617:INFO:Creating metrics dataframe
2022-08-11 21:57:19,625:INFO:Initializing Dummy Regressor
2022-08-11 21:57:19,625:INFO:Total runtime is 3.17800441980362 minutes
2022-08-11 21:57:19,627:INFO:SubProcess create_model() called ==================================
2022-08-11 21:57:19,628:INFO:Initializing create_model()
2022-08-11 21:57:19,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec665e220>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:57:19,628:INFO:Checking exceptions
2022-08-11 21:57:19,635:INFO:Importing libraries
2022-08-11 21:57:19,635:INFO:Copying training dataset
2022-08-11 21:57:19,649:INFO:Defining folds
2022-08-11 21:57:19,654:INFO:Declaring metric variables
2022-08-11 21:57:19,661:INFO:Importing untrained model
2022-08-11 21:57:19,665:INFO:Dummy Regressor Imported successfully
2022-08-11 21:57:19,671:INFO:Starting cross validation
2022-08-11 21:57:19,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:57:19,791:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,793:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,793:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,797:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,806:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,835:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,839:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:19,966:INFO:Calculating mean and std
2022-08-11 21:57:19,967:INFO:Creating metrics dataframe
2022-08-11 21:57:19,970:INFO:Uploading results into container
2022-08-11 21:57:19,970:INFO:Uploading model into container now
2022-08-11 21:57:19,971:INFO:master_model_container: 19
2022-08-11 21:57:19,971:INFO:display_container: 2
2022-08-11 21:57:19,971:INFO:DummyRegressor()
2022-08-11 21:57:19,971:INFO:create_model() successfully completed......................................
2022-08-11 21:57:20,074:INFO:SubProcess create_model() end ==================================
2022-08-11 21:57:20,074:INFO:Creating metrics dataframe
2022-08-11 21:57:20,089:INFO:Initializing create_model()
2022-08-11 21:57:20,089:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:57:20,089:INFO:Checking exceptions
2022-08-11 21:57:20,097:INFO:Importing libraries
2022-08-11 21:57:20,097:INFO:Copying training dataset
2022-08-11 21:57:20,108:INFO:Defining folds
2022-08-11 21:57:20,108:INFO:Declaring metric variables
2022-08-11 21:57:20,108:INFO:Importing untrained model
2022-08-11 21:57:20,108:INFO:Declaring custom model
2022-08-11 21:57:20,109:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:57:20,110:INFO:Cross validation set to False
2022-08-11 21:57:20,110:INFO:Fitting Model
2022-08-11 21:57:22,660:INFO:LGBMRegressor(random_state=3444)
2022-08-11 21:57:22,660:INFO:create_model() successfully completed......................................
2022-08-11 21:57:22,790:INFO:master_model_container: 19
2022-08-11 21:57:22,790:INFO:display_container: 2
2022-08-11 21:57:22,790:INFO:LGBMRegressor(random_state=3444)
2022-08-11 21:57:22,790:INFO:compare_models() successfully completed......................................
2022-08-11 21:57:22,797:INFO:Initializing create_model()
2022-08-11 21:57:22,798:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 21:57:22,798:INFO:Checking exceptions
2022-08-11 21:57:22,834:INFO:Importing libraries
2022-08-11 21:57:22,834:INFO:Copying training dataset
2022-08-11 21:57:22,852:INFO:Defining folds
2022-08-11 21:57:22,852:INFO:Declaring metric variables
2022-08-11 21:57:22,858:INFO:Importing untrained model
2022-08-11 21:57:22,864:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:57:22,870:INFO:Starting cross validation
2022-08-11 21:57:22,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 21:57:23,532:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,609:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,617:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,627:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,632:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,664:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 21:57:23,860:INFO:Calculating mean and std
2022-08-11 21:57:23,862:INFO:Creating metrics dataframe
2022-08-11 21:57:23,866:INFO:Finalizing model
2022-08-11 21:57:26,228:INFO:Uploading results into container
2022-08-11 21:57:26,229:INFO:Uploading model into container now
2022-08-11 21:57:26,236:INFO:master_model_container: 20
2022-08-11 21:57:26,236:INFO:display_container: 3
2022-08-11 21:57:26,237:INFO:LGBMRegressor(random_state=3444)
2022-08-11 21:57:26,237:INFO:create_model() successfully completed......................................
2022-08-11 21:57:26,346:INFO:Initializing tune_model()
2022-08-11 21:57:26,346:INFO:tune_model(estimator=llar, fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>)
2022-08-11 21:57:26,347:INFO:Checking exceptions
2022-08-11 21:58:56,024:INFO:Initializing finalize_model()
2022-08-11 21:58:56,025:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 21:58:56,025:INFO:Finalizing LGBMRegressor(random_state=3444)
2022-08-11 21:58:56,048:INFO:Initializing create_model()
2022-08-11 21:58:56,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 21:58:56,048:INFO:Checking exceptions
2022-08-11 21:58:56,051:INFO:Importing libraries
2022-08-11 21:58:56,051:INFO:Copying training dataset
2022-08-11 21:58:56,052:INFO:Defining folds
2022-08-11 21:58:56,052:INFO:Declaring metric variables
2022-08-11 21:58:56,052:INFO:Importing untrained model
2022-08-11 21:58:56,052:INFO:Declaring custom model
2022-08-11 21:58:56,053:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 21:58:56,053:INFO:Cross validation set to False
2022-08-11 21:58:56,053:INFO:Fitting Model
2022-08-11 21:58:58,049:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))])
2022-08-11 21:58:58,049:INFO:create_model() successfully completed......................................
2022-08-11 21:58:58,167:INFO:Initializing predict_model()
2022-08-11 21:58:58,167:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec8a06a60>)
2022-08-11 21:58:58,167:INFO:Checking exceptions
2022-08-11 21:58:58,167:INFO:Preloading libraries
2022-08-11 21:58:58,172:INFO:Set up data.
2022-08-11 21:58:58,451:INFO:display_container: 4
2022-08-11 21:58:58,451:INFO:master_model_container: 20
2022-08-11 21:58:58,451:INFO:display_container: 4
2022-08-11 21:58:58,455:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))])
2022-08-11 21:58:58,455:INFO:finalize_model() successfully completed......................................
2022-08-11 21:58:59,417:INFO:Initializing predict_model()
2022-08-11 21:58:59,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf940>)
2022-08-11 21:58:59,417:INFO:Checking exceptions
2022-08-11 21:58:59,417:INFO:Preloading libraries
2022-08-11 21:58:59,424:INFO:Set up data.
2022-08-11 21:58:59,815:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3260382990.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_06'] = predict_model(model_y06, data=test_df)['prediction_label']

2022-08-11 22:03:40,405:INFO:Initializing finalize_model()
2022-08-11 22:03:40,405:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:03:40,407:INFO:Finalizing LGBMRegressor(random_state=3444)
2022-08-11 22:03:40,427:INFO:Initializing create_model()
2022-08-11 22:03:40,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:03:40,427:INFO:Checking exceptions
2022-08-11 22:03:40,429:INFO:Importing libraries
2022-08-11 22:03:40,430:INFO:Copying training dataset
2022-08-11 22:03:40,430:INFO:Defining folds
2022-08-11 22:03:40,431:INFO:Declaring metric variables
2022-08-11 22:03:40,431:INFO:Importing untrained model
2022-08-11 22:03:40,431:INFO:Declaring custom model
2022-08-11 22:03:40,432:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:03:40,432:INFO:Cross validation set to False
2022-08-11 22:03:40,432:INFO:Fitting Model
2022-08-11 22:03:42,131:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))])
2022-08-11 22:03:42,131:INFO:create_model() successfully completed......................................
2022-08-11 22:03:42,239:INFO:Initializing predict_model()
2022-08-11 22:03:42,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec8a06a60>)
2022-08-11 22:03:42,239:INFO:Checking exceptions
2022-08-11 22:03:42,239:INFO:Preloading libraries
2022-08-11 22:03:42,244:INFO:Set up data.
2022-08-11 22:03:42,422:INFO:display_container: 5
2022-08-11 22:03:42,422:INFO:master_model_container: 20
2022-08-11 22:03:42,422:INFO:display_container: 5
2022-08-11 22:03:42,426:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))])
2022-08-11 22:03:42,426:INFO:finalize_model() successfully completed......................................
2022-08-11 22:03:42,539:INFO:Initializing predict_model()
2022-08-11 22:03:42,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e082cb3a0>)
2022-08-11 22:03:42,540:INFO:Checking exceptions
2022-08-11 22:03:42,541:INFO:Preloading libraries
2022-08-11 22:03:42,547:INFO:Set up data.
2022-08-11 22:07:34,957:INFO:Initializing create_model()
2022-08-11 22:07:34,958:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:07:34,958:INFO:Checking exceptions
2022-08-11 22:07:34,998:INFO:Importing libraries
2022-08-11 22:07:34,998:INFO:Copying training dataset
2022-08-11 22:07:35,009:INFO:Defining folds
2022-08-11 22:07:35,009:INFO:Declaring metric variables
2022-08-11 22:07:35,013:INFO:Importing untrained model
2022-08-11 22:07:35,017:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:07:35,025:INFO:Starting cross validation
2022-08-11 22:07:35,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:07:38,198:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,219:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,355:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,385:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,420:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,508:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,516:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:07:38,661:INFO:Calculating mean and std
2022-08-11 22:07:38,664:INFO:Creating metrics dataframe
2022-08-11 22:07:38,671:INFO:Finalizing model
2022-08-11 22:07:40,549:INFO:Uploading results into container
2022-08-11 22:07:40,550:INFO:Uploading model into container now
2022-08-11 22:07:40,558:INFO:master_model_container: 21
2022-08-11 22:07:40,558:INFO:display_container: 6
2022-08-11 22:07:40,558:INFO:LGBMRegressor(random_state=3444)
2022-08-11 22:07:40,558:INFO:create_model() successfully completed......................................
2022-08-11 22:15:53,668:INFO:Initializing predict_model()
2022-08-11 22:15:53,669:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=2300))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf280>)
2022-08-11 22:15:53,669:INFO:Checking exceptions
2022-08-11 22:15:53,669:INFO:Preloading libraries
2022-08-11 22:15:53,678:INFO:Set up data.
2022-08-11 22:15:54,029:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/761052367.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_01'] = predict_model(model_y01, data=test_df)['prediction_label']

2022-08-11 22:16:12,906:INFO:Initializing predict_model()
2022-08-11 22:16:12,906:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf9d0>)
2022-08-11 22:16:12,906:INFO:Checking exceptions
2022-08-11 22:16:12,906:INFO:Preloading libraries
2022-08-11 22:16:12,916:INFO:Set up data.
2022-08-11 22:16:13,244:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/2494218837.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_02'] = predict_model(model_y02, data=test_df)['prediction_label']

2022-08-11 22:16:16,817:INFO:Initializing predict_model()
2022-08-11 22:16:16,817:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1771))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf8b0>)
2022-08-11 22:16:16,817:INFO:Checking exceptions
2022-08-11 22:16:16,817:INFO:Preloading libraries
2022-08-11 22:16:16,827:INFO:Set up data.
2022-08-11 22:16:17,134:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/521809292.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_03'] = predict_model(model_y03, data=test_df)['prediction_label']

2022-08-11 22:16:21,556:INFO:Initializing predict_model()
2022-08-11 22:16:21,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=2453))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf9d0>)
2022-08-11 22:16:21,556:INFO:Checking exceptions
2022-08-11 22:16:21,557:INFO:Preloading libraries
2022-08-11 22:16:21,906:INFO:Set up data.
2022-08-11 22:16:22,305:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3395959929.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_04'] = predict_model(model_y04, data=test_df)['prediction_label']

2022-08-11 22:16:26,238:INFO:Initializing predict_model()
2022-08-11 22:16:26,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3258))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf9d0>)
2022-08-11 22:16:26,239:INFO:Checking exceptions
2022-08-11 22:16:26,239:INFO:Preloading libraries
2022-08-11 22:16:26,248:INFO:Set up data.
2022-08-11 22:16:26,546:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3274266762.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_05'] = predict_model(model_y05, data=test_df)['prediction_label']

2022-08-11 22:16:39,873:INFO:Initializing create_model()
2022-08-11 22:16:39,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:16:39,874:INFO:Checking exceptions
2022-08-11 22:16:39,916:INFO:Importing libraries
2022-08-11 22:16:39,917:INFO:Copying training dataset
2022-08-11 22:16:39,929:INFO:Defining folds
2022-08-11 22:16:39,929:INFO:Declaring metric variables
2022-08-11 22:16:39,933:INFO:Importing untrained model
2022-08-11 22:16:39,937:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:16:39,942:INFO:Starting cross validation
2022-08-11 22:16:39,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:16:42,947:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,002:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,013:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,169:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,301:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:16:43,449:INFO:Calculating mean and std
2022-08-11 22:16:43,451:INFO:Creating metrics dataframe
2022-08-11 22:16:43,457:INFO:Finalizing model
2022-08-11 22:16:44,950:INFO:Uploading results into container
2022-08-11 22:16:44,951:INFO:Uploading model into container now
2022-08-11 22:16:44,958:INFO:master_model_container: 22
2022-08-11 22:16:44,958:INFO:display_container: 7
2022-08-11 22:16:44,959:INFO:LGBMRegressor(random_state=3444)
2022-08-11 22:16:44,959:INFO:create_model() successfully completed......................................
2022-08-11 22:17:06,184:INFO:Initializing compare_models()
2022-08-11 22:17:06,185:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:17:06,185:INFO:Checking exceptions
2022-08-11 22:17:06,208:INFO:Preparing display monitor
2022-08-11 22:17:06,236:INFO:Initializing Linear Regression
2022-08-11 22:17:06,236:INFO:Total runtime is 4.36703364054362e-06 minutes
2022-08-11 22:17:06,239:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:06,239:INFO:Initializing create_model()
2022-08-11 22:17:06,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:06,239:INFO:Checking exceptions
2022-08-11 22:17:06,251:INFO:Importing libraries
2022-08-11 22:17:06,251:INFO:Copying training dataset
2022-08-11 22:17:06,267:INFO:Defining folds
2022-08-11 22:17:06,267:INFO:Declaring metric variables
2022-08-11 22:17:06,270:INFO:Importing untrained model
2022-08-11 22:17:06,273:INFO:Linear Regression Imported successfully
2022-08-11 22:17:06,280:INFO:Starting cross validation
2022-08-11 22:17:06,281:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:06,640:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,644:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,686:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,696:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,751:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:06,872:INFO:Calculating mean and std
2022-08-11 22:17:06,873:INFO:Creating metrics dataframe
2022-08-11 22:17:06,875:INFO:Uploading results into container
2022-08-11 22:17:06,876:INFO:Uploading model into container now
2022-08-11 22:17:06,876:INFO:master_model_container: 23
2022-08-11 22:17:06,876:INFO:display_container: 8
2022-08-11 22:17:06,876:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:17:06,876:INFO:create_model() successfully completed......................................
2022-08-11 22:17:06,991:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:06,991:INFO:Creating metrics dataframe
2022-08-11 22:17:06,998:INFO:Initializing Lasso Regression
2022-08-11 22:17:06,998:INFO:Total runtime is 0.01270776589711507 minutes
2022-08-11 22:17:07,001:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:07,001:INFO:Initializing create_model()
2022-08-11 22:17:07,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:07,002:INFO:Checking exceptions
2022-08-11 22:17:07,014:INFO:Importing libraries
2022-08-11 22:17:07,014:INFO:Copying training dataset
2022-08-11 22:17:07,030:INFO:Defining folds
2022-08-11 22:17:07,030:INFO:Declaring metric variables
2022-08-11 22:17:07,033:INFO:Importing untrained model
2022-08-11 22:17:07,035:INFO:Lasso Regression Imported successfully
2022-08-11 22:17:07,040:INFO:Starting cross validation
2022-08-11 22:17:07,041:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:07,164:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,170:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,177:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,178:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,226:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,234:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,250:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,384:INFO:Calculating mean and std
2022-08-11 22:17:07,385:INFO:Creating metrics dataframe
2022-08-11 22:17:07,387:INFO:Uploading results into container
2022-08-11 22:17:07,388:INFO:Uploading model into container now
2022-08-11 22:17:07,388:INFO:master_model_container: 24
2022-08-11 22:17:07,388:INFO:display_container: 8
2022-08-11 22:17:07,389:INFO:Lasso(random_state=3444)
2022-08-11 22:17:07,389:INFO:create_model() successfully completed......................................
2022-08-11 22:17:07,503:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:07,503:INFO:Creating metrics dataframe
2022-08-11 22:17:07,510:INFO:Initializing Ridge Regression
2022-08-11 22:17:07,510:INFO:Total runtime is 0.021246083577473956 minutes
2022-08-11 22:17:07,513:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:07,513:INFO:Initializing create_model()
2022-08-11 22:17:07,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:07,513:INFO:Checking exceptions
2022-08-11 22:17:07,519:INFO:Importing libraries
2022-08-11 22:17:07,519:INFO:Copying training dataset
2022-08-11 22:17:07,531:INFO:Defining folds
2022-08-11 22:17:07,532:INFO:Declaring metric variables
2022-08-11 22:17:07,535:INFO:Importing untrained model
2022-08-11 22:17:07,538:INFO:Ridge Regression Imported successfully
2022-08-11 22:17:07,542:INFO:Starting cross validation
2022-08-11 22:17:07,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:07,674:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,686:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,688:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,696:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,698:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,707:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,732:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,734:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:07,853:INFO:Calculating mean and std
2022-08-11 22:17:07,854:INFO:Creating metrics dataframe
2022-08-11 22:17:07,857:INFO:Uploading results into container
2022-08-11 22:17:07,858:INFO:Uploading model into container now
2022-08-11 22:17:07,858:INFO:master_model_container: 25
2022-08-11 22:17:07,858:INFO:display_container: 8
2022-08-11 22:17:07,858:INFO:Ridge(random_state=3444)
2022-08-11 22:17:07,858:INFO:create_model() successfully completed......................................
2022-08-11 22:17:07,968:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:07,969:INFO:Creating metrics dataframe
2022-08-11 22:17:07,975:INFO:Initializing Elastic Net
2022-08-11 22:17:07,975:INFO:Total runtime is 0.028993686040242512 minutes
2022-08-11 22:17:07,978:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:07,978:INFO:Initializing create_model()
2022-08-11 22:17:07,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:07,979:INFO:Checking exceptions
2022-08-11 22:17:07,984:INFO:Importing libraries
2022-08-11 22:17:07,984:INFO:Copying training dataset
2022-08-11 22:17:07,993:INFO:Defining folds
2022-08-11 22:17:07,993:INFO:Declaring metric variables
2022-08-11 22:17:07,996:INFO:Importing untrained model
2022-08-11 22:17:08,000:INFO:Elastic Net Imported successfully
2022-08-11 22:17:08,005:INFO:Starting cross validation
2022-08-11 22:17:08,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:08,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,147:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,147:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,148:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,158:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,159:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,191:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,193:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,246:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,365:INFO:Calculating mean and std
2022-08-11 22:17:08,366:INFO:Creating metrics dataframe
2022-08-11 22:17:08,368:INFO:Uploading results into container
2022-08-11 22:17:08,369:INFO:Uploading model into container now
2022-08-11 22:17:08,369:INFO:master_model_container: 26
2022-08-11 22:17:08,369:INFO:display_container: 8
2022-08-11 22:17:08,370:INFO:ElasticNet(random_state=3444)
2022-08-11 22:17:08,370:INFO:create_model() successfully completed......................................
2022-08-11 22:17:08,480:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:08,480:INFO:Creating metrics dataframe
2022-08-11 22:17:08,487:INFO:Initializing Least Angle Regression
2022-08-11 22:17:08,487:INFO:Total runtime is 0.03751806815465291 minutes
2022-08-11 22:17:08,490:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:08,490:INFO:Initializing create_model()
2022-08-11 22:17:08,490:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:08,490:INFO:Checking exceptions
2022-08-11 22:17:08,497:INFO:Importing libraries
2022-08-11 22:17:08,498:INFO:Copying training dataset
2022-08-11 22:17:08,511:INFO:Defining folds
2022-08-11 22:17:08,511:INFO:Declaring metric variables
2022-08-11 22:17:08,514:INFO:Importing untrained model
2022-08-11 22:17:08,517:INFO:Least Angle Regression Imported successfully
2022-08-11 22:17:08,522:INFO:Starting cross validation
2022-08-11 22:17:08,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:08,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,658:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,666:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,668:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,669:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,673:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,688:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,693:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,701:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,704:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,707:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,712:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:08,721:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:08,847:INFO:Calculating mean and std
2022-08-11 22:17:08,849:INFO:Creating metrics dataframe
2022-08-11 22:17:08,851:INFO:Uploading results into container
2022-08-11 22:17:08,852:INFO:Uploading model into container now
2022-08-11 22:17:08,853:INFO:master_model_container: 27
2022-08-11 22:17:08,853:INFO:display_container: 8
2022-08-11 22:17:08,853:INFO:Lars(random_state=3444)
2022-08-11 22:17:08,854:INFO:create_model() successfully completed......................................
2022-08-11 22:17:08,964:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:08,964:INFO:Creating metrics dataframe
2022-08-11 22:17:08,972:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:17:08,972:INFO:Total runtime is 0.045605619748433426 minutes
2022-08-11 22:17:08,974:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:08,975:INFO:Initializing create_model()
2022-08-11 22:17:08,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:08,975:INFO:Checking exceptions
2022-08-11 22:17:08,981:INFO:Importing libraries
2022-08-11 22:17:08,981:INFO:Copying training dataset
2022-08-11 22:17:08,993:INFO:Defining folds
2022-08-11 22:17:08,993:INFO:Declaring metric variables
2022-08-11 22:17:08,996:INFO:Importing untrained model
2022-08-11 22:17:08,998:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:17:09,003:INFO:Starting cross validation
2022-08-11 22:17:09,004:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:09,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,127:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,127:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,128:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,135:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,138:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,140:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,150:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,160:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,161:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,184:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,192:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,202:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:17:09,241:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,361:INFO:Calculating mean and std
2022-08-11 22:17:09,363:INFO:Creating metrics dataframe
2022-08-11 22:17:09,366:INFO:Uploading results into container
2022-08-11 22:17:09,367:INFO:Uploading model into container now
2022-08-11 22:17:09,367:INFO:master_model_container: 28
2022-08-11 22:17:09,368:INFO:display_container: 8
2022-08-11 22:17:09,368:INFO:LassoLars(random_state=3444)
2022-08-11 22:17:09,368:INFO:create_model() successfully completed......................................
2022-08-11 22:17:09,477:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:09,477:INFO:Creating metrics dataframe
2022-08-11 22:17:09,485:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:17:09,485:INFO:Total runtime is 0.054161536693572994 minutes
2022-08-11 22:17:09,488:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:09,489:INFO:Initializing create_model()
2022-08-11 22:17:09,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:09,489:INFO:Checking exceptions
2022-08-11 22:17:09,499:INFO:Importing libraries
2022-08-11 22:17:09,499:INFO:Copying training dataset
2022-08-11 22:17:09,509:INFO:Defining folds
2022-08-11 22:17:09,510:INFO:Declaring metric variables
2022-08-11 22:17:09,513:INFO:Importing untrained model
2022-08-11 22:17:09,516:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:17:09,521:INFO:Starting cross validation
2022-08-11 22:17:09,522:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:09,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,653:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,655:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,662:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,667:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,670:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,679:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,679:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,687:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,697:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,702:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,702:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:17:09,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:09,742:INFO:Calculating mean and std
2022-08-11 22:17:09,743:INFO:Creating metrics dataframe
2022-08-11 22:17:09,745:INFO:Uploading results into container
2022-08-11 22:17:09,746:INFO:Uploading model into container now
2022-08-11 22:17:09,746:INFO:master_model_container: 29
2022-08-11 22:17:09,746:INFO:display_container: 8
2022-08-11 22:17:09,747:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:17:09,747:INFO:create_model() successfully completed......................................
2022-08-11 22:17:09,854:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:09,854:INFO:Creating metrics dataframe
2022-08-11 22:17:09,862:INFO:Initializing Bayesian Ridge
2022-08-11 22:17:09,862:INFO:Total runtime is 0.06044273376464843 minutes
2022-08-11 22:17:09,865:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:09,865:INFO:Initializing create_model()
2022-08-11 22:17:09,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:09,865:INFO:Checking exceptions
2022-08-11 22:17:09,870:INFO:Importing libraries
2022-08-11 22:17:09,870:INFO:Copying training dataset
2022-08-11 22:17:09,878:INFO:Defining folds
2022-08-11 22:17:09,879:INFO:Declaring metric variables
2022-08-11 22:17:09,882:INFO:Importing untrained model
2022-08-11 22:17:09,885:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:17:09,890:INFO:Starting cross validation
2022-08-11 22:17:09,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:10,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,251:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,255:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,287:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,295:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,510:INFO:Calculating mean and std
2022-08-11 22:17:10,511:INFO:Creating metrics dataframe
2022-08-11 22:17:10,514:INFO:Uploading results into container
2022-08-11 22:17:10,515:INFO:Uploading model into container now
2022-08-11 22:17:10,515:INFO:master_model_container: 30
2022-08-11 22:17:10,515:INFO:display_container: 8
2022-08-11 22:17:10,515:INFO:BayesianRidge()
2022-08-11 22:17:10,515:INFO:create_model() successfully completed......................................
2022-08-11 22:17:10,622:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:10,622:INFO:Creating metrics dataframe
2022-08-11 22:17:10,631:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:17:10,631:INFO:Total runtime is 0.0732620358467102 minutes
2022-08-11 22:17:10,634:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:10,634:INFO:Initializing create_model()
2022-08-11 22:17:10,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:10,635:INFO:Checking exceptions
2022-08-11 22:17:10,644:INFO:Importing libraries
2022-08-11 22:17:10,644:INFO:Copying training dataset
2022-08-11 22:17:10,653:INFO:Defining folds
2022-08-11 22:17:10,653:INFO:Declaring metric variables
2022-08-11 22:17:10,656:INFO:Importing untrained model
2022-08-11 22:17:10,659:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:17:10,664:INFO:Starting cross validation
2022-08-11 22:17:10,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:10,851:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,888:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,903:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,915:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,918:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,923:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,941:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:10,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:11,078:INFO:Calculating mean and std
2022-08-11 22:17:11,079:INFO:Creating metrics dataframe
2022-08-11 22:17:11,083:INFO:Uploading results into container
2022-08-11 22:17:11,083:INFO:Uploading model into container now
2022-08-11 22:17:11,084:INFO:master_model_container: 31
2022-08-11 22:17:11,084:INFO:display_container: 8
2022-08-11 22:17:11,084:INFO:PassiveAggressiveRegressor(random_state=3444)
2022-08-11 22:17:11,084:INFO:create_model() successfully completed......................................
2022-08-11 22:17:11,189:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:11,190:INFO:Creating metrics dataframe
2022-08-11 22:17:11,196:INFO:Initializing Huber Regressor
2022-08-11 22:17:11,196:INFO:Total runtime is 0.08267570336659749 minutes
2022-08-11 22:17:11,198:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:11,198:INFO:Initializing create_model()
2022-08-11 22:17:11,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:11,198:INFO:Checking exceptions
2022-08-11 22:17:11,203:INFO:Importing libraries
2022-08-11 22:17:11,203:INFO:Copying training dataset
2022-08-11 22:17:11,213:INFO:Defining folds
2022-08-11 22:17:11,213:INFO:Declaring metric variables
2022-08-11 22:17:11,215:INFO:Importing untrained model
2022-08-11 22:17:11,217:INFO:Huber Regressor Imported successfully
2022-08-11 22:17:11,222:INFO:Starting cross validation
2022-08-11 22:17:11,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:11,704:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:11,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,138:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,171:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,184:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,185:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,194:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,195:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,227:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,228:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,237:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,251:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:17:12,251:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,370:INFO:Calculating mean and std
2022-08-11 22:17:12,371:INFO:Creating metrics dataframe
2022-08-11 22:17:12,373:INFO:Uploading results into container
2022-08-11 22:17:12,374:INFO:Uploading model into container now
2022-08-11 22:17:12,374:INFO:master_model_container: 32
2022-08-11 22:17:12,374:INFO:display_container: 8
2022-08-11 22:17:12,374:INFO:HuberRegressor()
2022-08-11 22:17:12,374:INFO:create_model() successfully completed......................................
2022-08-11 22:17:12,480:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:12,480:INFO:Creating metrics dataframe
2022-08-11 22:17:12,488:INFO:Initializing K Neighbors Regressor
2022-08-11 22:17:12,488:INFO:Total runtime is 0.10421165227890014 minutes
2022-08-11 22:17:12,491:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:12,491:INFO:Initializing create_model()
2022-08-11 22:17:12,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:12,491:INFO:Checking exceptions
2022-08-11 22:17:12,496:INFO:Importing libraries
2022-08-11 22:17:12,496:INFO:Copying training dataset
2022-08-11 22:17:12,504:INFO:Defining folds
2022-08-11 22:17:12,505:INFO:Declaring metric variables
2022-08-11 22:17:12,507:INFO:Importing untrained model
2022-08-11 22:17:12,510:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:17:12,515:INFO:Starting cross validation
2022-08-11 22:17:12,515:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:12,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,638:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,640:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,653:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,684:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:12,761:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:13,770:INFO:Calculating mean and std
2022-08-11 22:17:13,771:INFO:Creating metrics dataframe
2022-08-11 22:17:13,773:INFO:Uploading results into container
2022-08-11 22:17:13,774:INFO:Uploading model into container now
2022-08-11 22:17:13,775:INFO:master_model_container: 33
2022-08-11 22:17:13,775:INFO:display_container: 8
2022-08-11 22:17:13,775:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:17:13,775:INFO:create_model() successfully completed......................................
2022-08-11 22:17:13,884:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:13,884:INFO:Creating metrics dataframe
2022-08-11 22:17:13,892:INFO:Initializing Decision Tree Regressor
2022-08-11 22:17:13,892:INFO:Total runtime is 0.12760403553644817 minutes
2022-08-11 22:17:13,894:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:13,895:INFO:Initializing create_model()
2022-08-11 22:17:13,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:13,895:INFO:Checking exceptions
2022-08-11 22:17:13,900:INFO:Importing libraries
2022-08-11 22:17:13,900:INFO:Copying training dataset
2022-08-11 22:17:13,918:INFO:Defining folds
2022-08-11 22:17:13,918:INFO:Declaring metric variables
2022-08-11 22:17:13,925:INFO:Importing untrained model
2022-08-11 22:17:13,928:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:17:13,934:INFO:Starting cross validation
2022-08-11 22:17:13,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:17:15,418:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,540:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,565:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,617:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,838:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:17:15,959:INFO:Calculating mean and std
2022-08-11 22:17:15,960:INFO:Creating metrics dataframe
2022-08-11 22:17:15,963:INFO:Uploading results into container
2022-08-11 22:17:15,963:INFO:Uploading model into container now
2022-08-11 22:17:15,964:INFO:master_model_container: 34
2022-08-11 22:17:15,964:INFO:display_container: 8
2022-08-11 22:17:15,964:INFO:DecisionTreeRegressor(random_state=3444)
2022-08-11 22:17:15,965:INFO:create_model() successfully completed......................................
2022-08-11 22:17:16,070:INFO:SubProcess create_model() end ==================================
2022-08-11 22:17:16,070:INFO:Creating metrics dataframe
2022-08-11 22:17:16,078:INFO:Initializing Random Forest Regressor
2022-08-11 22:17:16,078:INFO:Total runtime is 0.1640349864959717 minutes
2022-08-11 22:17:16,080:INFO:SubProcess create_model() called ==================================
2022-08-11 22:17:16,080:INFO:Initializing create_model()
2022-08-11 22:17:16,080:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:17:16,080:INFO:Checking exceptions
2022-08-11 22:17:16,085:INFO:Importing libraries
2022-08-11 22:17:16,085:INFO:Copying training dataset
2022-08-11 22:17:16,094:INFO:Defining folds
2022-08-11 22:17:16,094:INFO:Declaring metric variables
2022-08-11 22:17:16,097:INFO:Importing untrained model
2022-08-11 22:17:16,099:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:17:16,105:INFO:Starting cross validation
2022-08-11 22:17:16,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:18:59,151:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,196:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,218:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,226:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,600:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,716:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:18:59,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:00,005:INFO:Calculating mean and std
2022-08-11 22:19:00,007:INFO:Creating metrics dataframe
2022-08-11 22:19:00,009:INFO:Uploading results into container
2022-08-11 22:19:00,010:INFO:Uploading model into container now
2022-08-11 22:19:00,011:INFO:master_model_container: 35
2022-08-11 22:19:00,011:INFO:display_container: 8
2022-08-11 22:19:00,011:INFO:RandomForestRegressor(n_jobs=-1, random_state=3444)
2022-08-11 22:19:00,011:INFO:create_model() successfully completed......................................
2022-08-11 22:19:00,120:INFO:SubProcess create_model() end ==================================
2022-08-11 22:19:00,120:INFO:Creating metrics dataframe
2022-08-11 22:19:00,128:INFO:Initializing Extra Trees Regressor
2022-08-11 22:19:00,128:INFO:Total runtime is 1.8982100526491803 minutes
2022-08-11 22:19:00,131:INFO:SubProcess create_model() called ==================================
2022-08-11 22:19:00,131:INFO:Initializing create_model()
2022-08-11 22:19:00,131:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:19:00,131:INFO:Checking exceptions
2022-08-11 22:19:00,136:INFO:Importing libraries
2022-08-11 22:19:00,136:INFO:Copying training dataset
2022-08-11 22:19:00,147:INFO:Defining folds
2022-08-11 22:19:00,148:INFO:Declaring metric variables
2022-08-11 22:19:00,150:INFO:Importing untrained model
2022-08-11 22:19:00,153:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:19:00,159:INFO:Starting cross validation
2022-08-11 22:19:00,160:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:19:26,432:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:30,638:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:31,313:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,387:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,412:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,440:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:35,460:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:36,010:INFO:Calculating mean and std
2022-08-11 22:19:36,011:INFO:Creating metrics dataframe
2022-08-11 22:19:36,014:INFO:Uploading results into container
2022-08-11 22:19:36,014:INFO:Uploading model into container now
2022-08-11 22:19:36,015:INFO:master_model_container: 36
2022-08-11 22:19:36,015:INFO:display_container: 8
2022-08-11 22:19:36,015:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3444)
2022-08-11 22:19:36,016:INFO:create_model() successfully completed......................................
2022-08-11 22:19:36,132:INFO:SubProcess create_model() end ==================================
2022-08-11 22:19:36,132:INFO:Creating metrics dataframe
2022-08-11 22:19:36,141:INFO:Initializing AdaBoost Regressor
2022-08-11 22:19:36,142:INFO:Total runtime is 2.498431217670441 minutes
2022-08-11 22:19:36,144:INFO:SubProcess create_model() called ==================================
2022-08-11 22:19:36,145:INFO:Initializing create_model()
2022-08-11 22:19:36,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:19:36,145:INFO:Checking exceptions
2022-08-11 22:19:36,150:INFO:Importing libraries
2022-08-11 22:19:36,150:INFO:Copying training dataset
2022-08-11 22:19:36,158:INFO:Defining folds
2022-08-11 22:19:36,159:INFO:Declaring metric variables
2022-08-11 22:19:36,162:INFO:Importing untrained model
2022-08-11 22:19:36,185:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:19:36,192:INFO:Starting cross validation
2022-08-11 22:19:36,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:19:36,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:702: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2022-08-11 22:19:40,180:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:40,301:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:40,355:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:40,490:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:40,562:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:40,884:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:41,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:41,253:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:41,392:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:42,810:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:19:42,939:INFO:Calculating mean and std
2022-08-11 22:19:42,941:INFO:Creating metrics dataframe
2022-08-11 22:19:42,945:INFO:Uploading results into container
2022-08-11 22:19:42,945:INFO:Uploading model into container now
2022-08-11 22:19:42,946:INFO:master_model_container: 37
2022-08-11 22:19:42,946:INFO:display_container: 8
2022-08-11 22:19:42,946:INFO:AdaBoostRegressor(random_state=3444)
2022-08-11 22:19:42,946:INFO:create_model() successfully completed......................................
2022-08-11 22:19:43,078:INFO:SubProcess create_model() end ==================================
2022-08-11 22:19:43,078:INFO:Creating metrics dataframe
2022-08-11 22:19:43,088:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:19:43,088:INFO:Total runtime is 2.614211197694143 minutes
2022-08-11 22:19:43,091:INFO:SubProcess create_model() called ==================================
2022-08-11 22:19:43,092:INFO:Initializing create_model()
2022-08-11 22:19:43,092:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:19:43,092:INFO:Checking exceptions
2022-08-11 22:19:43,107:INFO:Importing libraries
2022-08-11 22:19:43,107:INFO:Copying training dataset
2022-08-11 22:19:43,127:INFO:Defining folds
2022-08-11 22:19:43,127:INFO:Declaring metric variables
2022-08-11 22:19:43,130:INFO:Importing untrained model
2022-08-11 22:19:43,133:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:19:43,138:INFO:Starting cross validation
2022-08-11 22:19:43,139:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:20:02,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,464:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,502:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,527:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,539:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,539:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,551:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,574:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:02,695:INFO:Calculating mean and std
2022-08-11 22:20:02,696:INFO:Creating metrics dataframe
2022-08-11 22:20:02,698:INFO:Uploading results into container
2022-08-11 22:20:02,699:INFO:Uploading model into container now
2022-08-11 22:20:02,699:INFO:master_model_container: 38
2022-08-11 22:20:02,699:INFO:display_container: 8
2022-08-11 22:20:02,699:INFO:GradientBoostingRegressor(random_state=3444)
2022-08-11 22:20:02,699:INFO:create_model() successfully completed......................................
2022-08-11 22:20:02,804:INFO:SubProcess create_model() end ==================================
2022-08-11 22:20:02,804:INFO:Creating metrics dataframe
2022-08-11 22:20:02,813:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:20:02,814:INFO:Total runtime is 2.9429663340250656 minutes
2022-08-11 22:20:02,817:INFO:SubProcess create_model() called ==================================
2022-08-11 22:20:02,817:INFO:Initializing create_model()
2022-08-11 22:20:02,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:20:02,817:INFO:Checking exceptions
2022-08-11 22:20:02,828:INFO:Importing libraries
2022-08-11 22:20:02,828:INFO:Copying training dataset
2022-08-11 22:20:02,840:INFO:Defining folds
2022-08-11 22:20:02,841:INFO:Declaring metric variables
2022-08-11 22:20:02,844:INFO:Importing untrained model
2022-08-11 22:20:02,848:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:20:02,853:INFO:Starting cross validation
2022-08-11 22:20:02,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:20:14,376:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,401:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,442:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,539:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,546:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,600:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,606:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:14,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:15,576:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:15,703:INFO:Calculating mean and std
2022-08-11 22:20:15,704:INFO:Creating metrics dataframe
2022-08-11 22:20:15,707:INFO:Uploading results into container
2022-08-11 22:20:15,707:INFO:Uploading model into container now
2022-08-11 22:20:15,708:INFO:master_model_container: 39
2022-08-11 22:20:15,708:INFO:display_container: 8
2022-08-11 22:20:15,709:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=3444,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:20:15,709:INFO:create_model() successfully completed......................................
2022-08-11 22:20:15,817:INFO:SubProcess create_model() end ==================================
2022-08-11 22:20:15,817:INFO:Creating metrics dataframe
2022-08-11 22:20:15,826:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:20:15,826:INFO:Total runtime is 3.1598437190055852 minutes
2022-08-11 22:20:15,829:INFO:SubProcess create_model() called ==================================
2022-08-11 22:20:15,829:INFO:Initializing create_model()
2022-08-11 22:20:15,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:20:15,829:INFO:Checking exceptions
2022-08-11 22:20:15,836:INFO:Importing libraries
2022-08-11 22:20:15,836:INFO:Copying training dataset
2022-08-11 22:20:15,849:INFO:Defining folds
2022-08-11 22:20:15,849:INFO:Declaring metric variables
2022-08-11 22:20:15,852:INFO:Importing untrained model
2022-08-11 22:20:15,856:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:20:15,861:INFO:Starting cross validation
2022-08-11 22:20:15,862:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:20:16,563:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,581:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,582:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,603:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,650:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,653:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,666:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,788:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:16,928:INFO:Calculating mean and std
2022-08-11 22:20:16,930:INFO:Creating metrics dataframe
2022-08-11 22:20:16,932:INFO:Uploading results into container
2022-08-11 22:20:16,933:INFO:Uploading model into container now
2022-08-11 22:20:16,933:INFO:master_model_container: 40
2022-08-11 22:20:16,933:INFO:display_container: 8
2022-08-11 22:20:16,934:INFO:LGBMRegressor(random_state=3444)
2022-08-11 22:20:16,934:INFO:create_model() successfully completed......................................
2022-08-11 22:20:17,041:INFO:SubProcess create_model() end ==================================
2022-08-11 22:20:17,041:INFO:Creating metrics dataframe
2022-08-11 22:20:17,052:INFO:Initializing Dummy Regressor
2022-08-11 22:20:17,052:INFO:Total runtime is 3.1802745660146083 minutes
2022-08-11 22:20:17,055:INFO:SubProcess create_model() called ==================================
2022-08-11 22:20:17,055:INFO:Initializing create_model()
2022-08-11 22:20:17,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfcc0460>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:20:17,056:INFO:Checking exceptions
2022-08-11 22:20:17,061:INFO:Importing libraries
2022-08-11 22:20:17,061:INFO:Copying training dataset
2022-08-11 22:20:17,071:INFO:Defining folds
2022-08-11 22:20:17,071:INFO:Declaring metric variables
2022-08-11 22:20:17,074:INFO:Importing untrained model
2022-08-11 22:20:17,077:INFO:Dummy Regressor Imported successfully
2022-08-11 22:20:17,083:INFO:Starting cross validation
2022-08-11 22:20:17,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:20:17,194:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,211:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,216:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,250:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:17,381:INFO:Calculating mean and std
2022-08-11 22:20:17,383:INFO:Creating metrics dataframe
2022-08-11 22:20:17,385:INFO:Uploading results into container
2022-08-11 22:20:17,386:INFO:Uploading model into container now
2022-08-11 22:20:17,386:INFO:master_model_container: 41
2022-08-11 22:20:17,387:INFO:display_container: 8
2022-08-11 22:20:17,387:INFO:DummyRegressor()
2022-08-11 22:20:17,387:INFO:create_model() successfully completed......................................
2022-08-11 22:20:17,495:INFO:SubProcess create_model() end ==================================
2022-08-11 22:20:17,495:INFO:Creating metrics dataframe
2022-08-11 22:20:17,512:INFO:Initializing create_model()
2022-08-11 22:20:17,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:20:17,512:INFO:Checking exceptions
2022-08-11 22:20:17,523:INFO:Importing libraries
2022-08-11 22:20:17,523:INFO:Copying training dataset
2022-08-11 22:20:17,537:INFO:Defining folds
2022-08-11 22:20:17,537:INFO:Declaring metric variables
2022-08-11 22:20:17,537:INFO:Importing untrained model
2022-08-11 22:20:17,537:INFO:Declaring custom model
2022-08-11 22:20:17,538:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:20:17,538:INFO:Cross validation set to False
2022-08-11 22:20:17,538:INFO:Fitting Model
2022-08-11 22:20:19,594:INFO:LGBMRegressor(random_state=3444)
2022-08-11 22:20:19,594:INFO:create_model() successfully completed......................................
2022-08-11 22:20:19,725:INFO:master_model_container: 41
2022-08-11 22:20:19,726:INFO:display_container: 8
2022-08-11 22:20:19,726:INFO:LGBMRegressor(random_state=3444)
2022-08-11 22:20:19,726:INFO:compare_models() successfully completed......................................
2022-08-11 22:20:19,733:INFO:Initializing create_model()
2022-08-11 22:20:19,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:20:19,734:INFO:Checking exceptions
2022-08-11 22:20:19,759:INFO:Importing libraries
2022-08-11 22:20:19,759:INFO:Copying training dataset
2022-08-11 22:20:19,775:INFO:Defining folds
2022-08-11 22:20:19,775:INFO:Declaring metric variables
2022-08-11 22:20:19,778:INFO:Importing untrained model
2022-08-11 22:20:19,795:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:20:19,800:INFO:Starting cross validation
2022-08-11 22:20:19,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:20:20,502:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,533:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,553:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,590:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,607:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,611:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,661:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:20:20,808:INFO:Calculating mean and std
2022-08-11 22:20:20,809:INFO:Creating metrics dataframe
2022-08-11 22:20:20,814:INFO:Finalizing model
2022-08-11 22:20:22,762:INFO:Uploading results into container
2022-08-11 22:20:22,763:INFO:Uploading model into container now
2022-08-11 22:20:22,770:INFO:master_model_container: 42
2022-08-11 22:20:22,770:INFO:display_container: 9
2022-08-11 22:20:22,771:INFO:LGBMRegressor(random_state=3444)
2022-08-11 22:20:22,771:INFO:create_model() successfully completed......................................
2022-08-11 22:20:34,570:INFO:Initializing finalize_model()
2022-08-11 22:20:34,571:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:20:34,573:INFO:Finalizing LGBMRegressor(random_state=3444)
2022-08-11 22:20:34,599:INFO:Initializing create_model()
2022-08-11 22:20:34,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=LGBMRegressor(random_state=3444), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:20:34,599:INFO:Checking exceptions
2022-08-11 22:20:34,601:INFO:Importing libraries
2022-08-11 22:20:34,601:INFO:Copying training dataset
2022-08-11 22:20:34,602:INFO:Defining folds
2022-08-11 22:20:34,602:INFO:Declaring metric variables
2022-08-11 22:20:34,603:INFO:Importing untrained model
2022-08-11 22:20:34,603:INFO:Declaring custom model
2022-08-11 22:20:34,603:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:20:34,604:INFO:Cross validation set to False
2022-08-11 22:20:34,604:INFO:Fitting Model
2022-08-11 22:20:36,610:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))])
2022-08-11 22:20:36,610:INFO:create_model() successfully completed......................................
2022-08-11 22:20:36,722:INFO:Initializing predict_model()
2022-08-11 22:20:36,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9373d30>)
2022-08-11 22:20:36,722:INFO:Checking exceptions
2022-08-11 22:20:36,722:INFO:Preloading libraries
2022-08-11 22:20:36,727:INFO:Set up data.
2022-08-11 22:20:36,913:INFO:display_container: 10
2022-08-11 22:20:36,913:INFO:master_model_container: 42
2022-08-11 22:20:36,913:INFO:display_container: 10
2022-08-11 22:20:36,917:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))])
2022-08-11 22:20:36,917:INFO:finalize_model() successfully completed......................................
2022-08-11 22:20:39,287:INFO:Initializing predict_model()
2022-08-11 22:20:39,287:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=3444))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e8b3cf310>)
2022-08-11 22:20:39,287:INFO:Checking exceptions
2022-08-11 22:20:39,288:INFO:Preloading libraries
2022-08-11 22:20:39,294:INFO:Set up data.
2022-08-11 22:20:39,607:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3260382990.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_06'] = predict_model(model_y06, data=test_df)['prediction_label']

2022-08-11 22:20:52,803:INFO:Initializing predict_model()
2022-08-11 22:20:52,803:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e3980ac70>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=581))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e082cb3a0>)
2022-08-11 22:20:52,804:INFO:Checking exceptions
2022-08-11 22:20:52,804:INFO:Preloading libraries
2022-08-11 22:20:53,137:INFO:Set up data.
2022-08-11 22:20:53,529:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/1844309534.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_07'] = predict_model(model_y07, data=test_df)['prediction_label']

2022-08-11 22:21:41,688:INFO:PyCaret RegressionExperiment
2022-08-11 22:21:41,688:INFO:Logging name: reg-default-name
2022-08-11 22:21:41,688:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:21:41,688:INFO:version 3.0.0.rc3
2022-08-11 22:21:41,688:INFO:Initializing setup()
2022-08-11 22:21:41,688:INFO:self.USI: 8735
2022-08-11 22:21:41,688:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:21:41,689:INFO:Checking environment
2022-08-11 22:21:41,689:INFO:python_version: 3.8.8
2022-08-11 22:21:41,689:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:21:41,689:INFO:machine: x86_64
2022-08-11 22:21:41,689:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:21:41,689:INFO:Memory: svmem(total=34359738368, available=4220850176, percent=87.7, used=4171399168, free=479105024, active=3744010240, inactive=3734581248, wired=427388928)
2022-08-11 22:21:41,689:INFO:Physical Core: 10
2022-08-11 22:21:41,690:INFO:Logical Core: 10
2022-08-11 22:21:41,690:INFO:Checking libraries
2022-08-11 22:21:41,690:INFO:System:
2022-08-11 22:21:41,690:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:21:41,690:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:21:41,690:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:21:41,690:INFO:PyCaret required dependencies:
2022-08-11 22:21:41,690:INFO:                 pip: 22.1.2
2022-08-11 22:21:41,691:INFO:          setuptools: 61.2.0
2022-08-11 22:21:41,691:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:21:41,691:INFO:             IPython: 8.4.0
2022-08-11 22:21:41,691:INFO:          ipywidgets: 7.6.5
2022-08-11 22:21:41,691:INFO:                tqdm: 4.64.0
2022-08-11 22:21:41,691:INFO:               numpy: 1.22.4
2022-08-11 22:21:41,691:INFO:              pandas: 1.4.3
2022-08-11 22:21:41,691:INFO:              jinja2: 3.0.3
2022-08-11 22:21:41,691:INFO:               scipy: 1.5.4
2022-08-11 22:21:41,692:INFO:              joblib: 1.1.0
2022-08-11 22:21:41,692:INFO:             sklearn: 1.1.1
2022-08-11 22:21:41,692:INFO:                pyod: 1.0.4
2022-08-11 22:21:41,692:INFO:            imblearn: 0.9.1
2022-08-11 22:21:41,692:INFO:   category_encoders: 2.5.0
2022-08-11 22:21:41,692:INFO:            lightgbm: 3.2.1
2022-08-11 22:21:41,692:INFO:               numba: 0.55.2
2022-08-11 22:21:41,692:INFO:            requests: 2.28.1
2022-08-11 22:21:41,693:INFO:          matplotlib: 3.5.1
2022-08-11 22:21:41,693:INFO:          scikitplot: 0.3.7
2022-08-11 22:21:41,693:INFO:         yellowbrick: 1.4
2022-08-11 22:21:41,693:INFO:              plotly: 5.9.0
2022-08-11 22:21:41,693:INFO:             kaleido: 0.2.1
2022-08-11 22:21:41,693:INFO:         statsmodels: 0.13.2
2022-08-11 22:21:41,693:INFO:              sktime: 0.13.0
2022-08-11 22:21:41,694:INFO:               tbats: 1.1.0
2022-08-11 22:21:41,694:INFO:            pmdarima: 1.8.5
2022-08-11 22:21:41,694:INFO:              psutil: 5.9.1
2022-08-11 22:21:41,694:INFO:PyCaret optional dependencies:
2022-08-11 22:21:41,694:INFO:                shap: Not installed
2022-08-11 22:21:41,694:INFO:           interpret: Not installed
2022-08-11 22:21:41,694:INFO:                umap: 0.5.3
2022-08-11 22:21:41,694:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:21:41,694:INFO:  explainerdashboard: Not installed
2022-08-11 22:21:41,694:INFO:             autoviz: Not installed
2022-08-11 22:21:41,694:INFO:           fairlearn: Not installed
2022-08-11 22:21:41,695:INFO:             xgboost: 1.6.1
2022-08-11 22:21:41,695:INFO:            catboost: Not installed
2022-08-11 22:21:41,695:INFO:              kmodes: 0.12.1
2022-08-11 22:21:41,695:INFO:             mlxtend: 0.19.0
2022-08-11 22:21:41,695:INFO:       statsforecast: Not installed
2022-08-11 22:21:41,695:INFO:        tune_sklearn: Not installed
2022-08-11 22:21:41,695:INFO:                 ray: Not installed
2022-08-11 22:21:41,695:INFO:            hyperopt: Not installed
2022-08-11 22:21:41,695:INFO:              optuna: Not installed
2022-08-11 22:21:41,695:INFO:               skopt: Not installed
2022-08-11 22:21:41,695:INFO:              mlflow: 1.27.0
2022-08-11 22:21:41,695:INFO:              gradio: Not installed
2022-08-11 22:21:41,695:INFO:             fastapi: Not installed
2022-08-11 22:21:41,696:INFO:             uvicorn: Not installed
2022-08-11 22:21:41,696:INFO:              m2cgen: Not installed
2022-08-11 22:21:41,696:INFO:           evidently: Not installed
2022-08-11 22:21:41,696:INFO:                nltk: 3.7
2022-08-11 22:21:41,696:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:21:41,696:INFO:              gensim: 3.8.3
2022-08-11 22:21:41,696:INFO:               spacy: 2.3.7
2022-08-11 22:21:41,696:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:21:41,696:INFO:            textblob: 0.17.1
2022-08-11 22:21:41,696:INFO:               fugue: Not installed
2022-08-11 22:21:41,696:INFO:           streamlit: Not installed
2022-08-11 22:21:41,696:INFO:             prophet: Not installed
2022-08-11 22:21:41,696:INFO:None
2022-08-11 22:21:41,697:INFO:Set up data.
2022-08-11 22:21:41,730:INFO:Set up train/test split.
2022-08-11 22:21:41,746:INFO:Set up folding strategy.
2022-08-11 22:21:41,746:INFO:Assigning column types.
2022-08-11 22:21:41,754:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:21:41,755:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,759:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,764:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,870:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:41,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:41,872:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,877:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,882:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,944:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,987:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:41,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:41,989:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:21:41,994:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:21:41,998:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,057:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,102:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,103:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,110:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,223:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,225:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:21:42,235:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,297:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,341:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,353:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,416:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,460:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,462:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:21:42,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,573:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,689:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,692:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:21:42,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,801:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,878:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:21:42,921:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:42,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:42,924:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:21:43,037:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:43,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:43,149:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:43,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:43,152:INFO:Preparing preprocessing pipeline...
2022-08-11 22:21:43,153:INFO:Set up simple imputation.
2022-08-11 22:21:43,153:INFO:Set up variance threshold.
2022-08-11 22:21:43,331:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:21:43,334:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:21:43,334:INFO:Creating final display dataframe.
2022-08-11 22:21:44,010:INFO:Setup display_container:                Description             Value
0               Session id              5480
1                   Target              Y_08
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              8735
2022-08-11 22:21:44,116:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:44,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:44,219:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:21:44,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:21:44,236:INFO:setup() successfully completed in 2.55s...............
2022-08-11 22:21:44,239:INFO:Initializing compare_models()
2022-08-11 22:21:44,239:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:21:44,239:INFO:Checking exceptions
2022-08-11 22:21:44,244:INFO:Preparing display monitor
2022-08-11 22:21:44,267:INFO:Initializing Linear Regression
2022-08-11 22:21:44,267:INFO:Total runtime is 3.1828880310058593e-06 minutes
2022-08-11 22:21:44,269:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:44,270:INFO:Initializing create_model()
2022-08-11 22:21:44,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:44,270:INFO:Checking exceptions
2022-08-11 22:21:44,275:INFO:Importing libraries
2022-08-11 22:21:44,276:INFO:Copying training dataset
2022-08-11 22:21:44,283:INFO:Defining folds
2022-08-11 22:21:44,284:INFO:Declaring metric variables
2022-08-11 22:21:44,286:INFO:Importing untrained model
2022-08-11 22:21:44,288:INFO:Linear Regression Imported successfully
2022-08-11 22:21:44,292:INFO:Starting cross validation
2022-08-11 22:21:44,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:44,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:44,904:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:44,932:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:44,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:44,977:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:44,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:44,990:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,008:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,046:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,349:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,598:INFO:Calculating mean and std
2022-08-11 22:21:45,599:INFO:Creating metrics dataframe
2022-08-11 22:21:45,602:INFO:Uploading results into container
2022-08-11 22:21:45,602:INFO:Uploading model into container now
2022-08-11 22:21:45,603:INFO:master_model_container: 1
2022-08-11 22:21:45,603:INFO:display_container: 2
2022-08-11 22:21:45,603:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:21:45,603:INFO:create_model() successfully completed......................................
2022-08-11 22:21:45,719:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:45,719:INFO:Creating metrics dataframe
2022-08-11 22:21:45,725:INFO:Initializing Lasso Regression
2022-08-11 22:21:45,725:INFO:Total runtime is 0.02430245081583659 minutes
2022-08-11 22:21:45,728:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:45,729:INFO:Initializing create_model()
2022-08-11 22:21:45,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:45,729:INFO:Checking exceptions
2022-08-11 22:21:45,734:INFO:Importing libraries
2022-08-11 22:21:45,734:INFO:Copying training dataset
2022-08-11 22:21:45,743:INFO:Defining folds
2022-08-11 22:21:45,743:INFO:Declaring metric variables
2022-08-11 22:21:45,746:INFO:Importing untrained model
2022-08-11 22:21:45,749:INFO:Lasso Regression Imported successfully
2022-08-11 22:21:45,754:INFO:Starting cross validation
2022-08-11 22:21:45,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:45,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,902:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,931:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,948:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,956:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:45,962:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,081:INFO:Calculating mean and std
2022-08-11 22:21:46,083:INFO:Creating metrics dataframe
2022-08-11 22:21:46,086:INFO:Uploading results into container
2022-08-11 22:21:46,087:INFO:Uploading model into container now
2022-08-11 22:21:46,087:INFO:master_model_container: 2
2022-08-11 22:21:46,087:INFO:display_container: 2
2022-08-11 22:21:46,087:INFO:Lasso(random_state=5480)
2022-08-11 22:21:46,087:INFO:create_model() successfully completed......................................
2022-08-11 22:21:46,196:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:46,197:INFO:Creating metrics dataframe
2022-08-11 22:21:46,204:INFO:Initializing Ridge Regression
2022-08-11 22:21:46,204:INFO:Total runtime is 0.03228875001271566 minutes
2022-08-11 22:21:46,207:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:46,207:INFO:Initializing create_model()
2022-08-11 22:21:46,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:46,208:INFO:Checking exceptions
2022-08-11 22:21:46,212:INFO:Importing libraries
2022-08-11 22:21:46,212:INFO:Copying training dataset
2022-08-11 22:21:46,221:INFO:Defining folds
2022-08-11 22:21:46,221:INFO:Declaring metric variables
2022-08-11 22:21:46,223:INFO:Importing untrained model
2022-08-11 22:21:46,226:INFO:Ridge Regression Imported successfully
2022-08-11 22:21:46,231:INFO:Starting cross validation
2022-08-11 22:21:46,232:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:46,356:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,357:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,361:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,365:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,367:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,368:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,387:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,401:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,472:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,598:INFO:Calculating mean and std
2022-08-11 22:21:46,599:INFO:Creating metrics dataframe
2022-08-11 22:21:46,601:INFO:Uploading results into container
2022-08-11 22:21:46,602:INFO:Uploading model into container now
2022-08-11 22:21:46,602:INFO:master_model_container: 3
2022-08-11 22:21:46,602:INFO:display_container: 2
2022-08-11 22:21:46,603:INFO:Ridge(random_state=5480)
2022-08-11 22:21:46,603:INFO:create_model() successfully completed......................................
2022-08-11 22:21:46,712:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:46,712:INFO:Creating metrics dataframe
2022-08-11 22:21:46,718:INFO:Initializing Elastic Net
2022-08-11 22:21:46,718:INFO:Total runtime is 0.04085561434427897 minutes
2022-08-11 22:21:46,721:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:46,721:INFO:Initializing create_model()
2022-08-11 22:21:46,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:46,721:INFO:Checking exceptions
2022-08-11 22:21:46,726:INFO:Importing libraries
2022-08-11 22:21:46,726:INFO:Copying training dataset
2022-08-11 22:21:46,735:INFO:Defining folds
2022-08-11 22:21:46,735:INFO:Declaring metric variables
2022-08-11 22:21:46,738:INFO:Importing untrained model
2022-08-11 22:21:46,740:INFO:Elastic Net Imported successfully
2022-08-11 22:21:46,745:INFO:Starting cross validation
2022-08-11 22:21:46,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:46,864:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,866:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,874:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,880:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,891:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,901:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:46,967:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,086:INFO:Calculating mean and std
2022-08-11 22:21:47,087:INFO:Creating metrics dataframe
2022-08-11 22:21:47,089:INFO:Uploading results into container
2022-08-11 22:21:47,090:INFO:Uploading model into container now
2022-08-11 22:21:47,090:INFO:master_model_container: 4
2022-08-11 22:21:47,090:INFO:display_container: 2
2022-08-11 22:21:47,090:INFO:ElasticNet(random_state=5480)
2022-08-11 22:21:47,090:INFO:create_model() successfully completed......................................
2022-08-11 22:21:47,195:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:47,196:INFO:Creating metrics dataframe
2022-08-11 22:21:47,202:INFO:Initializing Least Angle Regression
2022-08-11 22:21:47,202:INFO:Total runtime is 0.04892110029856364 minutes
2022-08-11 22:21:47,204:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:47,204:INFO:Initializing create_model()
2022-08-11 22:21:47,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:47,204:INFO:Checking exceptions
2022-08-11 22:21:47,209:INFO:Importing libraries
2022-08-11 22:21:47,209:INFO:Copying training dataset
2022-08-11 22:21:47,218:INFO:Defining folds
2022-08-11 22:21:47,218:INFO:Declaring metric variables
2022-08-11 22:21:47,221:INFO:Importing untrained model
2022-08-11 22:21:47,224:INFO:Least Angle Regression Imported successfully
2022-08-11 22:21:47,229:INFO:Starting cross validation
2022-08-11 22:21:47,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:47,346:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,347:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,351:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,354:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,358:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,359:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,361:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,368:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,370:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,378:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,380:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,383:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,385:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,417:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:47,454:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,570:INFO:Calculating mean and std
2022-08-11 22:21:47,571:INFO:Creating metrics dataframe
2022-08-11 22:21:47,574:INFO:Uploading results into container
2022-08-11 22:21:47,574:INFO:Uploading model into container now
2022-08-11 22:21:47,574:INFO:master_model_container: 5
2022-08-11 22:21:47,574:INFO:display_container: 2
2022-08-11 22:21:47,575:INFO:Lars(random_state=5480)
2022-08-11 22:21:47,575:INFO:create_model() successfully completed......................................
2022-08-11 22:21:47,683:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:47,683:INFO:Creating metrics dataframe
2022-08-11 22:21:47,691:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:21:47,691:INFO:Total runtime is 0.057065101464589436 minutes
2022-08-11 22:21:47,693:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:47,694:INFO:Initializing create_model()
2022-08-11 22:21:47,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:47,694:INFO:Checking exceptions
2022-08-11 22:21:47,699:INFO:Importing libraries
2022-08-11 22:21:47,699:INFO:Copying training dataset
2022-08-11 22:21:47,707:INFO:Defining folds
2022-08-11 22:21:47,707:INFO:Declaring metric variables
2022-08-11 22:21:47,710:INFO:Importing untrained model
2022-08-11 22:21:47,713:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:21:47,718:INFO:Starting cross validation
2022-08-11 22:21:47,718:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:47,830:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,834:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,841:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,844:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,862:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,862:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,865:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,864:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,867:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,901:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,906:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,916:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:47,930:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:21:47,940:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,062:INFO:Calculating mean and std
2022-08-11 22:21:48,063:INFO:Creating metrics dataframe
2022-08-11 22:21:48,065:INFO:Uploading results into container
2022-08-11 22:21:48,066:INFO:Uploading model into container now
2022-08-11 22:21:48,066:INFO:master_model_container: 6
2022-08-11 22:21:48,066:INFO:display_container: 2
2022-08-11 22:21:48,066:INFO:LassoLars(random_state=5480)
2022-08-11 22:21:48,066:INFO:create_model() successfully completed......................................
2022-08-11 22:21:48,173:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:48,174:INFO:Creating metrics dataframe
2022-08-11 22:21:48,181:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:21:48,181:INFO:Total runtime is 0.0652360995610555 minutes
2022-08-11 22:21:48,184:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:48,184:INFO:Initializing create_model()
2022-08-11 22:21:48,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:48,184:INFO:Checking exceptions
2022-08-11 22:21:48,189:INFO:Importing libraries
2022-08-11 22:21:48,189:INFO:Copying training dataset
2022-08-11 22:21:48,197:INFO:Defining folds
2022-08-11 22:21:48,198:INFO:Declaring metric variables
2022-08-11 22:21:48,200:INFO:Importing untrained model
2022-08-11 22:21:48,203:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:21:48,207:INFO:Starting cross validation
2022-08-11 22:21:48,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:48,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,327:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,327:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,329:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,333:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,336:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,342:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,342:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,343:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,345:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,349:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,366:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,369:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,369:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,378:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,380:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,383:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,390:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,411:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:21:48,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:48,537:INFO:Calculating mean and std
2022-08-11 22:21:48,538:INFO:Creating metrics dataframe
2022-08-11 22:21:48,542:INFO:Uploading results into container
2022-08-11 22:21:48,542:INFO:Uploading model into container now
2022-08-11 22:21:48,543:INFO:master_model_container: 7
2022-08-11 22:21:48,543:INFO:display_container: 2
2022-08-11 22:21:48,543:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:21:48,543:INFO:create_model() successfully completed......................................
2022-08-11 22:21:48,650:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:48,650:INFO:Creating metrics dataframe
2022-08-11 22:21:48,657:INFO:Initializing Bayesian Ridge
2022-08-11 22:21:48,657:INFO:Total runtime is 0.07316470146179199 minutes
2022-08-11 22:21:48,659:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:48,659:INFO:Initializing create_model()
2022-08-11 22:21:48,660:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:48,660:INFO:Checking exceptions
2022-08-11 22:21:48,664:INFO:Importing libraries
2022-08-11 22:21:48,664:INFO:Copying training dataset
2022-08-11 22:21:48,672:INFO:Defining folds
2022-08-11 22:21:48,673:INFO:Declaring metric variables
2022-08-11 22:21:48,675:INFO:Importing untrained model
2022-08-11 22:21:48,678:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:21:48,682:INFO:Starting cross validation
2022-08-11 22:21:48,683:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:49,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,059:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,060:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,066:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,069:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,076:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,082:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,093:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,124:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,243:INFO:Calculating mean and std
2022-08-11 22:21:49,245:INFO:Creating metrics dataframe
2022-08-11 22:21:49,247:INFO:Uploading results into container
2022-08-11 22:21:49,247:INFO:Uploading model into container now
2022-08-11 22:21:49,247:INFO:master_model_container: 8
2022-08-11 22:21:49,248:INFO:display_container: 2
2022-08-11 22:21:49,248:INFO:BayesianRidge()
2022-08-11 22:21:49,248:INFO:create_model() successfully completed......................................
2022-08-11 22:21:49,354:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:49,354:INFO:Creating metrics dataframe
2022-08-11 22:21:49,361:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:21:49,361:INFO:Total runtime is 0.08490248521169026 minutes
2022-08-11 22:21:49,364:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:49,364:INFO:Initializing create_model()
2022-08-11 22:21:49,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:49,364:INFO:Checking exceptions
2022-08-11 22:21:49,369:INFO:Importing libraries
2022-08-11 22:21:49,369:INFO:Copying training dataset
2022-08-11 22:21:49,377:INFO:Defining folds
2022-08-11 22:21:49,377:INFO:Declaring metric variables
2022-08-11 22:21:49,380:INFO:Importing untrained model
2022-08-11 22:21:49,383:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:21:49,387:INFO:Starting cross validation
2022-08-11 22:21:49,388:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:49,592:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,622:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,651:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,672:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,734:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:49,857:INFO:Calculating mean and std
2022-08-11 22:21:49,859:INFO:Creating metrics dataframe
2022-08-11 22:21:49,861:INFO:Uploading results into container
2022-08-11 22:21:49,861:INFO:Uploading model into container now
2022-08-11 22:21:49,861:INFO:master_model_container: 9
2022-08-11 22:21:49,861:INFO:display_container: 2
2022-08-11 22:21:49,862:INFO:PassiveAggressiveRegressor(random_state=5480)
2022-08-11 22:21:49,862:INFO:create_model() successfully completed......................................
2022-08-11 22:21:49,970:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:49,970:INFO:Creating metrics dataframe
2022-08-11 22:21:49,978:INFO:Initializing Huber Regressor
2022-08-11 22:21:49,978:INFO:Total runtime is 0.09518238306045532 minutes
2022-08-11 22:21:49,981:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:49,981:INFO:Initializing create_model()
2022-08-11 22:21:49,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:49,981:INFO:Checking exceptions
2022-08-11 22:21:49,986:INFO:Importing libraries
2022-08-11 22:21:49,986:INFO:Copying training dataset
2022-08-11 22:21:49,994:INFO:Defining folds
2022-08-11 22:21:49,995:INFO:Declaring metric variables
2022-08-11 22:21:49,997:INFO:Importing untrained model
2022-08-11 22:21:50,000:INFO:Huber Regressor Imported successfully
2022-08-11 22:21:50,005:INFO:Starting cross validation
2022-08-11 22:21:50,005:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:50,893:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:50,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:50,987:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:50,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,015:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,017:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,053:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,054:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,071:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,072:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,076:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,094:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,095:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,109:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,109:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:21:51,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,231:INFO:Calculating mean and std
2022-08-11 22:21:51,232:INFO:Creating metrics dataframe
2022-08-11 22:21:51,234:INFO:Uploading results into container
2022-08-11 22:21:51,234:INFO:Uploading model into container now
2022-08-11 22:21:51,235:INFO:master_model_container: 10
2022-08-11 22:21:51,235:INFO:display_container: 2
2022-08-11 22:21:51,235:INFO:HuberRegressor()
2022-08-11 22:21:51,235:INFO:create_model() successfully completed......................................
2022-08-11 22:21:51,344:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:51,344:INFO:Creating metrics dataframe
2022-08-11 22:21:51,353:INFO:Initializing K Neighbors Regressor
2022-08-11 22:21:51,353:INFO:Total runtime is 0.1180993636449178 minutes
2022-08-11 22:21:51,355:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:51,356:INFO:Initializing create_model()
2022-08-11 22:21:51,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:51,356:INFO:Checking exceptions
2022-08-11 22:21:51,361:INFO:Importing libraries
2022-08-11 22:21:51,361:INFO:Copying training dataset
2022-08-11 22:21:51,370:INFO:Defining folds
2022-08-11 22:21:51,370:INFO:Declaring metric variables
2022-08-11 22:21:51,373:INFO:Importing untrained model
2022-08-11 22:21:51,376:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:21:51,381:INFO:Starting cross validation
2022-08-11 22:21:51,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:51,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,506:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,508:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,513:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,529:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,562:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:51,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:52,897:INFO:Calculating mean and std
2022-08-11 22:21:52,898:INFO:Creating metrics dataframe
2022-08-11 22:21:52,900:INFO:Uploading results into container
2022-08-11 22:21:52,901:INFO:Uploading model into container now
2022-08-11 22:21:52,901:INFO:master_model_container: 11
2022-08-11 22:21:52,901:INFO:display_container: 2
2022-08-11 22:21:52,902:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:21:52,902:INFO:create_model() successfully completed......................................
2022-08-11 22:21:53,009:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:53,009:INFO:Creating metrics dataframe
2022-08-11 22:21:53,016:INFO:Initializing Decision Tree Regressor
2022-08-11 22:21:53,016:INFO:Total runtime is 0.14582461913426717 minutes
2022-08-11 22:21:53,018:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:53,019:INFO:Initializing create_model()
2022-08-11 22:21:53,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:53,019:INFO:Checking exceptions
2022-08-11 22:21:53,023:INFO:Importing libraries
2022-08-11 22:21:53,024:INFO:Copying training dataset
2022-08-11 22:21:53,032:INFO:Defining folds
2022-08-11 22:21:53,032:INFO:Declaring metric variables
2022-08-11 22:21:53,035:INFO:Importing untrained model
2022-08-11 22:21:53,038:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:21:53,043:INFO:Starting cross validation
2022-08-11 22:21:53,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:21:54,334:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,403:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,405:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,508:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,534:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,636:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:21:54,756:INFO:Calculating mean and std
2022-08-11 22:21:54,757:INFO:Creating metrics dataframe
2022-08-11 22:21:54,759:INFO:Uploading results into container
2022-08-11 22:21:54,759:INFO:Uploading model into container now
2022-08-11 22:21:54,760:INFO:master_model_container: 12
2022-08-11 22:21:54,760:INFO:display_container: 2
2022-08-11 22:21:54,760:INFO:DecisionTreeRegressor(random_state=5480)
2022-08-11 22:21:54,760:INFO:create_model() successfully completed......................................
2022-08-11 22:21:54,865:INFO:SubProcess create_model() end ==================================
2022-08-11 22:21:54,865:INFO:Creating metrics dataframe
2022-08-11 22:21:54,873:INFO:Initializing Random Forest Regressor
2022-08-11 22:21:54,874:INFO:Total runtime is 0.17677806615829467 minutes
2022-08-11 22:21:54,877:INFO:SubProcess create_model() called ==================================
2022-08-11 22:21:54,877:INFO:Initializing create_model()
2022-08-11 22:21:54,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:21:54,877:INFO:Checking exceptions
2022-08-11 22:21:54,882:INFO:Importing libraries
2022-08-11 22:21:54,882:INFO:Copying training dataset
2022-08-11 22:21:54,890:INFO:Defining folds
2022-08-11 22:21:54,891:INFO:Declaring metric variables
2022-08-11 22:21:54,893:INFO:Importing untrained model
2022-08-11 22:21:54,896:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:21:54,901:INFO:Starting cross validation
2022-08-11 22:21:54,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:23:22,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,287:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,294:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,330:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,388:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,515:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:22,657:INFO:Calculating mean and std
2022-08-11 22:23:22,659:INFO:Creating metrics dataframe
2022-08-11 22:23:22,661:INFO:Uploading results into container
2022-08-11 22:23:22,662:INFO:Uploading model into container now
2022-08-11 22:23:22,662:INFO:master_model_container: 13
2022-08-11 22:23:22,663:INFO:display_container: 2
2022-08-11 22:23:22,663:INFO:RandomForestRegressor(n_jobs=-1, random_state=5480)
2022-08-11 22:23:22,663:INFO:create_model() successfully completed......................................
2022-08-11 22:23:22,771:INFO:SubProcess create_model() end ==================================
2022-08-11 22:23:22,771:INFO:Creating metrics dataframe
2022-08-11 22:23:22,779:INFO:Initializing Extra Trees Regressor
2022-08-11 22:23:22,779:INFO:Total runtime is 1.6418657819430034 minutes
2022-08-11 22:23:22,781:INFO:SubProcess create_model() called ==================================
2022-08-11 22:23:22,781:INFO:Initializing create_model()
2022-08-11 22:23:22,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:23:22,782:INFO:Checking exceptions
2022-08-11 22:23:22,786:INFO:Importing libraries
2022-08-11 22:23:22,786:INFO:Copying training dataset
2022-08-11 22:23:22,795:INFO:Defining folds
2022-08-11 22:23:22,796:INFO:Declaring metric variables
2022-08-11 22:23:22,799:INFO:Importing untrained model
2022-08-11 22:23:22,802:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:23:22,819:INFO:Starting cross validation
2022-08-11 22:23:22,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:23:52,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:52,771:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:54,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:54,492:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:54,792:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:55,933:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:56,163:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:57,342:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:57,502:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:57,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:23:58,692:INFO:Calculating mean and std
2022-08-11 22:23:58,694:INFO:Creating metrics dataframe
2022-08-11 22:23:58,696:INFO:Uploading results into container
2022-08-11 22:23:58,696:INFO:Uploading model into container now
2022-08-11 22:23:58,696:INFO:master_model_container: 14
2022-08-11 22:23:58,697:INFO:display_container: 2
2022-08-11 22:23:58,697:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5480)
2022-08-11 22:23:58,697:INFO:create_model() successfully completed......................................
2022-08-11 22:23:58,808:INFO:SubProcess create_model() end ==================================
2022-08-11 22:23:58,809:INFO:Creating metrics dataframe
2022-08-11 22:23:58,818:INFO:Initializing AdaBoost Regressor
2022-08-11 22:23:58,818:INFO:Total runtime is 2.2425144990285237 minutes
2022-08-11 22:23:58,820:INFO:SubProcess create_model() called ==================================
2022-08-11 22:23:58,820:INFO:Initializing create_model()
2022-08-11 22:23:58,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:23:58,820:INFO:Checking exceptions
2022-08-11 22:23:58,825:INFO:Importing libraries
2022-08-11 22:23:58,826:INFO:Copying training dataset
2022-08-11 22:23:58,835:INFO:Defining folds
2022-08-11 22:23:58,835:INFO:Declaring metric variables
2022-08-11 22:23:58,838:INFO:Importing untrained model
2022-08-11 22:23:58,841:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:23:58,846:INFO:Starting cross validation
2022-08-11 22:23:58,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:24:04,544:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:04,774:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:04,780:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:05,384:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:05,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:05,518:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:06,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:06,483:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:06,510:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:06,595:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:06,721:INFO:Calculating mean and std
2022-08-11 22:24:06,723:INFO:Creating metrics dataframe
2022-08-11 22:24:06,728:INFO:Uploading results into container
2022-08-11 22:24:06,728:INFO:Uploading model into container now
2022-08-11 22:24:06,729:INFO:master_model_container: 15
2022-08-11 22:24:06,729:INFO:display_container: 2
2022-08-11 22:24:06,729:INFO:AdaBoostRegressor(random_state=5480)
2022-08-11 22:24:06,729:INFO:create_model() successfully completed......................................
2022-08-11 22:24:06,866:INFO:SubProcess create_model() end ==================================
2022-08-11 22:24:06,867:INFO:Creating metrics dataframe
2022-08-11 22:24:06,876:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:24:06,876:INFO:Total runtime is 2.37682075103124 minutes
2022-08-11 22:24:06,879:INFO:SubProcess create_model() called ==================================
2022-08-11 22:24:06,880:INFO:Initializing create_model()
2022-08-11 22:24:06,880:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:24:06,880:INFO:Checking exceptions
2022-08-11 22:24:06,894:INFO:Importing libraries
2022-08-11 22:24:06,894:INFO:Copying training dataset
2022-08-11 22:24:06,909:INFO:Defining folds
2022-08-11 22:24:06,910:INFO:Declaring metric variables
2022-08-11 22:24:06,913:INFO:Importing untrained model
2022-08-11 22:24:06,916:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:24:06,922:INFO:Starting cross validation
2022-08-11 22:24:06,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:24:26,326:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,344:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,397:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,399:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,415:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,526:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,544:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:26,666:INFO:Calculating mean and std
2022-08-11 22:24:26,667:INFO:Creating metrics dataframe
2022-08-11 22:24:26,670:INFO:Uploading results into container
2022-08-11 22:24:26,670:INFO:Uploading model into container now
2022-08-11 22:24:26,670:INFO:master_model_container: 16
2022-08-11 22:24:26,671:INFO:display_container: 2
2022-08-11 22:24:26,671:INFO:GradientBoostingRegressor(random_state=5480)
2022-08-11 22:24:26,671:INFO:create_model() successfully completed......................................
2022-08-11 22:24:26,778:INFO:SubProcess create_model() end ==================================
2022-08-11 22:24:26,778:INFO:Creating metrics dataframe
2022-08-11 22:24:26,787:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:24:26,787:INFO:Total runtime is 2.708663515249888 minutes
2022-08-11 22:24:26,789:INFO:SubProcess create_model() called ==================================
2022-08-11 22:24:26,789:INFO:Initializing create_model()
2022-08-11 22:24:26,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:24:26,789:INFO:Checking exceptions
2022-08-11 22:24:26,802:INFO:Importing libraries
2022-08-11 22:24:26,802:INFO:Copying training dataset
2022-08-11 22:24:26,816:INFO:Defining folds
2022-08-11 22:24:26,816:INFO:Declaring metric variables
2022-08-11 22:24:26,820:INFO:Importing untrained model
2022-08-11 22:24:26,823:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:24:26,827:INFO:Starting cross validation
2022-08-11 22:24:26,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:24:38,066:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,067:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,130:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,216:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,251:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:38,326:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:39,111:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:39,244:INFO:Calculating mean and std
2022-08-11 22:24:39,246:INFO:Creating metrics dataframe
2022-08-11 22:24:39,248:INFO:Uploading results into container
2022-08-11 22:24:39,249:INFO:Uploading model into container now
2022-08-11 22:24:39,250:INFO:master_model_container: 17
2022-08-11 22:24:39,250:INFO:display_container: 2
2022-08-11 22:24:39,251:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=5480,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:24:39,251:INFO:create_model() successfully completed......................................
2022-08-11 22:24:39,361:INFO:SubProcess create_model() end ==================================
2022-08-11 22:24:39,361:INFO:Creating metrics dataframe
2022-08-11 22:24:39,370:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:24:39,370:INFO:Total runtime is 2.918392300605774 minutes
2022-08-11 22:24:39,373:INFO:SubProcess create_model() called ==================================
2022-08-11 22:24:39,373:INFO:Initializing create_model()
2022-08-11 22:24:39,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:24:39,373:INFO:Checking exceptions
2022-08-11 22:24:39,380:INFO:Importing libraries
2022-08-11 22:24:39,380:INFO:Copying training dataset
2022-08-11 22:24:39,391:INFO:Defining folds
2022-08-11 22:24:39,391:INFO:Declaring metric variables
2022-08-11 22:24:39,401:INFO:Importing untrained model
2022-08-11 22:24:39,407:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:24:39,413:INFO:Starting cross validation
2022-08-11 22:24:39,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:24:40,084:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,134:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,191:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,193:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,194:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,198:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,307:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,446:INFO:Calculating mean and std
2022-08-11 22:24:40,447:INFO:Creating metrics dataframe
2022-08-11 22:24:40,450:INFO:Uploading results into container
2022-08-11 22:24:40,450:INFO:Uploading model into container now
2022-08-11 22:24:40,451:INFO:master_model_container: 18
2022-08-11 22:24:40,451:INFO:display_container: 2
2022-08-11 22:24:40,451:INFO:LGBMRegressor(random_state=5480)
2022-08-11 22:24:40,451:INFO:create_model() successfully completed......................................
2022-08-11 22:24:40,564:INFO:SubProcess create_model() end ==================================
2022-08-11 22:24:40,564:INFO:Creating metrics dataframe
2022-08-11 22:24:40,574:INFO:Initializing Dummy Regressor
2022-08-11 22:24:40,574:INFO:Total runtime is 2.9384534796079 minutes
2022-08-11 22:24:40,576:INFO:SubProcess create_model() called ==================================
2022-08-11 22:24:40,576:INFO:Initializing create_model()
2022-08-11 22:24:40,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee9983490>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:24:40,576:INFO:Checking exceptions
2022-08-11 22:24:40,583:INFO:Importing libraries
2022-08-11 22:24:40,584:INFO:Copying training dataset
2022-08-11 22:24:40,595:INFO:Defining folds
2022-08-11 22:24:40,596:INFO:Declaring metric variables
2022-08-11 22:24:40,598:INFO:Importing untrained model
2022-08-11 22:24:40,602:INFO:Dummy Regressor Imported successfully
2022-08-11 22:24:40,607:INFO:Starting cross validation
2022-08-11 22:24:40,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:24:40,716:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,752:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,765:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,820:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:24:40,936:INFO:Calculating mean and std
2022-08-11 22:24:40,937:INFO:Creating metrics dataframe
2022-08-11 22:24:40,940:INFO:Uploading results into container
2022-08-11 22:24:40,940:INFO:Uploading model into container now
2022-08-11 22:24:40,940:INFO:master_model_container: 19
2022-08-11 22:24:40,941:INFO:display_container: 2
2022-08-11 22:24:40,941:INFO:DummyRegressor()
2022-08-11 22:24:40,941:INFO:create_model() successfully completed......................................
2022-08-11 22:24:41,049:INFO:SubProcess create_model() end ==================================
2022-08-11 22:24:41,049:INFO:Creating metrics dataframe
2022-08-11 22:24:41,065:INFO:Initializing create_model()
2022-08-11 22:24:41,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5480), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:24:41,066:INFO:Checking exceptions
2022-08-11 22:24:41,075:INFO:Importing libraries
2022-08-11 22:24:41,076:INFO:Copying training dataset
2022-08-11 22:24:41,086:INFO:Defining folds
2022-08-11 22:24:41,086:INFO:Declaring metric variables
2022-08-11 22:24:41,086:INFO:Importing untrained model
2022-08-11 22:24:41,086:INFO:Declaring custom model
2022-08-11 22:24:41,087:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:24:41,087:INFO:Cross validation set to False
2022-08-11 22:24:41,087:INFO:Fitting Model
2022-08-11 22:24:51,057:INFO:RandomForestRegressor(n_jobs=-1, random_state=5480)
2022-08-11 22:24:51,057:INFO:create_model() successfully completed......................................
2022-08-11 22:24:51,188:INFO:master_model_container: 19
2022-08-11 22:24:51,188:INFO:display_container: 2
2022-08-11 22:24:51,188:INFO:RandomForestRegressor(n_jobs=-1, random_state=5480)
2022-08-11 22:24:51,189:INFO:compare_models() successfully completed......................................
2022-08-11 22:25:19,402:INFO:Initializing create_model()
2022-08-11 22:25:19,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:25:19,403:INFO:Checking exceptions
2022-08-11 22:25:19,445:INFO:Importing libraries
2022-08-11 22:25:19,445:INFO:Copying training dataset
2022-08-11 22:25:19,468:INFO:Defining folds
2022-08-11 22:25:19,468:INFO:Declaring metric variables
2022-08-11 22:25:19,473:INFO:Importing untrained model
2022-08-11 22:25:19,477:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:25:19,484:INFO:Starting cross validation
2022-08-11 22:25:19,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:26:47,256:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,480:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,560:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,635:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,794:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,833:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:47,921:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:26:48,062:INFO:Calculating mean and std
2022-08-11 22:26:48,064:INFO:Creating metrics dataframe
2022-08-11 22:26:48,068:INFO:Finalizing model
2022-08-11 22:26:57,816:INFO:Uploading results into container
2022-08-11 22:26:57,816:INFO:Uploading model into container now
2022-08-11 22:26:57,823:INFO:master_model_container: 20
2022-08-11 22:26:57,824:INFO:display_container: 3
2022-08-11 22:26:57,824:INFO:RandomForestRegressor(n_jobs=-1, random_state=5480)
2022-08-11 22:26:57,824:INFO:create_model() successfully completed......................................
2022-08-11 22:26:57,938:INFO:Initializing finalize_model()
2022-08-11 22:26:57,938:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5480), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:26:57,939:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=5480)
2022-08-11 22:26:57,961:INFO:Initializing create_model()
2022-08-11 22:26:57,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=RandomForestRegressor(n_jobs=-1, random_state=5480), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:26:57,961:INFO:Checking exceptions
2022-08-11 22:26:57,963:INFO:Importing libraries
2022-08-11 22:26:57,963:INFO:Copying training dataset
2022-08-11 22:26:57,964:INFO:Defining folds
2022-08-11 22:26:57,965:INFO:Declaring metric variables
2022-08-11 22:26:57,965:INFO:Importing untrained model
2022-08-11 22:26:57,965:INFO:Declaring custom model
2022-08-11 22:26:57,966:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:26:57,966:INFO:Cross validation set to False
2022-08-11 22:26:57,966:INFO:Fitting Model
2022-08-11 22:27:12,824:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5480))])
2022-08-11 22:27:12,824:INFO:create_model() successfully completed......................................
2022-08-11 22:27:12,932:INFO:Initializing predict_model()
2022-08-11 22:27:12,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5480))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7f09347550>)
2022-08-11 22:27:12,932:INFO:Checking exceptions
2022-08-11 22:27:12,932:INFO:Preloading libraries
2022-08-11 22:27:13,222:INFO:Set up data.
2022-08-11 22:27:13,545:INFO:display_container: 4
2022-08-11 22:27:13,545:INFO:master_model_container: 20
2022-08-11 22:27:13,545:INFO:display_container: 4
2022-08-11 22:27:13,549:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5480))])
2022-08-11 22:27:13,549:INFO:finalize_model() successfully completed......................................
2022-08-11 22:27:13,656:INFO:Initializing predict_model()
2022-08-11 22:27:13,656:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee96bd310>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=5480))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e3985bf70>)
2022-08-11 22:27:13,656:INFO:Checking exceptions
2022-08-11 22:27:13,656:INFO:Preloading libraries
2022-08-11 22:27:13,917:INFO:Set up data.
2022-08-11 22:27:14,505:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/2377016056.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_08'] = predict_model(model_y08, data=test_df)['prediction_label']

2022-08-11 22:27:14,512:INFO:PyCaret RegressionExperiment
2022-08-11 22:27:14,512:INFO:Logging name: reg-default-name
2022-08-11 22:27:14,512:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:27:14,512:INFO:version 3.0.0.rc3
2022-08-11 22:27:14,512:INFO:Initializing setup()
2022-08-11 22:27:14,512:INFO:self.USI: 72ca
2022-08-11 22:27:14,512:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:27:14,512:INFO:Checking environment
2022-08-11 22:27:14,512:INFO:python_version: 3.8.8
2022-08-11 22:27:14,512:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:27:14,512:INFO:machine: x86_64
2022-08-11 22:27:14,512:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:27:14,513:INFO:Memory: svmem(total=34359738368, available=3997081600, percent=88.4, used=4373614592, free=66506752, active=3933917184, inactive=3897409536, wired=439697408)
2022-08-11 22:27:14,513:INFO:Physical Core: 10
2022-08-11 22:27:14,513:INFO:Logical Core: 10
2022-08-11 22:27:14,513:INFO:Checking libraries
2022-08-11 22:27:14,513:INFO:System:
2022-08-11 22:27:14,513:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:27:14,513:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:27:14,513:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:27:14,513:INFO:PyCaret required dependencies:
2022-08-11 22:27:14,513:INFO:                 pip: 22.1.2
2022-08-11 22:27:14,513:INFO:          setuptools: 61.2.0
2022-08-11 22:27:14,513:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:27:14,513:INFO:             IPython: 8.4.0
2022-08-11 22:27:14,513:INFO:          ipywidgets: 7.6.5
2022-08-11 22:27:14,513:INFO:                tqdm: 4.64.0
2022-08-11 22:27:14,513:INFO:               numpy: 1.22.4
2022-08-11 22:27:14,513:INFO:              pandas: 1.4.3
2022-08-11 22:27:14,513:INFO:              jinja2: 3.0.3
2022-08-11 22:27:14,513:INFO:               scipy: 1.5.4
2022-08-11 22:27:14,513:INFO:              joblib: 1.1.0
2022-08-11 22:27:14,513:INFO:             sklearn: 1.1.1
2022-08-11 22:27:14,513:INFO:                pyod: 1.0.4
2022-08-11 22:27:14,513:INFO:            imblearn: 0.9.1
2022-08-11 22:27:14,513:INFO:   category_encoders: 2.5.0
2022-08-11 22:27:14,513:INFO:            lightgbm: 3.2.1
2022-08-11 22:27:14,513:INFO:               numba: 0.55.2
2022-08-11 22:27:14,513:INFO:            requests: 2.28.1
2022-08-11 22:27:14,513:INFO:          matplotlib: 3.5.1
2022-08-11 22:27:14,513:INFO:          scikitplot: 0.3.7
2022-08-11 22:27:14,513:INFO:         yellowbrick: 1.4
2022-08-11 22:27:14,513:INFO:              plotly: 5.9.0
2022-08-11 22:27:14,513:INFO:             kaleido: 0.2.1
2022-08-11 22:27:14,514:INFO:         statsmodels: 0.13.2
2022-08-11 22:27:14,514:INFO:              sktime: 0.13.0
2022-08-11 22:27:14,514:INFO:               tbats: 1.1.0
2022-08-11 22:27:14,514:INFO:            pmdarima: 1.8.5
2022-08-11 22:27:14,514:INFO:              psutil: 5.9.1
2022-08-11 22:27:14,514:INFO:PyCaret optional dependencies:
2022-08-11 22:27:14,514:INFO:                shap: Not installed
2022-08-11 22:27:14,514:INFO:           interpret: Not installed
2022-08-11 22:27:14,514:INFO:                umap: 0.5.3
2022-08-11 22:27:14,514:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:27:14,514:INFO:  explainerdashboard: Not installed
2022-08-11 22:27:14,514:INFO:             autoviz: Not installed
2022-08-11 22:27:14,514:INFO:           fairlearn: Not installed
2022-08-11 22:27:14,514:INFO:             xgboost: 1.6.1
2022-08-11 22:27:14,514:INFO:            catboost: Not installed
2022-08-11 22:27:14,514:INFO:              kmodes: 0.12.1
2022-08-11 22:27:14,514:INFO:             mlxtend: 0.19.0
2022-08-11 22:27:14,514:INFO:       statsforecast: Not installed
2022-08-11 22:27:14,514:INFO:        tune_sklearn: Not installed
2022-08-11 22:27:14,514:INFO:                 ray: Not installed
2022-08-11 22:27:14,514:INFO:            hyperopt: Not installed
2022-08-11 22:27:14,514:INFO:              optuna: Not installed
2022-08-11 22:27:14,514:INFO:               skopt: Not installed
2022-08-11 22:27:14,514:INFO:              mlflow: 1.27.0
2022-08-11 22:27:14,514:INFO:              gradio: Not installed
2022-08-11 22:27:14,514:INFO:             fastapi: Not installed
2022-08-11 22:27:14,514:INFO:             uvicorn: Not installed
2022-08-11 22:27:14,514:INFO:              m2cgen: Not installed
2022-08-11 22:27:14,514:INFO:           evidently: Not installed
2022-08-11 22:27:14,514:INFO:                nltk: 3.7
2022-08-11 22:27:14,514:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:27:14,514:INFO:              gensim: 3.8.3
2022-08-11 22:27:14,514:INFO:               spacy: 2.3.7
2022-08-11 22:27:14,514:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:27:14,514:INFO:            textblob: 0.17.1
2022-08-11 22:27:14,514:INFO:               fugue: Not installed
2022-08-11 22:27:14,514:INFO:           streamlit: Not installed
2022-08-11 22:27:14,514:INFO:             prophet: Not installed
2022-08-11 22:27:14,514:INFO:None
2022-08-11 22:27:14,514:INFO:Set up data.
2022-08-11 22:27:14,542:INFO:Set up train/test split.
2022-08-11 22:27:14,554:INFO:Set up folding strategy.
2022-08-11 22:27:14,554:INFO:Assigning column types.
2022-08-11 22:27:14,560:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:27:14,561:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,565:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,569:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,623:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,663:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:14,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:14,666:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,670:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,674:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,770:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,770:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:14,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:14,772:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:27:14,776:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,780:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,877:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:14,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:14,884:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,888:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,945:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:14,985:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:14,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:14,988:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:27:14,996:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,093:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,103:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,199:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,202:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:27:15,265:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,306:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,374:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,414:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,417:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:27:15,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,521:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,587:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:27:15,626:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,629:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:27:15,735:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,841:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:15,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:15,843:INFO:Preparing preprocessing pipeline...
2022-08-11 22:27:15,844:INFO:Set up simple imputation.
2022-08-11 22:27:15,845:INFO:Set up variance threshold.
2022-08-11 22:27:16,012:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:27:16,016:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:27:16,016:INFO:Creating final display dataframe.
2022-08-11 22:27:16,694:INFO:Setup display_container:                Description             Value
0               Session id              6986
1                   Target              Y_09
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              72ca
2022-08-11 22:27:16,806:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:16,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:16,911:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:27:16,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:27:16,932:INFO:setup() successfully completed in 2.42s...............
2022-08-11 22:27:16,935:INFO:Initializing compare_models()
2022-08-11 22:27:16,936:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:27:16,936:INFO:Checking exceptions
2022-08-11 22:27:16,943:INFO:Preparing display monitor
2022-08-11 22:27:16,969:INFO:Initializing Linear Regression
2022-08-11 22:27:16,969:INFO:Total runtime is 3.401438395182292e-06 minutes
2022-08-11 22:27:16,971:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:16,972:INFO:Initializing create_model()
2022-08-11 22:27:16,972:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:16,972:INFO:Checking exceptions
2022-08-11 22:27:16,978:INFO:Importing libraries
2022-08-11 22:27:16,978:INFO:Copying training dataset
2022-08-11 22:27:16,988:INFO:Defining folds
2022-08-11 22:27:16,988:INFO:Declaring metric variables
2022-08-11 22:27:16,990:INFO:Importing untrained model
2022-08-11 22:27:16,993:INFO:Linear Regression Imported successfully
2022-08-11 22:27:16,997:INFO:Starting cross validation
2022-08-11 22:27:16,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:17,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,711:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,748:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,752:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,763:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,774:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,801:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:17,811:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,123:INFO:Calculating mean and std
2022-08-11 22:27:18,124:INFO:Creating metrics dataframe
2022-08-11 22:27:18,126:INFO:Uploading results into container
2022-08-11 22:27:18,127:INFO:Uploading model into container now
2022-08-11 22:27:18,128:INFO:master_model_container: 1
2022-08-11 22:27:18,128:INFO:display_container: 2
2022-08-11 22:27:18,128:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:27:18,128:INFO:create_model() successfully completed......................................
2022-08-11 22:27:18,233:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:18,234:INFO:Creating metrics dataframe
2022-08-11 22:27:18,239:INFO:Initializing Lasso Regression
2022-08-11 22:27:18,239:INFO:Total runtime is 0.02116170326868693 minutes
2022-08-11 22:27:18,241:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:18,241:INFO:Initializing create_model()
2022-08-11 22:27:18,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:18,241:INFO:Checking exceptions
2022-08-11 22:27:18,247:INFO:Importing libraries
2022-08-11 22:27:18,247:INFO:Copying training dataset
2022-08-11 22:27:18,256:INFO:Defining folds
2022-08-11 22:27:18,256:INFO:Declaring metric variables
2022-08-11 22:27:18,259:INFO:Importing untrained model
2022-08-11 22:27:18,262:INFO:Lasso Regression Imported successfully
2022-08-11 22:27:18,267:INFO:Starting cross validation
2022-08-11 22:27:18,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:18,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,399:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,406:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,434:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,460:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,472:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,474:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,595:INFO:Calculating mean and std
2022-08-11 22:27:18,597:INFO:Creating metrics dataframe
2022-08-11 22:27:18,599:INFO:Uploading results into container
2022-08-11 22:27:18,599:INFO:Uploading model into container now
2022-08-11 22:27:18,599:INFO:master_model_container: 2
2022-08-11 22:27:18,599:INFO:display_container: 2
2022-08-11 22:27:18,600:INFO:Lasso(random_state=6986)
2022-08-11 22:27:18,600:INFO:create_model() successfully completed......................................
2022-08-11 22:27:18,703:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:18,703:INFO:Creating metrics dataframe
2022-08-11 22:27:18,709:INFO:Initializing Ridge Regression
2022-08-11 22:27:18,709:INFO:Total runtime is 0.029006036122639973 minutes
2022-08-11 22:27:18,712:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:18,712:INFO:Initializing create_model()
2022-08-11 22:27:18,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:18,712:INFO:Checking exceptions
2022-08-11 22:27:18,716:INFO:Importing libraries
2022-08-11 22:27:18,716:INFO:Copying training dataset
2022-08-11 22:27:18,724:INFO:Defining folds
2022-08-11 22:27:18,724:INFO:Declaring metric variables
2022-08-11 22:27:18,727:INFO:Importing untrained model
2022-08-11 22:27:18,729:INFO:Ridge Regression Imported successfully
2022-08-11 22:27:18,734:INFO:Starting cross validation
2022-08-11 22:27:18,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:18,854:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,863:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,864:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,900:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,912:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,917:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:18,946:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,065:INFO:Calculating mean and std
2022-08-11 22:27:19,066:INFO:Creating metrics dataframe
2022-08-11 22:27:19,069:INFO:Uploading results into container
2022-08-11 22:27:19,070:INFO:Uploading model into container now
2022-08-11 22:27:19,070:INFO:master_model_container: 3
2022-08-11 22:27:19,070:INFO:display_container: 2
2022-08-11 22:27:19,070:INFO:Ridge(random_state=6986)
2022-08-11 22:27:19,070:INFO:create_model() successfully completed......................................
2022-08-11 22:27:19,174:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:19,174:INFO:Creating metrics dataframe
2022-08-11 22:27:19,180:INFO:Initializing Elastic Net
2022-08-11 22:27:19,180:INFO:Total runtime is 0.036855371793111165 minutes
2022-08-11 22:27:19,183:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:19,183:INFO:Initializing create_model()
2022-08-11 22:27:19,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:19,183:INFO:Checking exceptions
2022-08-11 22:27:19,190:INFO:Importing libraries
2022-08-11 22:27:19,190:INFO:Copying training dataset
2022-08-11 22:27:19,199:INFO:Defining folds
2022-08-11 22:27:19,199:INFO:Declaring metric variables
2022-08-11 22:27:19,202:INFO:Importing untrained model
2022-08-11 22:27:19,205:INFO:Elastic Net Imported successfully
2022-08-11 22:27:19,210:INFO:Starting cross validation
2022-08-11 22:27:19,210:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:19,332:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,339:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,346:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,350:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,354:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,392:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,411:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,531:INFO:Calculating mean and std
2022-08-11 22:27:19,532:INFO:Creating metrics dataframe
2022-08-11 22:27:19,534:INFO:Uploading results into container
2022-08-11 22:27:19,535:INFO:Uploading model into container now
2022-08-11 22:27:19,535:INFO:master_model_container: 4
2022-08-11 22:27:19,535:INFO:display_container: 2
2022-08-11 22:27:19,535:INFO:ElasticNet(random_state=6986)
2022-08-11 22:27:19,535:INFO:create_model() successfully completed......................................
2022-08-11 22:27:19,638:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:19,638:INFO:Creating metrics dataframe
2022-08-11 22:27:19,646:INFO:Initializing Least Angle Regression
2022-08-11 22:27:19,646:INFO:Total runtime is 0.044623053073883055 minutes
2022-08-11 22:27:19,649:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:19,649:INFO:Initializing create_model()
2022-08-11 22:27:19,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:19,650:INFO:Checking exceptions
2022-08-11 22:27:19,654:INFO:Importing libraries
2022-08-11 22:27:19,654:INFO:Copying training dataset
2022-08-11 22:27:19,662:INFO:Defining folds
2022-08-11 22:27:19,662:INFO:Declaring metric variables
2022-08-11 22:27:19,665:INFO:Importing untrained model
2022-08-11 22:27:19,668:INFO:Least Angle Regression Imported successfully
2022-08-11 22:27:19,674:INFO:Starting cross validation
2022-08-11 22:27:19,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:19,791:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,791:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,798:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,812:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,813:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,815:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,816:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,818:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,829:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,841:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,846:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,848:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,849:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,856:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:19,869:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:19,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,002:INFO:Calculating mean and std
2022-08-11 22:27:20,004:INFO:Creating metrics dataframe
2022-08-11 22:27:20,006:INFO:Uploading results into container
2022-08-11 22:27:20,006:INFO:Uploading model into container now
2022-08-11 22:27:20,006:INFO:master_model_container: 5
2022-08-11 22:27:20,007:INFO:display_container: 2
2022-08-11 22:27:20,007:INFO:Lars(random_state=6986)
2022-08-11 22:27:20,007:INFO:create_model() successfully completed......................................
2022-08-11 22:27:20,110:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:20,110:INFO:Creating metrics dataframe
2022-08-11 22:27:20,118:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:27:20,118:INFO:Total runtime is 0.052488001187642415 minutes
2022-08-11 22:27:20,121:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:20,121:INFO:Initializing create_model()
2022-08-11 22:27:20,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:20,121:INFO:Checking exceptions
2022-08-11 22:27:20,125:INFO:Importing libraries
2022-08-11 22:27:20,126:INFO:Copying training dataset
2022-08-11 22:27:20,133:INFO:Defining folds
2022-08-11 22:27:20,133:INFO:Declaring metric variables
2022-08-11 22:27:20,135:INFO:Importing untrained model
2022-08-11 22:27:20,138:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:27:20,143:INFO:Starting cross validation
2022-08-11 22:27:20,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:20,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,271:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,276:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,279:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,280:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,280:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,285:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,291:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,298:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,305:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,325:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,335:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,339:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:27:20,349:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,470:INFO:Calculating mean and std
2022-08-11 22:27:20,471:INFO:Creating metrics dataframe
2022-08-11 22:27:20,473:INFO:Uploading results into container
2022-08-11 22:27:20,473:INFO:Uploading model into container now
2022-08-11 22:27:20,474:INFO:master_model_container: 6
2022-08-11 22:27:20,474:INFO:display_container: 2
2022-08-11 22:27:20,474:INFO:LassoLars(random_state=6986)
2022-08-11 22:27:20,474:INFO:create_model() successfully completed......................................
2022-08-11 22:27:20,580:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:20,580:INFO:Creating metrics dataframe
2022-08-11 22:27:20,588:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:27:20,588:INFO:Total runtime is 0.0603131373723348 minutes
2022-08-11 22:27:20,591:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:20,591:INFO:Initializing create_model()
2022-08-11 22:27:20,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:20,591:INFO:Checking exceptions
2022-08-11 22:27:20,596:INFO:Importing libraries
2022-08-11 22:27:20,596:INFO:Copying training dataset
2022-08-11 22:27:20,604:INFO:Defining folds
2022-08-11 22:27:20,604:INFO:Declaring metric variables
2022-08-11 22:27:20,607:INFO:Importing untrained model
2022-08-11 22:27:20,609:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:27:20,615:INFO:Starting cross validation
2022-08-11 22:27:20,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:20,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,743:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,747:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,750:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,767:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,767:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,767:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,768:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,775:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,781:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,792:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,796:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,807:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,834:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:27:20,846:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:20,966:INFO:Calculating mean and std
2022-08-11 22:27:20,968:INFO:Creating metrics dataframe
2022-08-11 22:27:20,972:INFO:Uploading results into container
2022-08-11 22:27:20,972:INFO:Uploading model into container now
2022-08-11 22:27:20,973:INFO:master_model_container: 7
2022-08-11 22:27:20,973:INFO:display_container: 2
2022-08-11 22:27:20,974:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:27:20,974:INFO:create_model() successfully completed......................................
2022-08-11 22:27:21,076:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:21,076:INFO:Creating metrics dataframe
2022-08-11 22:27:21,083:INFO:Initializing Bayesian Ridge
2022-08-11 22:27:21,083:INFO:Total runtime is 0.06856617132822672 minutes
2022-08-11 22:27:21,085:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:21,086:INFO:Initializing create_model()
2022-08-11 22:27:21,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:21,086:INFO:Checking exceptions
2022-08-11 22:27:21,090:INFO:Importing libraries
2022-08-11 22:27:21,090:INFO:Copying training dataset
2022-08-11 22:27:21,098:INFO:Defining folds
2022-08-11 22:27:21,098:INFO:Declaring metric variables
2022-08-11 22:27:21,100:INFO:Importing untrained model
2022-08-11 22:27:21,104:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:27:21,109:INFO:Starting cross validation
2022-08-11 22:27:21,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:21,459:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,502:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,506:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,507:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,528:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,557:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,586:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:21,705:INFO:Calculating mean and std
2022-08-11 22:27:21,707:INFO:Creating metrics dataframe
2022-08-11 22:27:21,709:INFO:Uploading results into container
2022-08-11 22:27:21,709:INFO:Uploading model into container now
2022-08-11 22:27:21,709:INFO:master_model_container: 8
2022-08-11 22:27:21,710:INFO:display_container: 2
2022-08-11 22:27:21,710:INFO:BayesianRidge()
2022-08-11 22:27:21,710:INFO:create_model() successfully completed......................................
2022-08-11 22:27:21,814:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:21,814:INFO:Creating metrics dataframe
2022-08-11 22:27:21,821:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:27:21,821:INFO:Total runtime is 0.08086750507354735 minutes
2022-08-11 22:27:21,824:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:21,824:INFO:Initializing create_model()
2022-08-11 22:27:21,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:21,824:INFO:Checking exceptions
2022-08-11 22:27:21,829:INFO:Importing libraries
2022-08-11 22:27:21,829:INFO:Copying training dataset
2022-08-11 22:27:21,839:INFO:Defining folds
2022-08-11 22:27:21,839:INFO:Declaring metric variables
2022-08-11 22:27:21,843:INFO:Importing untrained model
2022-08-11 22:27:21,846:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:27:21,851:INFO:Starting cross validation
2022-08-11 22:27:21,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:22,043:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,107:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,111:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,144:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,159:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:22,300:INFO:Calculating mean and std
2022-08-11 22:27:22,301:INFO:Creating metrics dataframe
2022-08-11 22:27:22,303:INFO:Uploading results into container
2022-08-11 22:27:22,304:INFO:Uploading model into container now
2022-08-11 22:27:22,305:INFO:master_model_container: 9
2022-08-11 22:27:22,305:INFO:display_container: 2
2022-08-11 22:27:22,305:INFO:PassiveAggressiveRegressor(random_state=6986)
2022-08-11 22:27:22,305:INFO:create_model() successfully completed......................................
2022-08-11 22:27:22,410:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:22,410:INFO:Creating metrics dataframe
2022-08-11 22:27:22,417:INFO:Initializing Huber Regressor
2022-08-11 22:27:22,417:INFO:Total runtime is 0.09079930384953816 minutes
2022-08-11 22:27:22,419:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:22,420:INFO:Initializing create_model()
2022-08-11 22:27:22,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:22,420:INFO:Checking exceptions
2022-08-11 22:27:22,425:INFO:Importing libraries
2022-08-11 22:27:22,425:INFO:Copying training dataset
2022-08-11 22:27:22,433:INFO:Defining folds
2022-08-11 22:27:22,433:INFO:Declaring metric variables
2022-08-11 22:27:22,436:INFO:Importing untrained model
2022-08-11 22:27:22,439:INFO:Huber Regressor Imported successfully
2022-08-11 22:27:22,444:INFO:Starting cross validation
2022-08-11 22:27:22,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:23,424:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,434:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,450:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,466:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,514:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,515:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,522:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,523:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,528:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,529:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,547:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,548:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:27:23,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,678:INFO:Calculating mean and std
2022-08-11 22:27:23,680:INFO:Creating metrics dataframe
2022-08-11 22:27:23,683:INFO:Uploading results into container
2022-08-11 22:27:23,684:INFO:Uploading model into container now
2022-08-11 22:27:23,684:INFO:master_model_container: 10
2022-08-11 22:27:23,684:INFO:display_container: 2
2022-08-11 22:27:23,685:INFO:HuberRegressor()
2022-08-11 22:27:23,685:INFO:create_model() successfully completed......................................
2022-08-11 22:27:23,787:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:23,787:INFO:Creating metrics dataframe
2022-08-11 22:27:23,795:INFO:Initializing K Neighbors Regressor
2022-08-11 22:27:23,795:INFO:Total runtime is 0.113767405351003 minutes
2022-08-11 22:27:23,798:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:23,798:INFO:Initializing create_model()
2022-08-11 22:27:23,798:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:23,799:INFO:Checking exceptions
2022-08-11 22:27:23,803:INFO:Importing libraries
2022-08-11 22:27:23,803:INFO:Copying training dataset
2022-08-11 22:27:23,813:INFO:Defining folds
2022-08-11 22:27:23,813:INFO:Declaring metric variables
2022-08-11 22:27:23,816:INFO:Importing untrained model
2022-08-11 22:27:23,818:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:27:23,824:INFO:Starting cross validation
2022-08-11 22:27:23,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:23,942:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,951:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,954:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,958:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,959:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,975:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,979:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:23,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:24,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:24,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:25,262:INFO:Calculating mean and std
2022-08-11 22:27:25,264:INFO:Creating metrics dataframe
2022-08-11 22:27:25,267:INFO:Uploading results into container
2022-08-11 22:27:25,268:INFO:Uploading model into container now
2022-08-11 22:27:25,268:INFO:master_model_container: 11
2022-08-11 22:27:25,268:INFO:display_container: 2
2022-08-11 22:27:25,269:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:27:25,269:INFO:create_model() successfully completed......................................
2022-08-11 22:27:25,372:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:25,373:INFO:Creating metrics dataframe
2022-08-11 22:27:25,380:INFO:Initializing Decision Tree Regressor
2022-08-11 22:27:25,380:INFO:Total runtime is 0.14019181728363037 minutes
2022-08-11 22:27:25,383:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:25,383:INFO:Initializing create_model()
2022-08-11 22:27:25,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:25,384:INFO:Checking exceptions
2022-08-11 22:27:25,389:INFO:Importing libraries
2022-08-11 22:27:25,389:INFO:Copying training dataset
2022-08-11 22:27:25,398:INFO:Defining folds
2022-08-11 22:27:25,399:INFO:Declaring metric variables
2022-08-11 22:27:25,403:INFO:Importing untrained model
2022-08-11 22:27:25,405:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:27:25,411:INFO:Starting cross validation
2022-08-11 22:27:25,412:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:27:26,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,892:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,908:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,919:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,945:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:26,970:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:27,009:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:27,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:27:27,258:INFO:Calculating mean and std
2022-08-11 22:27:27,259:INFO:Creating metrics dataframe
2022-08-11 22:27:27,261:INFO:Uploading results into container
2022-08-11 22:27:27,261:INFO:Uploading model into container now
2022-08-11 22:27:27,261:INFO:master_model_container: 12
2022-08-11 22:27:27,261:INFO:display_container: 2
2022-08-11 22:27:27,262:INFO:DecisionTreeRegressor(random_state=6986)
2022-08-11 22:27:27,262:INFO:create_model() successfully completed......................................
2022-08-11 22:27:27,366:INFO:SubProcess create_model() end ==================================
2022-08-11 22:27:27,366:INFO:Creating metrics dataframe
2022-08-11 22:27:27,375:INFO:Initializing Random Forest Regressor
2022-08-11 22:27:27,375:INFO:Total runtime is 0.17344015041987101 minutes
2022-08-11 22:27:27,378:INFO:SubProcess create_model() called ==================================
2022-08-11 22:27:27,378:INFO:Initializing create_model()
2022-08-11 22:27:27,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:27:27,379:INFO:Checking exceptions
2022-08-11 22:27:27,382:INFO:Importing libraries
2022-08-11 22:27:27,383:INFO:Copying training dataset
2022-08-11 22:27:27,390:INFO:Defining folds
2022-08-11 22:27:27,391:INFO:Declaring metric variables
2022-08-11 22:27:27,394:INFO:Importing untrained model
2022-08-11 22:27:27,397:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:27:27,401:INFO:Starting cross validation
2022-08-11 22:27:27,402:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:28:55,084:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,138:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,240:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,366:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,383:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,491:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,504:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,581:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:28:55,728:INFO:Calculating mean and std
2022-08-11 22:28:55,730:INFO:Creating metrics dataframe
2022-08-11 22:28:55,733:INFO:Uploading results into container
2022-08-11 22:28:55,734:INFO:Uploading model into container now
2022-08-11 22:28:55,734:INFO:master_model_container: 13
2022-08-11 22:28:55,734:INFO:display_container: 2
2022-08-11 22:28:55,734:INFO:RandomForestRegressor(n_jobs=-1, random_state=6986)
2022-08-11 22:28:55,734:INFO:create_model() successfully completed......................................
2022-08-11 22:28:55,839:INFO:SubProcess create_model() end ==================================
2022-08-11 22:28:55,839:INFO:Creating metrics dataframe
2022-08-11 22:28:55,847:INFO:Initializing Extra Trees Regressor
2022-08-11 22:28:55,847:INFO:Total runtime is 1.6479679028193157 minutes
2022-08-11 22:28:55,850:INFO:SubProcess create_model() called ==================================
2022-08-11 22:28:55,850:INFO:Initializing create_model()
2022-08-11 22:28:55,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:28:55,850:INFO:Checking exceptions
2022-08-11 22:28:55,856:INFO:Importing libraries
2022-08-11 22:28:55,856:INFO:Copying training dataset
2022-08-11 22:28:55,864:INFO:Defining folds
2022-08-11 22:28:55,864:INFO:Declaring metric variables
2022-08-11 22:28:55,867:INFO:Importing untrained model
2022-08-11 22:28:55,870:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:28:55,875:INFO:Starting cross validation
2022-08-11 22:28:55,876:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:29:23,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:25,816:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:28,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:29,031:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:29,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:29,414:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:29,703:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:29,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:29,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:30,030:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:31,109:INFO:Calculating mean and std
2022-08-11 22:29:31,111:INFO:Creating metrics dataframe
2022-08-11 22:29:31,114:INFO:Uploading results into container
2022-08-11 22:29:31,115:INFO:Uploading model into container now
2022-08-11 22:29:31,115:INFO:master_model_container: 14
2022-08-11 22:29:31,115:INFO:display_container: 2
2022-08-11 22:29:31,115:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6986)
2022-08-11 22:29:31,115:INFO:create_model() successfully completed......................................
2022-08-11 22:29:31,237:INFO:SubProcess create_model() end ==================================
2022-08-11 22:29:31,238:INFO:Creating metrics dataframe
2022-08-11 22:29:31,246:INFO:Initializing AdaBoost Regressor
2022-08-11 22:29:31,246:INFO:Total runtime is 2.2379577358563743 minutes
2022-08-11 22:29:31,249:INFO:SubProcess create_model() called ==================================
2022-08-11 22:29:31,250:INFO:Initializing create_model()
2022-08-11 22:29:31,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:29:31,250:INFO:Checking exceptions
2022-08-11 22:29:31,257:INFO:Importing libraries
2022-08-11 22:29:31,257:INFO:Copying training dataset
2022-08-11 22:29:31,267:INFO:Defining folds
2022-08-11 22:29:31,267:INFO:Declaring metric variables
2022-08-11 22:29:31,270:INFO:Importing untrained model
2022-08-11 22:29:31,273:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:29:31,298:INFO:Starting cross validation
2022-08-11 22:29:31,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:29:31,789:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:702: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2022-08-11 22:29:36,941:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:37,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:37,473:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:37,541:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:37,582:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:37,785:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:37,974:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:39,521:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:39,599:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:40,248:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:40,378:INFO:Calculating mean and std
2022-08-11 22:29:40,380:INFO:Creating metrics dataframe
2022-08-11 22:29:40,384:INFO:Uploading results into container
2022-08-11 22:29:40,385:INFO:Uploading model into container now
2022-08-11 22:29:40,386:INFO:master_model_container: 15
2022-08-11 22:29:40,386:INFO:display_container: 2
2022-08-11 22:29:40,387:INFO:AdaBoostRegressor(random_state=6986)
2022-08-11 22:29:40,387:INFO:create_model() successfully completed......................................
2022-08-11 22:29:40,518:INFO:SubProcess create_model() end ==================================
2022-08-11 22:29:40,518:INFO:Creating metrics dataframe
2022-08-11 22:29:40,527:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:29:40,527:INFO:Total runtime is 2.3926398197809857 minutes
2022-08-11 22:29:40,530:INFO:SubProcess create_model() called ==================================
2022-08-11 22:29:40,530:INFO:Initializing create_model()
2022-08-11 22:29:40,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:29:40,530:INFO:Checking exceptions
2022-08-11 22:29:40,544:INFO:Importing libraries
2022-08-11 22:29:40,544:INFO:Copying training dataset
2022-08-11 22:29:40,558:INFO:Defining folds
2022-08-11 22:29:40,558:INFO:Declaring metric variables
2022-08-11 22:29:40,562:INFO:Importing untrained model
2022-08-11 22:29:40,565:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:29:40,570:INFO:Starting cross validation
2022-08-11 22:29:40,571:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:29:59,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:29:59,993:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,012:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,055:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,090:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,168:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,183:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,185:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,196:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,205:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:00,324:INFO:Calculating mean and std
2022-08-11 22:30:00,326:INFO:Creating metrics dataframe
2022-08-11 22:30:00,329:INFO:Uploading results into container
2022-08-11 22:30:00,330:INFO:Uploading model into container now
2022-08-11 22:30:00,330:INFO:master_model_container: 16
2022-08-11 22:30:00,330:INFO:display_container: 2
2022-08-11 22:30:00,331:INFO:GradientBoostingRegressor(random_state=6986)
2022-08-11 22:30:00,331:INFO:create_model() successfully completed......................................
2022-08-11 22:30:00,434:INFO:SubProcess create_model() end ==================================
2022-08-11 22:30:00,434:INFO:Creating metrics dataframe
2022-08-11 22:30:00,443:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:30:00,443:INFO:Total runtime is 2.7245623032251998 minutes
2022-08-11 22:30:00,446:INFO:SubProcess create_model() called ==================================
2022-08-11 22:30:00,446:INFO:Initializing create_model()
2022-08-11 22:30:00,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:30:00,446:INFO:Checking exceptions
2022-08-11 22:30:00,459:INFO:Importing libraries
2022-08-11 22:30:00,459:INFO:Copying training dataset
2022-08-11 22:30:00,468:INFO:Defining folds
2022-08-11 22:30:00,469:INFO:Declaring metric variables
2022-08-11 22:30:00,471:INFO:Importing untrained model
2022-08-11 22:30:00,475:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:30:00,480:INFO:Starting cross validation
2022-08-11 22:30:00,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:30:12,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,192:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,316:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,318:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,342:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,420:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:12,547:INFO:Calculating mean and std
2022-08-11 22:30:12,549:INFO:Creating metrics dataframe
2022-08-11 22:30:12,553:INFO:Uploading results into container
2022-08-11 22:30:12,553:INFO:Uploading model into container now
2022-08-11 22:30:12,553:INFO:master_model_container: 17
2022-08-11 22:30:12,554:INFO:display_container: 2
2022-08-11 22:30:12,554:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=6986,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:30:12,554:INFO:create_model() successfully completed......................................
2022-08-11 22:30:12,658:INFO:SubProcess create_model() end ==================================
2022-08-11 22:30:12,658:INFO:Creating metrics dataframe
2022-08-11 22:30:12,667:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:30:12,667:INFO:Total runtime is 2.9283021211624147 minutes
2022-08-11 22:30:12,670:INFO:SubProcess create_model() called ==================================
2022-08-11 22:30:12,671:INFO:Initializing create_model()
2022-08-11 22:30:12,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:30:12,671:INFO:Checking exceptions
2022-08-11 22:30:12,679:INFO:Importing libraries
2022-08-11 22:30:12,679:INFO:Copying training dataset
2022-08-11 22:30:12,686:INFO:Defining folds
2022-08-11 22:30:12,687:INFO:Declaring metric variables
2022-08-11 22:30:12,690:INFO:Importing untrained model
2022-08-11 22:30:12,693:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:30:12,699:INFO:Starting cross validation
2022-08-11 22:30:12,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:30:13,323:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,357:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,417:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,470:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,485:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,491:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,523:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,536:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,669:INFO:Calculating mean and std
2022-08-11 22:30:13,670:INFO:Creating metrics dataframe
2022-08-11 22:30:13,672:INFO:Uploading results into container
2022-08-11 22:30:13,672:INFO:Uploading model into container now
2022-08-11 22:30:13,673:INFO:master_model_container: 18
2022-08-11 22:30:13,673:INFO:display_container: 2
2022-08-11 22:30:13,673:INFO:LGBMRegressor(random_state=6986)
2022-08-11 22:30:13,673:INFO:create_model() successfully completed......................................
2022-08-11 22:30:13,777:INFO:SubProcess create_model() end ==================================
2022-08-11 22:30:13,777:INFO:Creating metrics dataframe
2022-08-11 22:30:13,786:INFO:Initializing Dummy Regressor
2022-08-11 22:30:13,786:INFO:Total runtime is 2.9469523509343465 minutes
2022-08-11 22:30:13,789:INFO:SubProcess create_model() called ==================================
2022-08-11 22:30:13,790:INFO:Initializing create_model()
2022-08-11 22:30:13,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7eca7f5f70>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:30:13,790:INFO:Checking exceptions
2022-08-11 22:30:13,799:INFO:Importing libraries
2022-08-11 22:30:13,799:INFO:Copying training dataset
2022-08-11 22:30:13,806:INFO:Defining folds
2022-08-11 22:30:13,807:INFO:Declaring metric variables
2022-08-11 22:30:13,809:INFO:Importing untrained model
2022-08-11 22:30:13,812:INFO:Dummy Regressor Imported successfully
2022-08-11 22:30:13,817:INFO:Starting cross validation
2022-08-11 22:30:13,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:30:13,936:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,937:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,942:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,955:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,962:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:13,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:14,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:30:14,013:INFO:Calculating mean and std
2022-08-11 22:30:14,014:INFO:Creating metrics dataframe
2022-08-11 22:30:14,017:INFO:Uploading results into container
2022-08-11 22:30:14,017:INFO:Uploading model into container now
2022-08-11 22:30:14,017:INFO:master_model_container: 19
2022-08-11 22:30:14,017:INFO:display_container: 2
2022-08-11 22:30:14,017:INFO:DummyRegressor()
2022-08-11 22:30:14,018:INFO:create_model() successfully completed......................................
2022-08-11 22:30:14,119:INFO:SubProcess create_model() end ==================================
2022-08-11 22:30:14,119:INFO:Creating metrics dataframe
2022-08-11 22:30:14,135:INFO:Initializing create_model()
2022-08-11 22:30:14,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6986), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:30:14,135:INFO:Checking exceptions
2022-08-11 22:30:14,143:INFO:Importing libraries
2022-08-11 22:30:14,143:INFO:Copying training dataset
2022-08-11 22:30:14,154:INFO:Defining folds
2022-08-11 22:30:14,154:INFO:Declaring metric variables
2022-08-11 22:30:14,154:INFO:Importing untrained model
2022-08-11 22:30:14,154:INFO:Declaring custom model
2022-08-11 22:30:14,155:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:30:14,155:INFO:Cross validation set to False
2022-08-11 22:30:14,155:INFO:Fitting Model
2022-08-11 22:30:24,540:INFO:RandomForestRegressor(n_jobs=-1, random_state=6986)
2022-08-11 22:30:24,540:INFO:create_model() successfully completed......................................
2022-08-11 22:30:24,670:INFO:master_model_container: 19
2022-08-11 22:30:24,670:INFO:display_container: 2
2022-08-11 22:30:24,670:INFO:RandomForestRegressor(n_jobs=-1, random_state=6986)
2022-08-11 22:30:24,670:INFO:compare_models() successfully completed......................................
2022-08-11 22:30:37,852:INFO:Initializing create_model()
2022-08-11 22:30:37,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:30:37,855:INFO:Checking exceptions
2022-08-11 22:30:37,900:INFO:Importing libraries
2022-08-11 22:30:37,901:INFO:Copying training dataset
2022-08-11 22:30:37,924:INFO:Defining folds
2022-08-11 22:30:37,924:INFO:Declaring metric variables
2022-08-11 22:30:37,928:INFO:Importing untrained model
2022-08-11 22:30:37,931:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:30:37,941:INFO:Starting cross validation
2022-08-11 22:30:37,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:06,271:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,650:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,809:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:06,976:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:07,067:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:07,067:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:07,226:INFO:Calculating mean and std
2022-08-11 22:32:07,227:INFO:Creating metrics dataframe
2022-08-11 22:32:07,231:INFO:Finalizing model
2022-08-11 22:32:17,018:INFO:Uploading results into container
2022-08-11 22:32:17,018:INFO:Uploading model into container now
2022-08-11 22:32:17,025:INFO:master_model_container: 20
2022-08-11 22:32:17,026:INFO:display_container: 3
2022-08-11 22:32:17,026:INFO:RandomForestRegressor(n_jobs=-1, random_state=6986)
2022-08-11 22:32:17,026:INFO:create_model() successfully completed......................................
2022-08-11 22:32:17,136:INFO:Initializing finalize_model()
2022-08-11 22:32:17,136:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6986), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:32:17,136:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=6986)
2022-08-11 22:32:17,154:INFO:Initializing create_model()
2022-08-11 22:32:17,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=RandomForestRegressor(n_jobs=-1, random_state=6986), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:32:17,154:INFO:Checking exceptions
2022-08-11 22:32:17,156:INFO:Importing libraries
2022-08-11 22:32:17,156:INFO:Copying training dataset
2022-08-11 22:32:17,158:INFO:Defining folds
2022-08-11 22:32:17,158:INFO:Declaring metric variables
2022-08-11 22:32:17,158:INFO:Importing untrained model
2022-08-11 22:32:17,158:INFO:Declaring custom model
2022-08-11 22:32:17,158:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:32:17,159:INFO:Cross validation set to False
2022-08-11 22:32:17,159:INFO:Fitting Model
2022-08-11 22:32:32,172:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6986))])
2022-08-11 22:32:32,173:INFO:create_model() successfully completed......................................
2022-08-11 22:32:32,284:INFO:Initializing predict_model()
2022-08-11 22:32:32,284:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6986))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7edd3541f0>)
2022-08-11 22:32:32,284:INFO:Checking exceptions
2022-08-11 22:32:32,284:INFO:Preloading libraries
2022-08-11 22:32:32,571:INFO:Set up data.
2022-08-11 22:32:32,898:INFO:display_container: 4
2022-08-11 22:32:32,898:INFO:master_model_container: 20
2022-08-11 22:32:32,898:INFO:display_container: 4
2022-08-11 22:32:32,902:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6986))])
2022-08-11 22:32:32,902:INFO:finalize_model() successfully completed......................................
2022-08-11 22:32:33,010:INFO:Initializing predict_model()
2022-08-11 22:32:33,011:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ee9976b50>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=6986))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e18185af0>)
2022-08-11 22:32:33,011:INFO:Checking exceptions
2022-08-11 22:32:33,011:INFO:Preloading libraries
2022-08-11 22:32:33,279:INFO:Set up data.
2022-08-11 22:32:33,864:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3460224208.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_09'] = predict_model(model_y09, data=test_df)['prediction_label']

2022-08-11 22:32:33,872:INFO:PyCaret RegressionExperiment
2022-08-11 22:32:33,872:INFO:Logging name: reg-default-name
2022-08-11 22:32:33,872:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:32:33,872:INFO:version 3.0.0.rc3
2022-08-11 22:32:33,872:INFO:Initializing setup()
2022-08-11 22:32:33,872:INFO:self.USI: d128
2022-08-11 22:32:33,872:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:32:33,872:INFO:Checking environment
2022-08-11 22:32:33,872:INFO:python_version: 3.8.8
2022-08-11 22:32:33,872:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:32:33,872:INFO:machine: x86_64
2022-08-11 22:32:33,872:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:32:33,872:INFO:Memory: svmem(total=34359738368, available=3968811008, percent=88.4, used=4350808064, free=59920384, active=3912376320, inactive=3875717120, wired=438431744)
2022-08-11 22:32:33,872:INFO:Physical Core: 10
2022-08-11 22:32:33,872:INFO:Logical Core: 10
2022-08-11 22:32:33,873:INFO:Checking libraries
2022-08-11 22:32:33,873:INFO:System:
2022-08-11 22:32:33,873:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:32:33,873:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:32:33,873:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:32:33,873:INFO:PyCaret required dependencies:
2022-08-11 22:32:33,873:INFO:                 pip: 22.1.2
2022-08-11 22:32:33,873:INFO:          setuptools: 61.2.0
2022-08-11 22:32:33,873:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:32:33,873:INFO:             IPython: 8.4.0
2022-08-11 22:32:33,873:INFO:          ipywidgets: 7.6.5
2022-08-11 22:32:33,873:INFO:                tqdm: 4.64.0
2022-08-11 22:32:33,873:INFO:               numpy: 1.22.4
2022-08-11 22:32:33,873:INFO:              pandas: 1.4.3
2022-08-11 22:32:33,873:INFO:              jinja2: 3.0.3
2022-08-11 22:32:33,873:INFO:               scipy: 1.5.4
2022-08-11 22:32:33,873:INFO:              joblib: 1.1.0
2022-08-11 22:32:33,873:INFO:             sklearn: 1.1.1
2022-08-11 22:32:33,873:INFO:                pyod: 1.0.4
2022-08-11 22:32:33,873:INFO:            imblearn: 0.9.1
2022-08-11 22:32:33,873:INFO:   category_encoders: 2.5.0
2022-08-11 22:32:33,873:INFO:            lightgbm: 3.2.1
2022-08-11 22:32:33,873:INFO:               numba: 0.55.2
2022-08-11 22:32:33,873:INFO:            requests: 2.28.1
2022-08-11 22:32:33,873:INFO:          matplotlib: 3.5.1
2022-08-11 22:32:33,873:INFO:          scikitplot: 0.3.7
2022-08-11 22:32:33,874:INFO:         yellowbrick: 1.4
2022-08-11 22:32:33,874:INFO:              plotly: 5.9.0
2022-08-11 22:32:33,874:INFO:             kaleido: 0.2.1
2022-08-11 22:32:33,874:INFO:         statsmodels: 0.13.2
2022-08-11 22:32:33,874:INFO:              sktime: 0.13.0
2022-08-11 22:32:33,874:INFO:               tbats: 1.1.0
2022-08-11 22:32:33,874:INFO:            pmdarima: 1.8.5
2022-08-11 22:32:33,874:INFO:              psutil: 5.9.1
2022-08-11 22:32:33,874:INFO:PyCaret optional dependencies:
2022-08-11 22:32:33,874:INFO:                shap: Not installed
2022-08-11 22:32:33,874:INFO:           interpret: Not installed
2022-08-11 22:32:33,874:INFO:                umap: 0.5.3
2022-08-11 22:32:33,874:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:32:33,874:INFO:  explainerdashboard: Not installed
2022-08-11 22:32:33,874:INFO:             autoviz: Not installed
2022-08-11 22:32:33,874:INFO:           fairlearn: Not installed
2022-08-11 22:32:33,874:INFO:             xgboost: 1.6.1
2022-08-11 22:32:33,874:INFO:            catboost: Not installed
2022-08-11 22:32:33,874:INFO:              kmodes: 0.12.1
2022-08-11 22:32:33,874:INFO:             mlxtend: 0.19.0
2022-08-11 22:32:33,874:INFO:       statsforecast: Not installed
2022-08-11 22:32:33,874:INFO:        tune_sklearn: Not installed
2022-08-11 22:32:33,874:INFO:                 ray: Not installed
2022-08-11 22:32:33,874:INFO:            hyperopt: Not installed
2022-08-11 22:32:33,874:INFO:              optuna: Not installed
2022-08-11 22:32:33,874:INFO:               skopt: Not installed
2022-08-11 22:32:33,874:INFO:              mlflow: 1.27.0
2022-08-11 22:32:33,874:INFO:              gradio: Not installed
2022-08-11 22:32:33,874:INFO:             fastapi: Not installed
2022-08-11 22:32:33,874:INFO:             uvicorn: Not installed
2022-08-11 22:32:33,874:INFO:              m2cgen: Not installed
2022-08-11 22:32:33,874:INFO:           evidently: Not installed
2022-08-11 22:32:33,874:INFO:                nltk: 3.7
2022-08-11 22:32:33,874:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:32:33,875:INFO:              gensim: 3.8.3
2022-08-11 22:32:33,875:INFO:               spacy: 2.3.7
2022-08-11 22:32:33,875:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:32:33,875:INFO:            textblob: 0.17.1
2022-08-11 22:32:33,875:INFO:               fugue: Not installed
2022-08-11 22:32:33,875:INFO:           streamlit: Not installed
2022-08-11 22:32:33,875:INFO:             prophet: Not installed
2022-08-11 22:32:33,875:INFO:None
2022-08-11 22:32:33,875:INFO:Set up data.
2022-08-11 22:32:33,904:INFO:Set up train/test split.
2022-08-11 22:32:33,917:INFO:Set up folding strategy.
2022-08-11 22:32:33,917:INFO:Assigning column types.
2022-08-11 22:32:33,924:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:32:33,924:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:32:33,928:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:32:33,932:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:32:33,989:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,041:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,044:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,048:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,052:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,108:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,149:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,151:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:32:34,155:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,159:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,256:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,263:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,267:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,323:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,363:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,364:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,366:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:32:34,374:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,431:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,471:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,472:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,482:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,539:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,579:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,579:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,581:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:32:34,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,686:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,752:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,792:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,795:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:32:34,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:34,900:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:34,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:34,966:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:32:35,007:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:35,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:35,009:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:32:35,116:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:35,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:35,224:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:35,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:35,226:INFO:Preparing preprocessing pipeline...
2022-08-11 22:32:35,228:INFO:Set up simple imputation.
2022-08-11 22:32:35,228:INFO:Set up variance threshold.
2022-08-11 22:32:35,402:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:32:35,406:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:32:35,406:INFO:Creating final display dataframe.
2022-08-11 22:32:36,078:INFO:Setup display_container:                Description             Value
0               Session id              2740
1                   Target              Y_10
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              d128
2022-08-11 22:32:36,188:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:36,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:36,292:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:32:36,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:32:36,309:INFO:setup() successfully completed in 2.44s...............
2022-08-11 22:32:36,312:INFO:Initializing compare_models()
2022-08-11 22:32:36,313:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:32:36,313:INFO:Checking exceptions
2022-08-11 22:32:36,323:INFO:Preparing display monitor
2022-08-11 22:32:36,348:INFO:Initializing Linear Regression
2022-08-11 22:32:36,348:INFO:Total runtime is 4.879633585611979e-06 minutes
2022-08-11 22:32:36,351:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:36,351:INFO:Initializing create_model()
2022-08-11 22:32:36,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:36,352:INFO:Checking exceptions
2022-08-11 22:32:36,361:INFO:Importing libraries
2022-08-11 22:32:36,361:INFO:Copying training dataset
2022-08-11 22:32:36,370:INFO:Defining folds
2022-08-11 22:32:36,370:INFO:Declaring metric variables
2022-08-11 22:32:36,372:INFO:Importing untrained model
2022-08-11 22:32:36,375:INFO:Linear Regression Imported successfully
2022-08-11 22:32:36,380:INFO:Starting cross validation
2022-08-11 22:32:36,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:37,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,103:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,146:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,156:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,162:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,164:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,173:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,188:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,478:INFO:Calculating mean and std
2022-08-11 22:32:37,479:INFO:Creating metrics dataframe
2022-08-11 22:32:37,481:INFO:Uploading results into container
2022-08-11 22:32:37,481:INFO:Uploading model into container now
2022-08-11 22:32:37,481:INFO:master_model_container: 1
2022-08-11 22:32:37,481:INFO:display_container: 2
2022-08-11 22:32:37,482:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:32:37,482:INFO:create_model() successfully completed......................................
2022-08-11 22:32:37,588:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:37,589:INFO:Creating metrics dataframe
2022-08-11 22:32:37,594:INFO:Initializing Lasso Regression
2022-08-11 22:32:37,594:INFO:Total runtime is 0.02076888084411621 minutes
2022-08-11 22:32:37,597:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:37,598:INFO:Initializing create_model()
2022-08-11 22:32:37,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:37,598:INFO:Checking exceptions
2022-08-11 22:32:37,609:INFO:Importing libraries
2022-08-11 22:32:37,610:INFO:Copying training dataset
2022-08-11 22:32:37,619:INFO:Defining folds
2022-08-11 22:32:37,619:INFO:Declaring metric variables
2022-08-11 22:32:37,621:INFO:Importing untrained model
2022-08-11 22:32:37,625:INFO:Lasso Regression Imported successfully
2022-08-11 22:32:37,629:INFO:Starting cross validation
2022-08-11 22:32:37,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:37,750:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,764:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,776:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,790:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,817:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,829:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:37,948:INFO:Calculating mean and std
2022-08-11 22:32:37,950:INFO:Creating metrics dataframe
2022-08-11 22:32:37,952:INFO:Uploading results into container
2022-08-11 22:32:37,952:INFO:Uploading model into container now
2022-08-11 22:32:37,952:INFO:master_model_container: 2
2022-08-11 22:32:37,952:INFO:display_container: 2
2022-08-11 22:32:37,953:INFO:Lasso(random_state=2740)
2022-08-11 22:32:37,953:INFO:create_model() successfully completed......................................
2022-08-11 22:32:38,056:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:38,057:INFO:Creating metrics dataframe
2022-08-11 22:32:38,062:INFO:Initializing Ridge Regression
2022-08-11 22:32:38,062:INFO:Total runtime is 0.028566463788350423 minutes
2022-08-11 22:32:38,064:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:38,064:INFO:Initializing create_model()
2022-08-11 22:32:38,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:38,064:INFO:Checking exceptions
2022-08-11 22:32:38,069:INFO:Importing libraries
2022-08-11 22:32:38,069:INFO:Copying training dataset
2022-08-11 22:32:38,078:INFO:Defining folds
2022-08-11 22:32:38,079:INFO:Declaring metric variables
2022-08-11 22:32:38,082:INFO:Importing untrained model
2022-08-11 22:32:38,084:INFO:Ridge Regression Imported successfully
2022-08-11 22:32:38,089:INFO:Starting cross validation
2022-08-11 22:32:38,089:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:38,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,229:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,230:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,410:INFO:Calculating mean and std
2022-08-11 22:32:38,411:INFO:Creating metrics dataframe
2022-08-11 22:32:38,414:INFO:Uploading results into container
2022-08-11 22:32:38,414:INFO:Uploading model into container now
2022-08-11 22:32:38,415:INFO:master_model_container: 3
2022-08-11 22:32:38,415:INFO:display_container: 2
2022-08-11 22:32:38,415:INFO:Ridge(random_state=2740)
2022-08-11 22:32:38,415:INFO:create_model() successfully completed......................................
2022-08-11 22:32:38,518:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:38,518:INFO:Creating metrics dataframe
2022-08-11 22:32:38,524:INFO:Initializing Elastic Net
2022-08-11 22:32:38,524:INFO:Total runtime is 0.036270546913146975 minutes
2022-08-11 22:32:38,527:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:38,527:INFO:Initializing create_model()
2022-08-11 22:32:38,527:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:38,527:INFO:Checking exceptions
2022-08-11 22:32:38,531:INFO:Importing libraries
2022-08-11 22:32:38,531:INFO:Copying training dataset
2022-08-11 22:32:38,539:INFO:Defining folds
2022-08-11 22:32:38,539:INFO:Declaring metric variables
2022-08-11 22:32:38,541:INFO:Importing untrained model
2022-08-11 22:32:38,544:INFO:Elastic Net Imported successfully
2022-08-11 22:32:38,550:INFO:Starting cross validation
2022-08-11 22:32:38,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:38,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,676:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,698:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,712:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,738:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,761:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:38,880:INFO:Calculating mean and std
2022-08-11 22:32:38,882:INFO:Creating metrics dataframe
2022-08-11 22:32:38,884:INFO:Uploading results into container
2022-08-11 22:32:38,884:INFO:Uploading model into container now
2022-08-11 22:32:38,885:INFO:master_model_container: 4
2022-08-11 22:32:38,885:INFO:display_container: 2
2022-08-11 22:32:38,885:INFO:ElasticNet(random_state=2740)
2022-08-11 22:32:38,885:INFO:create_model() successfully completed......................................
2022-08-11 22:32:38,988:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:38,988:INFO:Creating metrics dataframe
2022-08-11 22:32:38,995:INFO:Initializing Least Angle Regression
2022-08-11 22:32:38,995:INFO:Total runtime is 0.044119179248809814 minutes
2022-08-11 22:32:38,998:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:38,999:INFO:Initializing create_model()
2022-08-11 22:32:38,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:38,999:INFO:Checking exceptions
2022-08-11 22:32:39,005:INFO:Importing libraries
2022-08-11 22:32:39,005:INFO:Copying training dataset
2022-08-11 22:32:39,013:INFO:Defining folds
2022-08-11 22:32:39,013:INFO:Declaring metric variables
2022-08-11 22:32:39,016:INFO:Importing untrained model
2022-08-11 22:32:39,019:INFO:Least Angle Regression Imported successfully
2022-08-11 22:32:39,023:INFO:Starting cross validation
2022-08-11 22:32:39,024:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:39,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,152:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,156:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,158:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,161:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,163:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,168:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,178:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,179:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,180:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,189:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,196:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,197:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,208:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,224:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:39,226:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,239:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,358:INFO:Calculating mean and std
2022-08-11 22:32:39,360:INFO:Creating metrics dataframe
2022-08-11 22:32:39,362:INFO:Uploading results into container
2022-08-11 22:32:39,362:INFO:Uploading model into container now
2022-08-11 22:32:39,363:INFO:master_model_container: 5
2022-08-11 22:32:39,363:INFO:display_container: 2
2022-08-11 22:32:39,363:INFO:Lars(random_state=2740)
2022-08-11 22:32:39,363:INFO:create_model() successfully completed......................................
2022-08-11 22:32:39,466:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:39,466:INFO:Creating metrics dataframe
2022-08-11 22:32:39,473:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:32:39,473:INFO:Total runtime is 0.05207924842834473 minutes
2022-08-11 22:32:39,475:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:39,475:INFO:Initializing create_model()
2022-08-11 22:32:39,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:39,475:INFO:Checking exceptions
2022-08-11 22:32:39,480:INFO:Importing libraries
2022-08-11 22:32:39,480:INFO:Copying training dataset
2022-08-11 22:32:39,488:INFO:Defining folds
2022-08-11 22:32:39,488:INFO:Declaring metric variables
2022-08-11 22:32:39,490:INFO:Importing untrained model
2022-08-11 22:32:39,493:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:32:39,499:INFO:Starting cross validation
2022-08-11 22:32:39,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:39,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,621:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,624:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,631:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,644:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,647:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,658:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,669:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:32:39,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,696:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:39,815:INFO:Calculating mean and std
2022-08-11 22:32:39,816:INFO:Creating metrics dataframe
2022-08-11 22:32:39,818:INFO:Uploading results into container
2022-08-11 22:32:39,819:INFO:Uploading model into container now
2022-08-11 22:32:39,820:INFO:master_model_container: 6
2022-08-11 22:32:39,820:INFO:display_container: 2
2022-08-11 22:32:39,820:INFO:LassoLars(random_state=2740)
2022-08-11 22:32:39,820:INFO:create_model() successfully completed......................................
2022-08-11 22:32:39,926:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:39,926:INFO:Creating metrics dataframe
2022-08-11 22:32:39,932:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:32:39,932:INFO:Total runtime is 0.059734261035919195 minutes
2022-08-11 22:32:39,935:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:39,935:INFO:Initializing create_model()
2022-08-11 22:32:39,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:39,935:INFO:Checking exceptions
2022-08-11 22:32:39,939:INFO:Importing libraries
2022-08-11 22:32:39,939:INFO:Copying training dataset
2022-08-11 22:32:39,947:INFO:Defining folds
2022-08-11 22:32:39,947:INFO:Declaring metric variables
2022-08-11 22:32:39,949:INFO:Importing untrained model
2022-08-11 22:32:39,953:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:32:39,958:INFO:Starting cross validation
2022-08-11 22:32:39,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:40,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,086:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,087:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,091:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,103:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,117:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,120:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,121:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:32:40,226:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,346:INFO:Calculating mean and std
2022-08-11 22:32:40,347:INFO:Creating metrics dataframe
2022-08-11 22:32:40,349:INFO:Uploading results into container
2022-08-11 22:32:40,349:INFO:Uploading model into container now
2022-08-11 22:32:40,350:INFO:master_model_container: 7
2022-08-11 22:32:40,350:INFO:display_container: 2
2022-08-11 22:32:40,350:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:32:40,350:INFO:create_model() successfully completed......................................
2022-08-11 22:32:40,459:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:40,459:INFO:Creating metrics dataframe
2022-08-11 22:32:40,466:INFO:Initializing Bayesian Ridge
2022-08-11 22:32:40,467:INFO:Total runtime is 0.06864097913106283 minutes
2022-08-11 22:32:40,469:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:40,470:INFO:Initializing create_model()
2022-08-11 22:32:40,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:40,470:INFO:Checking exceptions
2022-08-11 22:32:40,474:INFO:Importing libraries
2022-08-11 22:32:40,475:INFO:Copying training dataset
2022-08-11 22:32:40,482:INFO:Defining folds
2022-08-11 22:32:40,482:INFO:Declaring metric variables
2022-08-11 22:32:40,485:INFO:Importing untrained model
2022-08-11 22:32:40,488:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:32:40,493:INFO:Starting cross validation
2022-08-11 22:32:40,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:40,815:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,856:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,906:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,909:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,913:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,935:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:40,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,053:INFO:Calculating mean and std
2022-08-11 22:32:41,054:INFO:Creating metrics dataframe
2022-08-11 22:32:41,057:INFO:Uploading results into container
2022-08-11 22:32:41,057:INFO:Uploading model into container now
2022-08-11 22:32:41,058:INFO:master_model_container: 8
2022-08-11 22:32:41,058:INFO:display_container: 2
2022-08-11 22:32:41,058:INFO:BayesianRidge()
2022-08-11 22:32:41,058:INFO:create_model() successfully completed......................................
2022-08-11 22:32:41,164:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:41,164:INFO:Creating metrics dataframe
2022-08-11 22:32:41,172:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:32:41,172:INFO:Total runtime is 0.08039961258570354 minutes
2022-08-11 22:32:41,175:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:41,175:INFO:Initializing create_model()
2022-08-11 22:32:41,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:41,175:INFO:Checking exceptions
2022-08-11 22:32:41,180:INFO:Importing libraries
2022-08-11 22:32:41,180:INFO:Copying training dataset
2022-08-11 22:32:41,191:INFO:Defining folds
2022-08-11 22:32:41,192:INFO:Declaring metric variables
2022-08-11 22:32:41,194:INFO:Importing untrained model
2022-08-11 22:32:41,197:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:32:41,202:INFO:Starting cross validation
2022-08-11 22:32:41,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:41,411:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,419:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,442:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,455:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,462:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,464:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,475:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,495:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,502:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:41,618:INFO:Calculating mean and std
2022-08-11 22:32:41,620:INFO:Creating metrics dataframe
2022-08-11 22:32:41,622:INFO:Uploading results into container
2022-08-11 22:32:41,623:INFO:Uploading model into container now
2022-08-11 22:32:41,623:INFO:master_model_container: 9
2022-08-11 22:32:41,623:INFO:display_container: 2
2022-08-11 22:32:41,623:INFO:PassiveAggressiveRegressor(random_state=2740)
2022-08-11 22:32:41,624:INFO:create_model() successfully completed......................................
2022-08-11 22:32:41,729:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:41,729:INFO:Creating metrics dataframe
2022-08-11 22:32:41,736:INFO:Initializing Huber Regressor
2022-08-11 22:32:41,736:INFO:Total runtime is 0.08979838291803996 minutes
2022-08-11 22:32:41,738:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:41,739:INFO:Initializing create_model()
2022-08-11 22:32:41,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:41,739:INFO:Checking exceptions
2022-08-11 22:32:41,745:INFO:Importing libraries
2022-08-11 22:32:41,745:INFO:Copying training dataset
2022-08-11 22:32:41,754:INFO:Defining folds
2022-08-11 22:32:41,754:INFO:Declaring metric variables
2022-08-11 22:32:41,757:INFO:Importing untrained model
2022-08-11 22:32:41,760:INFO:Huber Regressor Imported successfully
2022-08-11 22:32:41,765:INFO:Starting cross validation
2022-08-11 22:32:41,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:42,763:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,778:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,783:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,784:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,789:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,790:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,803:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,816:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,817:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,821:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,822:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,831:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,832:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,837:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:32:42,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:42,987:INFO:Calculating mean and std
2022-08-11 22:32:42,989:INFO:Creating metrics dataframe
2022-08-11 22:32:42,990:INFO:Uploading results into container
2022-08-11 22:32:42,991:INFO:Uploading model into container now
2022-08-11 22:32:42,992:INFO:master_model_container: 10
2022-08-11 22:32:42,992:INFO:display_container: 2
2022-08-11 22:32:42,992:INFO:HuberRegressor()
2022-08-11 22:32:42,992:INFO:create_model() successfully completed......................................
2022-08-11 22:32:43,098:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:43,098:INFO:Creating metrics dataframe
2022-08-11 22:32:43,105:INFO:Initializing K Neighbors Regressor
2022-08-11 22:32:43,105:INFO:Total runtime is 0.11261386473973592 minutes
2022-08-11 22:32:43,108:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:43,108:INFO:Initializing create_model()
2022-08-11 22:32:43,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:43,108:INFO:Checking exceptions
2022-08-11 22:32:43,112:INFO:Importing libraries
2022-08-11 22:32:43,112:INFO:Copying training dataset
2022-08-11 22:32:43,120:INFO:Defining folds
2022-08-11 22:32:43,120:INFO:Declaring metric variables
2022-08-11 22:32:43,123:INFO:Importing untrained model
2022-08-11 22:32:43,125:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:32:43,130:INFO:Starting cross validation
2022-08-11 22:32:43,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:43,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,263:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,265:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,273:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,275:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,275:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,289:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:43,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:44,542:INFO:Calculating mean and std
2022-08-11 22:32:44,543:INFO:Creating metrics dataframe
2022-08-11 22:32:44,545:INFO:Uploading results into container
2022-08-11 22:32:44,546:INFO:Uploading model into container now
2022-08-11 22:32:44,546:INFO:master_model_container: 11
2022-08-11 22:32:44,546:INFO:display_container: 2
2022-08-11 22:32:44,547:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:32:44,547:INFO:create_model() successfully completed......................................
2022-08-11 22:32:44,651:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:44,651:INFO:Creating metrics dataframe
2022-08-11 22:32:44,659:INFO:Initializing Decision Tree Regressor
2022-08-11 22:32:44,659:INFO:Total runtime is 0.13851276238759358 minutes
2022-08-11 22:32:44,661:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:44,662:INFO:Initializing create_model()
2022-08-11 22:32:44,662:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:44,662:INFO:Checking exceptions
2022-08-11 22:32:44,666:INFO:Importing libraries
2022-08-11 22:32:44,666:INFO:Copying training dataset
2022-08-11 22:32:44,674:INFO:Defining folds
2022-08-11 22:32:44,674:INFO:Declaring metric variables
2022-08-11 22:32:44,677:INFO:Importing untrained model
2022-08-11 22:32:44,686:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:32:44,694:INFO:Starting cross validation
2022-08-11 22:32:44,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:32:46,022:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,093:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,273:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,295:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,310:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,321:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,403:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:32:46,525:INFO:Calculating mean and std
2022-08-11 22:32:46,526:INFO:Creating metrics dataframe
2022-08-11 22:32:46,529:INFO:Uploading results into container
2022-08-11 22:32:46,529:INFO:Uploading model into container now
2022-08-11 22:32:46,530:INFO:master_model_container: 12
2022-08-11 22:32:46,530:INFO:display_container: 2
2022-08-11 22:32:46,530:INFO:DecisionTreeRegressor(random_state=2740)
2022-08-11 22:32:46,530:INFO:create_model() successfully completed......................................
2022-08-11 22:32:46,634:INFO:SubProcess create_model() end ==================================
2022-08-11 22:32:46,634:INFO:Creating metrics dataframe
2022-08-11 22:32:46,641:INFO:Initializing Random Forest Regressor
2022-08-11 22:32:46,642:INFO:Total runtime is 0.1715560833613078 minutes
2022-08-11 22:32:46,644:INFO:SubProcess create_model() called ==================================
2022-08-11 22:32:46,659:INFO:Initializing create_model()
2022-08-11 22:32:46,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:32:46,659:INFO:Checking exceptions
2022-08-11 22:32:46,666:INFO:Importing libraries
2022-08-11 22:32:46,666:INFO:Copying training dataset
2022-08-11 22:32:46,674:INFO:Defining folds
2022-08-11 22:32:46,675:INFO:Declaring metric variables
2022-08-11 22:32:46,677:INFO:Importing untrained model
2022-08-11 22:32:46,680:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:32:46,685:INFO:Starting cross validation
2022-08-11 22:32:46,686:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:34:17,496:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,014:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,151:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,313:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,379:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,379:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,425:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,559:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:18,704:INFO:Calculating mean and std
2022-08-11 22:34:18,706:INFO:Creating metrics dataframe
2022-08-11 22:34:18,707:INFO:Uploading results into container
2022-08-11 22:34:18,708:INFO:Uploading model into container now
2022-08-11 22:34:18,708:INFO:master_model_container: 13
2022-08-11 22:34:18,708:INFO:display_container: 2
2022-08-11 22:34:18,709:INFO:RandomForestRegressor(n_jobs=-1, random_state=2740)
2022-08-11 22:34:18,709:INFO:create_model() successfully completed......................................
2022-08-11 22:34:18,814:INFO:SubProcess create_model() end ==================================
2022-08-11 22:34:18,815:INFO:Creating metrics dataframe
2022-08-11 22:34:18,822:INFO:Initializing Extra Trees Regressor
2022-08-11 22:34:18,822:INFO:Total runtime is 1.7078993479410807 minutes
2022-08-11 22:34:18,825:INFO:SubProcess create_model() called ==================================
2022-08-11 22:34:18,825:INFO:Initializing create_model()
2022-08-11 22:34:18,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:34:18,825:INFO:Checking exceptions
2022-08-11 22:34:18,830:INFO:Importing libraries
2022-08-11 22:34:18,830:INFO:Copying training dataset
2022-08-11 22:34:18,838:INFO:Defining folds
2022-08-11 22:34:18,839:INFO:Declaring metric variables
2022-08-11 22:34:18,841:INFO:Importing untrained model
2022-08-11 22:34:18,844:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:34:18,850:INFO:Starting cross validation
2022-08-11 22:34:18,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:34:39,979:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:42,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:43,478:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:48,880:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:52,350:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:52,731:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:52,817:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:53,216:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:53,400:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:53,482:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:54,153:INFO:Calculating mean and std
2022-08-11 22:34:54,154:INFO:Creating metrics dataframe
2022-08-11 22:34:54,156:INFO:Uploading results into container
2022-08-11 22:34:54,157:INFO:Uploading model into container now
2022-08-11 22:34:54,157:INFO:master_model_container: 14
2022-08-11 22:34:54,157:INFO:display_container: 2
2022-08-11 22:34:54,158:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2740)
2022-08-11 22:34:54,158:INFO:create_model() successfully completed......................................
2022-08-11 22:34:54,265:INFO:SubProcess create_model() end ==================================
2022-08-11 22:34:54,266:INFO:Creating metrics dataframe
2022-08-11 22:34:54,274:INFO:Initializing AdaBoost Regressor
2022-08-11 22:34:54,274:INFO:Total runtime is 2.2987582166989644 minutes
2022-08-11 22:34:54,276:INFO:SubProcess create_model() called ==================================
2022-08-11 22:34:54,277:INFO:Initializing create_model()
2022-08-11 22:34:54,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:34:54,277:INFO:Checking exceptions
2022-08-11 22:34:54,282:INFO:Importing libraries
2022-08-11 22:34:54,282:INFO:Copying training dataset
2022-08-11 22:34:54,290:INFO:Defining folds
2022-08-11 22:34:54,290:INFO:Declaring metric variables
2022-08-11 22:34:54,293:INFO:Importing untrained model
2022-08-11 22:34:54,297:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:34:54,303:INFO:Starting cross validation
2022-08-11 22:34:54,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:34:59,193:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:59,334:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:59,476:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:34:59,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:00,057:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:00,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:00,322:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:00,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:00,420:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:00,907:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:01,033:INFO:Calculating mean and std
2022-08-11 22:35:01,035:INFO:Creating metrics dataframe
2022-08-11 22:35:01,039:INFO:Uploading results into container
2022-08-11 22:35:01,039:INFO:Uploading model into container now
2022-08-11 22:35:01,040:INFO:master_model_container: 15
2022-08-11 22:35:01,040:INFO:display_container: 2
2022-08-11 22:35:01,040:INFO:AdaBoostRegressor(random_state=2740)
2022-08-11 22:35:01,040:INFO:create_model() successfully completed......................................
2022-08-11 22:35:01,171:INFO:SubProcess create_model() end ==================================
2022-08-11 22:35:01,171:INFO:Creating metrics dataframe
2022-08-11 22:35:01,181:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:35:01,181:INFO:Total runtime is 2.4138831297556558 minutes
2022-08-11 22:35:01,184:INFO:SubProcess create_model() called ==================================
2022-08-11 22:35:01,185:INFO:Initializing create_model()
2022-08-11 22:35:01,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:35:01,185:INFO:Checking exceptions
2022-08-11 22:35:01,199:INFO:Importing libraries
2022-08-11 22:35:01,199:INFO:Copying training dataset
2022-08-11 22:35:01,212:INFO:Defining folds
2022-08-11 22:35:01,212:INFO:Declaring metric variables
2022-08-11 22:35:01,215:INFO:Importing untrained model
2022-08-11 22:35:01,218:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:35:01,223:INFO:Starting cross validation
2022-08-11 22:35:01,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:35:21,025:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,128:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,170:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,197:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,205:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,239:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,255:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,255:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:21,380:INFO:Calculating mean and std
2022-08-11 22:35:21,381:INFO:Creating metrics dataframe
2022-08-11 22:35:21,384:INFO:Uploading results into container
2022-08-11 22:35:21,384:INFO:Uploading model into container now
2022-08-11 22:35:21,385:INFO:master_model_container: 16
2022-08-11 22:35:21,385:INFO:display_container: 2
2022-08-11 22:35:21,385:INFO:GradientBoostingRegressor(random_state=2740)
2022-08-11 22:35:21,385:INFO:create_model() successfully completed......................................
2022-08-11 22:35:21,494:INFO:SubProcess create_model() end ==================================
2022-08-11 22:35:21,494:INFO:Creating metrics dataframe
2022-08-11 22:35:21,505:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:35:21,505:INFO:Total runtime is 2.752612447738647 minutes
2022-08-11 22:35:21,508:INFO:SubProcess create_model() called ==================================
2022-08-11 22:35:21,509:INFO:Initializing create_model()
2022-08-11 22:35:21,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:35:21,509:INFO:Checking exceptions
2022-08-11 22:35:21,520:INFO:Importing libraries
2022-08-11 22:35:21,520:INFO:Copying training dataset
2022-08-11 22:35:21,529:INFO:Defining folds
2022-08-11 22:35:21,529:INFO:Declaring metric variables
2022-08-11 22:35:21,532:INFO:Importing untrained model
2022-08-11 22:35:21,537:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:35:21,544:INFO:Starting cross validation
2022-08-11 22:35:21,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:35:33,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,754:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,799:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,824:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,858:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,889:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:33,937:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:34,066:INFO:Calculating mean and std
2022-08-11 22:35:34,067:INFO:Creating metrics dataframe
2022-08-11 22:35:34,069:INFO:Uploading results into container
2022-08-11 22:35:34,070:INFO:Uploading model into container now
2022-08-11 22:35:34,070:INFO:master_model_container: 17
2022-08-11 22:35:34,070:INFO:display_container: 2
2022-08-11 22:35:34,071:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=2740,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:35:34,071:INFO:create_model() successfully completed......................................
2022-08-11 22:35:34,177:INFO:SubProcess create_model() end ==================================
2022-08-11 22:35:34,177:INFO:Creating metrics dataframe
2022-08-11 22:35:34,186:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:35:34,186:INFO:Total runtime is 2.9639694134394325 minutes
2022-08-11 22:35:34,189:INFO:SubProcess create_model() called ==================================
2022-08-11 22:35:34,190:INFO:Initializing create_model()
2022-08-11 22:35:34,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:35:34,190:INFO:Checking exceptions
2022-08-11 22:35:34,198:INFO:Importing libraries
2022-08-11 22:35:34,199:INFO:Copying training dataset
2022-08-11 22:35:34,206:INFO:Defining folds
2022-08-11 22:35:34,206:INFO:Declaring metric variables
2022-08-11 22:35:34,209:INFO:Importing untrained model
2022-08-11 22:35:34,212:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:35:34,218:INFO:Starting cross validation
2022-08-11 22:35:34,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:35:34,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:34,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:34,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:34,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:34,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:34,994:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,020:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,052:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,198:INFO:Calculating mean and std
2022-08-11 22:35:35,199:INFO:Creating metrics dataframe
2022-08-11 22:35:35,201:INFO:Uploading results into container
2022-08-11 22:35:35,202:INFO:Uploading model into container now
2022-08-11 22:35:35,202:INFO:master_model_container: 18
2022-08-11 22:35:35,202:INFO:display_container: 2
2022-08-11 22:35:35,202:INFO:LGBMRegressor(random_state=2740)
2022-08-11 22:35:35,202:INFO:create_model() successfully completed......................................
2022-08-11 22:35:35,309:INFO:SubProcess create_model() end ==================================
2022-08-11 22:35:35,309:INFO:Creating metrics dataframe
2022-08-11 22:35:35,318:INFO:Initializing Dummy Regressor
2022-08-11 22:35:35,319:INFO:Total runtime is 2.98284101486206 minutes
2022-08-11 22:35:35,321:INFO:SubProcess create_model() called ==================================
2022-08-11 22:35:35,322:INFO:Initializing create_model()
2022-08-11 22:35:35,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f09428790>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:35:35,322:INFO:Checking exceptions
2022-08-11 22:35:35,327:INFO:Importing libraries
2022-08-11 22:35:35,327:INFO:Copying training dataset
2022-08-11 22:35:35,335:INFO:Defining folds
2022-08-11 22:35:35,336:INFO:Declaring metric variables
2022-08-11 22:35:35,338:INFO:Importing untrained model
2022-08-11 22:35:35,341:INFO:Dummy Regressor Imported successfully
2022-08-11 22:35:35,348:INFO:Starting cross validation
2022-08-11 22:35:35,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:35:35,460:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,481:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,482:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,517:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,525:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,546:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:35,662:INFO:Calculating mean and std
2022-08-11 22:35:35,663:INFO:Creating metrics dataframe
2022-08-11 22:35:35,666:INFO:Uploading results into container
2022-08-11 22:35:35,666:INFO:Uploading model into container now
2022-08-11 22:35:35,666:INFO:master_model_container: 19
2022-08-11 22:35:35,667:INFO:display_container: 2
2022-08-11 22:35:35,667:INFO:DummyRegressor()
2022-08-11 22:35:35,667:INFO:create_model() successfully completed......................................
2022-08-11 22:35:35,772:INFO:SubProcess create_model() end ==================================
2022-08-11 22:35:35,772:INFO:Creating metrics dataframe
2022-08-11 22:35:35,788:INFO:Initializing create_model()
2022-08-11 22:35:35,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=LGBMRegressor(random_state=2740), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:35:35,797:INFO:Checking exceptions
2022-08-11 22:35:35,806:INFO:Importing libraries
2022-08-11 22:35:35,807:INFO:Copying training dataset
2022-08-11 22:35:35,817:INFO:Defining folds
2022-08-11 22:35:35,817:INFO:Declaring metric variables
2022-08-11 22:35:35,817:INFO:Importing untrained model
2022-08-11 22:35:35,818:INFO:Declaring custom model
2022-08-11 22:35:35,818:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:35:35,818:INFO:Cross validation set to False
2022-08-11 22:35:35,819:INFO:Fitting Model
2022-08-11 22:35:38,209:INFO:LGBMRegressor(random_state=2740)
2022-08-11 22:35:38,210:INFO:create_model() successfully completed......................................
2022-08-11 22:35:38,340:INFO:master_model_container: 19
2022-08-11 22:35:38,341:INFO:display_container: 2
2022-08-11 22:35:38,341:INFO:LGBMRegressor(random_state=2740)
2022-08-11 22:35:38,341:INFO:compare_models() successfully completed......................................
2022-08-11 22:35:54,239:INFO:Initializing create_model()
2022-08-11 22:35:54,240:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:35:54,240:INFO:Checking exceptions
2022-08-11 22:35:54,285:INFO:Importing libraries
2022-08-11 22:35:54,285:INFO:Copying training dataset
2022-08-11 22:35:54,305:INFO:Defining folds
2022-08-11 22:35:54,305:INFO:Declaring metric variables
2022-08-11 22:35:54,308:INFO:Importing untrained model
2022-08-11 22:35:54,312:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:35:54,319:INFO:Starting cross validation
2022-08-11 22:35:54,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:35:55,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,094:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,161:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,200:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:35:55,336:INFO:Calculating mean and std
2022-08-11 22:35:55,338:INFO:Creating metrics dataframe
2022-08-11 22:35:55,341:INFO:Finalizing model
2022-08-11 22:35:57,226:INFO:Uploading results into container
2022-08-11 22:35:57,227:INFO:Uploading model into container now
2022-08-11 22:35:57,234:INFO:master_model_container: 20
2022-08-11 22:35:57,234:INFO:display_container: 3
2022-08-11 22:35:57,235:INFO:LGBMRegressor(random_state=2740)
2022-08-11 22:35:57,235:INFO:create_model() successfully completed......................................
2022-08-11 22:35:58,630:INFO:Initializing finalize_model()
2022-08-11 22:35:58,630:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=LGBMRegressor(random_state=2740), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:35:58,631:INFO:Finalizing LGBMRegressor(random_state=2740)
2022-08-11 22:35:58,650:INFO:Initializing create_model()
2022-08-11 22:35:58,650:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=LGBMRegressor(random_state=2740), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:35:58,650:INFO:Checking exceptions
2022-08-11 22:35:58,652:INFO:Importing libraries
2022-08-11 22:35:58,652:INFO:Copying training dataset
2022-08-11 22:35:58,654:INFO:Defining folds
2022-08-11 22:35:58,654:INFO:Declaring metric variables
2022-08-11 22:35:58,654:INFO:Importing untrained model
2022-08-11 22:35:58,655:INFO:Declaring custom model
2022-08-11 22:35:58,655:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:35:58,656:INFO:Cross validation set to False
2022-08-11 22:35:58,656:INFO:Fitting Model
2022-08-11 22:36:00,805:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2740))])
2022-08-11 22:36:00,805:INFO:create_model() successfully completed......................................
2022-08-11 22:36:00,922:INFO:Initializing predict_model()
2022-08-11 22:36:00,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2740))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9305af0>)
2022-08-11 22:36:00,922:INFO:Checking exceptions
2022-08-11 22:36:00,922:INFO:Preloading libraries
2022-08-11 22:36:00,927:INFO:Set up data.
2022-08-11 22:36:01,210:INFO:display_container: 4
2022-08-11 22:36:01,210:INFO:master_model_container: 20
2022-08-11 22:36:01,210:INFO:display_container: 4
2022-08-11 22:36:01,214:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2740))])
2022-08-11 22:36:01,214:INFO:finalize_model() successfully completed......................................
2022-08-11 22:36:01,331:INFO:Initializing predict_model()
2022-08-11 22:36:01,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e39a894c0>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=2740))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ebfca9820>)
2022-08-11 22:36:01,331:INFO:Checking exceptions
2022-08-11 22:36:01,332:INFO:Preloading libraries
2022-08-11 22:36:01,338:INFO:Set up data.
2022-08-11 22:36:01,868:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/185730202.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_10'] = predict_model(model_y10, data=test_df)['prediction_label']

2022-08-11 22:36:08,873:INFO:PyCaret RegressionExperiment
2022-08-11 22:36:08,873:INFO:Logging name: reg-default-name
2022-08-11 22:36:08,873:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:36:08,873:INFO:version 3.0.0.rc3
2022-08-11 22:36:08,873:INFO:Initializing setup()
2022-08-11 22:36:08,873:INFO:self.USI: e798
2022-08-11 22:36:08,873:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:36:08,874:INFO:Checking environment
2022-08-11 22:36:08,874:INFO:python_version: 3.8.8
2022-08-11 22:36:08,874:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:36:08,874:INFO:machine: x86_64
2022-08-11 22:36:08,874:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:36:08,874:INFO:Memory: svmem(total=34359738368, available=4136529920, percent=88.0, used=4076589056, free=466419712, active=3652210688, inactive=3631939584, wired=424378368)
2022-08-11 22:36:08,874:INFO:Physical Core: 10
2022-08-11 22:36:08,875:INFO:Logical Core: 10
2022-08-11 22:36:08,875:INFO:Checking libraries
2022-08-11 22:36:08,875:INFO:System:
2022-08-11 22:36:08,875:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:36:08,875:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:36:08,875:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:36:08,875:INFO:PyCaret required dependencies:
2022-08-11 22:36:08,876:INFO:                 pip: 22.1.2
2022-08-11 22:36:08,876:INFO:          setuptools: 61.2.0
2022-08-11 22:36:08,876:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:36:08,876:INFO:             IPython: 8.4.0
2022-08-11 22:36:08,876:INFO:          ipywidgets: 7.6.5
2022-08-11 22:36:08,876:INFO:                tqdm: 4.64.0
2022-08-11 22:36:08,876:INFO:               numpy: 1.22.4
2022-08-11 22:36:08,876:INFO:              pandas: 1.4.3
2022-08-11 22:36:08,876:INFO:              jinja2: 3.0.3
2022-08-11 22:36:08,876:INFO:               scipy: 1.5.4
2022-08-11 22:36:08,877:INFO:              joblib: 1.1.0
2022-08-11 22:36:08,877:INFO:             sklearn: 1.1.1
2022-08-11 22:36:08,877:INFO:                pyod: 1.0.4
2022-08-11 22:36:08,877:INFO:            imblearn: 0.9.1
2022-08-11 22:36:08,877:INFO:   category_encoders: 2.5.0
2022-08-11 22:36:08,877:INFO:            lightgbm: 3.2.1
2022-08-11 22:36:08,877:INFO:               numba: 0.55.2
2022-08-11 22:36:08,877:INFO:            requests: 2.28.1
2022-08-11 22:36:08,877:INFO:          matplotlib: 3.5.1
2022-08-11 22:36:08,877:INFO:          scikitplot: 0.3.7
2022-08-11 22:36:08,877:INFO:         yellowbrick: 1.4
2022-08-11 22:36:08,877:INFO:              plotly: 5.9.0
2022-08-11 22:36:08,878:INFO:             kaleido: 0.2.1
2022-08-11 22:36:08,878:INFO:         statsmodels: 0.13.2
2022-08-11 22:36:08,878:INFO:              sktime: 0.13.0
2022-08-11 22:36:08,878:INFO:               tbats: 1.1.0
2022-08-11 22:36:08,878:INFO:            pmdarima: 1.8.5
2022-08-11 22:36:08,878:INFO:              psutil: 5.9.1
2022-08-11 22:36:08,878:INFO:PyCaret optional dependencies:
2022-08-11 22:36:08,878:INFO:                shap: Not installed
2022-08-11 22:36:08,878:INFO:           interpret: Not installed
2022-08-11 22:36:08,879:INFO:                umap: 0.5.3
2022-08-11 22:36:08,879:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:36:08,879:INFO:  explainerdashboard: Not installed
2022-08-11 22:36:08,879:INFO:             autoviz: Not installed
2022-08-11 22:36:08,879:INFO:           fairlearn: Not installed
2022-08-11 22:36:08,879:INFO:             xgboost: 1.6.1
2022-08-11 22:36:08,879:INFO:            catboost: Not installed
2022-08-11 22:36:08,879:INFO:              kmodes: 0.12.1
2022-08-11 22:36:08,879:INFO:             mlxtend: 0.19.0
2022-08-11 22:36:08,880:INFO:       statsforecast: Not installed
2022-08-11 22:36:08,880:INFO:        tune_sklearn: Not installed
2022-08-11 22:36:08,880:INFO:                 ray: Not installed
2022-08-11 22:36:08,880:INFO:            hyperopt: Not installed
2022-08-11 22:36:08,880:INFO:              optuna: Not installed
2022-08-11 22:36:08,880:INFO:               skopt: Not installed
2022-08-11 22:36:08,880:INFO:              mlflow: 1.27.0
2022-08-11 22:36:08,880:INFO:              gradio: Not installed
2022-08-11 22:36:08,880:INFO:             fastapi: Not installed
2022-08-11 22:36:08,880:INFO:             uvicorn: Not installed
2022-08-11 22:36:08,880:INFO:              m2cgen: Not installed
2022-08-11 22:36:08,880:INFO:           evidently: Not installed
2022-08-11 22:36:08,881:INFO:                nltk: 3.7
2022-08-11 22:36:08,881:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:36:08,881:INFO:              gensim: 3.8.3
2022-08-11 22:36:08,881:INFO:               spacy: 2.3.7
2022-08-11 22:36:08,881:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:36:08,881:INFO:            textblob: 0.17.1
2022-08-11 22:36:08,881:INFO:               fugue: Not installed
2022-08-11 22:36:08,881:INFO:           streamlit: Not installed
2022-08-11 22:36:08,881:INFO:             prophet: Not installed
2022-08-11 22:36:08,881:INFO:None
2022-08-11 22:36:08,881:INFO:Set up data.
2022-08-11 22:36:08,921:INFO:Set up train/test split.
2022-08-11 22:36:08,944:INFO:Set up folding strategy.
2022-08-11 22:36:08,944:INFO:Assigning column types.
2022-08-11 22:36:08,956:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:36:08,956:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:36:08,961:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:36:08,965:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,069:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,072:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,076:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,081:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,139:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,182:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,185:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:36:09,190:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,195:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,302:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,303:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,310:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,315:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,420:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,420:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,423:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:36:09,431:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,490:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,533:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,544:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,647:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,647:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,650:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:36:09,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,767:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,880:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:09,883:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:36:09,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:09,996:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:09,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:10,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:36:10,113:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:10,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:10,116:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:36:10,226:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:10,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:10,341:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:10,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:10,344:INFO:Preparing preprocessing pipeline...
2022-08-11 22:36:10,345:INFO:Set up simple imputation.
2022-08-11 22:36:10,345:INFO:Set up variance threshold.
2022-08-11 22:36:10,529:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:36:10,533:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:36:10,533:INFO:Creating final display dataframe.
2022-08-11 22:36:11,255:INFO:Setup display_container:                Description             Value
0               Session id              1073
1                   Target              Y_11
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              e798
2022-08-11 22:36:11,369:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:11,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:11,479:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:36:11,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:36:11,499:INFO:setup() successfully completed in 2.63s...............
2022-08-11 22:36:11,503:INFO:Initializing compare_models()
2022-08-11 22:36:11,503:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:36:11,503:INFO:Checking exceptions
2022-08-11 22:36:11,509:INFO:Preparing display monitor
2022-08-11 22:36:11,535:INFO:Initializing Linear Regression
2022-08-11 22:36:11,535:INFO:Total runtime is 4.0173530578613285e-06 minutes
2022-08-11 22:36:11,538:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:11,538:INFO:Initializing create_model()
2022-08-11 22:36:11,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:11,538:INFO:Checking exceptions
2022-08-11 22:36:11,545:INFO:Importing libraries
2022-08-11 22:36:11,545:INFO:Copying training dataset
2022-08-11 22:36:11,554:INFO:Defining folds
2022-08-11 22:36:11,555:INFO:Declaring metric variables
2022-08-11 22:36:11,557:INFO:Importing untrained model
2022-08-11 22:36:11,560:INFO:Linear Regression Imported successfully
2022-08-11 22:36:11,565:INFO:Starting cross validation
2022-08-11 22:36:11,566:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:12,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,300:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,305:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,336:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,381:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,410:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,410:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,435:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,706:INFO:Calculating mean and std
2022-08-11 22:36:12,707:INFO:Creating metrics dataframe
2022-08-11 22:36:12,710:INFO:Uploading results into container
2022-08-11 22:36:12,710:INFO:Uploading model into container now
2022-08-11 22:36:12,711:INFO:master_model_container: 1
2022-08-11 22:36:12,711:INFO:display_container: 2
2022-08-11 22:36:12,711:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:36:12,711:INFO:create_model() successfully completed......................................
2022-08-11 22:36:12,824:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:12,824:INFO:Creating metrics dataframe
2022-08-11 22:36:12,829:INFO:Initializing Lasso Regression
2022-08-11 22:36:12,829:INFO:Total runtime is 0.02157504955927531 minutes
2022-08-11 22:36:12,831:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:12,832:INFO:Initializing create_model()
2022-08-11 22:36:12,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:12,832:INFO:Checking exceptions
2022-08-11 22:36:12,837:INFO:Importing libraries
2022-08-11 22:36:12,837:INFO:Copying training dataset
2022-08-11 22:36:12,845:INFO:Defining folds
2022-08-11 22:36:12,845:INFO:Declaring metric variables
2022-08-11 22:36:12,848:INFO:Importing untrained model
2022-08-11 22:36:12,851:INFO:Lasso Regression Imported successfully
2022-08-11 22:36:12,857:INFO:Starting cross validation
2022-08-11 22:36:12,858:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:12,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:12,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,008:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,032:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,037:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,063:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,078:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,080:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,223:INFO:Calculating mean and std
2022-08-11 22:36:13,224:INFO:Creating metrics dataframe
2022-08-11 22:36:13,226:INFO:Uploading results into container
2022-08-11 22:36:13,227:INFO:Uploading model into container now
2022-08-11 22:36:13,227:INFO:master_model_container: 2
2022-08-11 22:36:13,227:INFO:display_container: 2
2022-08-11 22:36:13,227:INFO:Lasso(random_state=1073)
2022-08-11 22:36:13,227:INFO:create_model() successfully completed......................................
2022-08-11 22:36:13,341:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:13,341:INFO:Creating metrics dataframe
2022-08-11 22:36:13,348:INFO:Initializing Ridge Regression
2022-08-11 22:36:13,348:INFO:Total runtime is 0.03021556536356608 minutes
2022-08-11 22:36:13,351:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:13,351:INFO:Initializing create_model()
2022-08-11 22:36:13,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:13,351:INFO:Checking exceptions
2022-08-11 22:36:13,360:INFO:Importing libraries
2022-08-11 22:36:13,361:INFO:Copying training dataset
2022-08-11 22:36:13,370:INFO:Defining folds
2022-08-11 22:36:13,371:INFO:Declaring metric variables
2022-08-11 22:36:13,374:INFO:Importing untrained model
2022-08-11 22:36:13,378:INFO:Ridge Regression Imported successfully
2022-08-11 22:36:13,383:INFO:Starting cross validation
2022-08-11 22:36:13,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:13,515:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,524:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,524:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,527:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,532:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,535:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,538:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,564:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,587:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,702:INFO:Calculating mean and std
2022-08-11 22:36:13,704:INFO:Creating metrics dataframe
2022-08-11 22:36:13,707:INFO:Uploading results into container
2022-08-11 22:36:13,708:INFO:Uploading model into container now
2022-08-11 22:36:13,708:INFO:master_model_container: 3
2022-08-11 22:36:13,708:INFO:display_container: 2
2022-08-11 22:36:13,709:INFO:Ridge(random_state=1073)
2022-08-11 22:36:13,709:INFO:create_model() successfully completed......................................
2022-08-11 22:36:13,822:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:13,822:INFO:Creating metrics dataframe
2022-08-11 22:36:13,829:INFO:Initializing Elastic Net
2022-08-11 22:36:13,829:INFO:Total runtime is 0.03823260466257731 minutes
2022-08-11 22:36:13,831:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:13,831:INFO:Initializing create_model()
2022-08-11 22:36:13,831:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:13,831:INFO:Checking exceptions
2022-08-11 22:36:13,837:INFO:Importing libraries
2022-08-11 22:36:13,837:INFO:Copying training dataset
2022-08-11 22:36:13,847:INFO:Defining folds
2022-08-11 22:36:13,848:INFO:Declaring metric variables
2022-08-11 22:36:13,850:INFO:Importing untrained model
2022-08-11 22:36:13,854:INFO:Elastic Net Imported successfully
2022-08-11 22:36:13,859:INFO:Starting cross validation
2022-08-11 22:36:13,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:13,985:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,994:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:13,995:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,002:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,006:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,022:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,031:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,099:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,218:INFO:Calculating mean and std
2022-08-11 22:36:14,219:INFO:Creating metrics dataframe
2022-08-11 22:36:14,221:INFO:Uploading results into container
2022-08-11 22:36:14,222:INFO:Uploading model into container now
2022-08-11 22:36:14,222:INFO:master_model_container: 4
2022-08-11 22:36:14,222:INFO:display_container: 2
2022-08-11 22:36:14,222:INFO:ElasticNet(random_state=1073)
2022-08-11 22:36:14,222:INFO:create_model() successfully completed......................................
2022-08-11 22:36:14,337:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:14,337:INFO:Creating metrics dataframe
2022-08-11 22:36:14,345:INFO:Initializing Least Angle Regression
2022-08-11 22:36:14,345:INFO:Total runtime is 0.046840814749399814 minutes
2022-08-11 22:36:14,348:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:14,348:INFO:Initializing create_model()
2022-08-11 22:36:14,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:14,348:INFO:Checking exceptions
2022-08-11 22:36:14,353:INFO:Importing libraries
2022-08-11 22:36:14,354:INFO:Copying training dataset
2022-08-11 22:36:14,362:INFO:Defining folds
2022-08-11 22:36:14,362:INFO:Declaring metric variables
2022-08-11 22:36:14,365:INFO:Importing untrained model
2022-08-11 22:36:14,368:INFO:Least Angle Regression Imported successfully
2022-08-11 22:36:14,373:INFO:Starting cross validation
2022-08-11 22:36:14,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:14,490:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,491:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,497:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,504:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,513:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,516:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,520:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,521:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,521:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,526:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,528:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,529:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,551:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,554:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,561:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:14,568:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,697:INFO:Calculating mean and std
2022-08-11 22:36:14,698:INFO:Creating metrics dataframe
2022-08-11 22:36:14,701:INFO:Uploading results into container
2022-08-11 22:36:14,702:INFO:Uploading model into container now
2022-08-11 22:36:14,702:INFO:master_model_container: 5
2022-08-11 22:36:14,702:INFO:display_container: 2
2022-08-11 22:36:14,703:INFO:Lars(random_state=1073)
2022-08-11 22:36:14,703:INFO:create_model() successfully completed......................................
2022-08-11 22:36:14,812:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:14,812:INFO:Creating metrics dataframe
2022-08-11 22:36:14,818:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:36:14,819:INFO:Total runtime is 0.0547295848528544 minutes
2022-08-11 22:36:14,821:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:14,821:INFO:Initializing create_model()
2022-08-11 22:36:14,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:14,821:INFO:Checking exceptions
2022-08-11 22:36:14,826:INFO:Importing libraries
2022-08-11 22:36:14,826:INFO:Copying training dataset
2022-08-11 22:36:14,835:INFO:Defining folds
2022-08-11 22:36:14,836:INFO:Declaring metric variables
2022-08-11 22:36:14,839:INFO:Importing untrained model
2022-08-11 22:36:14,842:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:36:14,846:INFO:Starting cross validation
2022-08-11 22:36:14,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:14,970:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,972:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,975:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,989:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,990:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:14,993:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,994:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:14,994:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,011:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,025:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:15,030:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:15,034:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:36:15,036:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,045:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,163:INFO:Calculating mean and std
2022-08-11 22:36:15,164:INFO:Creating metrics dataframe
2022-08-11 22:36:15,166:INFO:Uploading results into container
2022-08-11 22:36:15,167:INFO:Uploading model into container now
2022-08-11 22:36:15,167:INFO:master_model_container: 6
2022-08-11 22:36:15,167:INFO:display_container: 2
2022-08-11 22:36:15,168:INFO:LassoLars(random_state=1073)
2022-08-11 22:36:15,168:INFO:create_model() successfully completed......................................
2022-08-11 22:36:15,281:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:15,282:INFO:Creating metrics dataframe
2022-08-11 22:36:15,289:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:36:15,290:INFO:Total runtime is 0.0625793695449829 minutes
2022-08-11 22:36:15,292:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:15,293:INFO:Initializing create_model()
2022-08-11 22:36:15,293:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:15,293:INFO:Checking exceptions
2022-08-11 22:36:15,298:INFO:Importing libraries
2022-08-11 22:36:15,298:INFO:Copying training dataset
2022-08-11 22:36:15,307:INFO:Defining folds
2022-08-11 22:36:15,307:INFO:Declaring metric variables
2022-08-11 22:36:15,310:INFO:Importing untrained model
2022-08-11 22:36:15,313:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:36:15,319:INFO:Starting cross validation
2022-08-11 22:36:15,319:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:15,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,437:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,439:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,452:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,470:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,471:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,471:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,472:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,481:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,490:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,491:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,505:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,505:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,551:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:36:15,564:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:15,685:INFO:Calculating mean and std
2022-08-11 22:36:15,686:INFO:Creating metrics dataframe
2022-08-11 22:36:15,688:INFO:Uploading results into container
2022-08-11 22:36:15,689:INFO:Uploading model into container now
2022-08-11 22:36:15,690:INFO:master_model_container: 7
2022-08-11 22:36:15,690:INFO:display_container: 2
2022-08-11 22:36:15,690:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:36:15,690:INFO:create_model() successfully completed......................................
2022-08-11 22:36:15,804:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:15,804:INFO:Creating metrics dataframe
2022-08-11 22:36:15,811:INFO:Initializing Bayesian Ridge
2022-08-11 22:36:15,811:INFO:Total runtime is 0.07127018372217814 minutes
2022-08-11 22:36:15,814:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:15,814:INFO:Initializing create_model()
2022-08-11 22:36:15,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:15,814:INFO:Checking exceptions
2022-08-11 22:36:15,819:INFO:Importing libraries
2022-08-11 22:36:15,819:INFO:Copying training dataset
2022-08-11 22:36:15,828:INFO:Defining folds
2022-08-11 22:36:15,828:INFO:Declaring metric variables
2022-08-11 22:36:15,831:INFO:Importing untrained model
2022-08-11 22:36:15,834:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:36:15,839:INFO:Starting cross validation
2022-08-11 22:36:15,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:16,178:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,199:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,244:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,245:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,254:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,260:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,262:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,341:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,460:INFO:Calculating mean and std
2022-08-11 22:36:16,462:INFO:Creating metrics dataframe
2022-08-11 22:36:16,464:INFO:Uploading results into container
2022-08-11 22:36:16,464:INFO:Uploading model into container now
2022-08-11 22:36:16,464:INFO:master_model_container: 8
2022-08-11 22:36:16,465:INFO:display_container: 2
2022-08-11 22:36:16,465:INFO:BayesianRidge()
2022-08-11 22:36:16,465:INFO:create_model() successfully completed......................................
2022-08-11 22:36:16,575:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:16,575:INFO:Creating metrics dataframe
2022-08-11 22:36:16,582:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:36:16,583:INFO:Total runtime is 0.08412893613179524 minutes
2022-08-11 22:36:16,585:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:16,585:INFO:Initializing create_model()
2022-08-11 22:36:16,585:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:16,585:INFO:Checking exceptions
2022-08-11 22:36:16,589:INFO:Importing libraries
2022-08-11 22:36:16,590:INFO:Copying training dataset
2022-08-11 22:36:16,598:INFO:Defining folds
2022-08-11 22:36:16,599:INFO:Declaring metric variables
2022-08-11 22:36:16,601:INFO:Importing untrained model
2022-08-11 22:36:16,605:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:36:16,611:INFO:Starting cross validation
2022-08-11 22:36:16,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:16,795:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,796:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,812:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,830:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,848:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,852:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,862:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:16,883:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:17,002:INFO:Calculating mean and std
2022-08-11 22:36:17,003:INFO:Creating metrics dataframe
2022-08-11 22:36:17,006:INFO:Uploading results into container
2022-08-11 22:36:17,006:INFO:Uploading model into container now
2022-08-11 22:36:17,007:INFO:master_model_container: 9
2022-08-11 22:36:17,007:INFO:display_container: 2
2022-08-11 22:36:17,007:INFO:PassiveAggressiveRegressor(random_state=1073)
2022-08-11 22:36:17,007:INFO:create_model() successfully completed......................................
2022-08-11 22:36:17,121:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:17,121:INFO:Creating metrics dataframe
2022-08-11 22:36:17,127:INFO:Initializing Huber Regressor
2022-08-11 22:36:17,128:INFO:Total runtime is 0.09321396748224894 minutes
2022-08-11 22:36:17,130:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:17,130:INFO:Initializing create_model()
2022-08-11 22:36:17,131:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:17,131:INFO:Checking exceptions
2022-08-11 22:36:17,135:INFO:Importing libraries
2022-08-11 22:36:17,136:INFO:Copying training dataset
2022-08-11 22:36:17,144:INFO:Defining folds
2022-08-11 22:36:17,144:INFO:Declaring metric variables
2022-08-11 22:36:17,147:INFO:Importing untrained model
2022-08-11 22:36:17,150:INFO:Huber Regressor Imported successfully
2022-08-11 22:36:17,156:INFO:Starting cross validation
2022-08-11 22:36:17,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:17,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,097:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,098:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,114:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,143:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,155:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,162:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,163:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,171:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,173:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:36:18,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,175:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,294:INFO:Calculating mean and std
2022-08-11 22:36:18,296:INFO:Creating metrics dataframe
2022-08-11 22:36:18,298:INFO:Uploading results into container
2022-08-11 22:36:18,299:INFO:Uploading model into container now
2022-08-11 22:36:18,299:INFO:master_model_container: 10
2022-08-11 22:36:18,299:INFO:display_container: 2
2022-08-11 22:36:18,299:INFO:HuberRegressor()
2022-08-11 22:36:18,299:INFO:create_model() successfully completed......................................
2022-08-11 22:36:18,410:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:18,410:INFO:Creating metrics dataframe
2022-08-11 22:36:18,417:INFO:Initializing K Neighbors Regressor
2022-08-11 22:36:18,417:INFO:Total runtime is 0.11470643281936646 minutes
2022-08-11 22:36:18,419:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:18,419:INFO:Initializing create_model()
2022-08-11 22:36:18,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:18,419:INFO:Checking exceptions
2022-08-11 22:36:18,425:INFO:Importing libraries
2022-08-11 22:36:18,425:INFO:Copying training dataset
2022-08-11 22:36:18,433:INFO:Defining folds
2022-08-11 22:36:18,434:INFO:Declaring metric variables
2022-08-11 22:36:18,437:INFO:Importing untrained model
2022-08-11 22:36:18,440:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:36:18,445:INFO:Starting cross validation
2022-08-11 22:36:18,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:18,563:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,581:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,582:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:18,694:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:19,774:INFO:Calculating mean and std
2022-08-11 22:36:19,775:INFO:Creating metrics dataframe
2022-08-11 22:36:19,777:INFO:Uploading results into container
2022-08-11 22:36:19,778:INFO:Uploading model into container now
2022-08-11 22:36:19,778:INFO:master_model_container: 11
2022-08-11 22:36:19,778:INFO:display_container: 2
2022-08-11 22:36:19,778:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:36:19,779:INFO:create_model() successfully completed......................................
2022-08-11 22:36:19,888:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:19,889:INFO:Creating metrics dataframe
2022-08-11 22:36:19,896:INFO:Initializing Decision Tree Regressor
2022-08-11 22:36:19,896:INFO:Total runtime is 0.13935928344726564 minutes
2022-08-11 22:36:19,899:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:19,899:INFO:Initializing create_model()
2022-08-11 22:36:19,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:19,899:INFO:Checking exceptions
2022-08-11 22:36:19,903:INFO:Importing libraries
2022-08-11 22:36:19,903:INFO:Copying training dataset
2022-08-11 22:36:19,913:INFO:Defining folds
2022-08-11 22:36:19,913:INFO:Declaring metric variables
2022-08-11 22:36:19,916:INFO:Importing untrained model
2022-08-11 22:36:19,920:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:36:19,925:INFO:Starting cross validation
2022-08-11 22:36:19,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:36:21,343:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,461:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,487:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,516:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,520:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,575:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,615:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:36:21,761:INFO:Calculating mean and std
2022-08-11 22:36:21,762:INFO:Creating metrics dataframe
2022-08-11 22:36:21,764:INFO:Uploading results into container
2022-08-11 22:36:21,765:INFO:Uploading model into container now
2022-08-11 22:36:21,765:INFO:master_model_container: 12
2022-08-11 22:36:21,765:INFO:display_container: 2
2022-08-11 22:36:21,766:INFO:DecisionTreeRegressor(random_state=1073)
2022-08-11 22:36:21,766:INFO:create_model() successfully completed......................................
2022-08-11 22:36:21,877:INFO:SubProcess create_model() end ==================================
2022-08-11 22:36:21,877:INFO:Creating metrics dataframe
2022-08-11 22:36:21,885:INFO:Initializing Random Forest Regressor
2022-08-11 22:36:21,885:INFO:Total runtime is 0.17251161734263104 minutes
2022-08-11 22:36:21,888:INFO:SubProcess create_model() called ==================================
2022-08-11 22:36:21,888:INFO:Initializing create_model()
2022-08-11 22:36:21,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:36:21,888:INFO:Checking exceptions
2022-08-11 22:36:21,893:INFO:Importing libraries
2022-08-11 22:36:21,893:INFO:Copying training dataset
2022-08-11 22:36:21,901:INFO:Defining folds
2022-08-11 22:36:21,901:INFO:Declaring metric variables
2022-08-11 22:36:21,904:INFO:Importing untrained model
2022-08-11 22:36:21,907:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:36:21,912:INFO:Starting cross validation
2022-08-11 22:36:21,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:37:57,394:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:57,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:57,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:57,845:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:57,854:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:57,880:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:57,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:58,042:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:58,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:58,067:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:37:58,224:INFO:Calculating mean and std
2022-08-11 22:37:58,226:INFO:Creating metrics dataframe
2022-08-11 22:37:58,228:INFO:Uploading results into container
2022-08-11 22:37:58,228:INFO:Uploading model into container now
2022-08-11 22:37:58,228:INFO:master_model_container: 13
2022-08-11 22:37:58,229:INFO:display_container: 2
2022-08-11 22:37:58,229:INFO:RandomForestRegressor(n_jobs=-1, random_state=1073)
2022-08-11 22:37:58,229:INFO:create_model() successfully completed......................................
2022-08-11 22:37:58,341:INFO:SubProcess create_model() end ==================================
2022-08-11 22:37:58,341:INFO:Creating metrics dataframe
2022-08-11 22:37:58,349:INFO:Initializing Extra Trees Regressor
2022-08-11 22:37:58,349:INFO:Total runtime is 1.7802437980969747 minutes
2022-08-11 22:37:58,353:INFO:SubProcess create_model() called ==================================
2022-08-11 22:37:58,353:INFO:Initializing create_model()
2022-08-11 22:37:58,353:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:37:58,353:INFO:Checking exceptions
2022-08-11 22:37:58,359:INFO:Importing libraries
2022-08-11 22:37:58,359:INFO:Copying training dataset
2022-08-11 22:37:58,368:INFO:Defining folds
2022-08-11 22:37:58,368:INFO:Declaring metric variables
2022-08-11 22:37:58,371:INFO:Importing untrained model
2022-08-11 22:37:58,375:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:37:58,381:INFO:Starting cross validation
2022-08-11 22:37:58,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:38:28,345:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:29,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:29,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:30,145:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:31,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:31,634:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:32,321:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:32,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:33,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:33,954:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:34,476:INFO:Calculating mean and std
2022-08-11 22:38:34,478:INFO:Creating metrics dataframe
2022-08-11 22:38:34,481:INFO:Uploading results into container
2022-08-11 22:38:34,481:INFO:Uploading model into container now
2022-08-11 22:38:34,482:INFO:master_model_container: 14
2022-08-11 22:38:34,482:INFO:display_container: 2
2022-08-11 22:38:34,482:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1073)
2022-08-11 22:38:34,482:INFO:create_model() successfully completed......................................
2022-08-11 22:38:34,597:INFO:SubProcess create_model() end ==================================
2022-08-11 22:38:34,597:INFO:Creating metrics dataframe
2022-08-11 22:38:34,605:INFO:Initializing AdaBoost Regressor
2022-08-11 22:38:34,605:INFO:Total runtime is 2.3845105012257894 minutes
2022-08-11 22:38:34,608:INFO:SubProcess create_model() called ==================================
2022-08-11 22:38:34,608:INFO:Initializing create_model()
2022-08-11 22:38:34,608:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:38:34,608:INFO:Checking exceptions
2022-08-11 22:38:34,613:INFO:Importing libraries
2022-08-11 22:38:34,613:INFO:Copying training dataset
2022-08-11 22:38:34,621:INFO:Defining folds
2022-08-11 22:38:34,621:INFO:Declaring metric variables
2022-08-11 22:38:34,624:INFO:Importing untrained model
2022-08-11 22:38:34,628:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:38:34,633:INFO:Starting cross validation
2022-08-11 22:38:34,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:38:39,672:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:39,767:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,019:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,366:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,457:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,475:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,532:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:40,764:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:41,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:38:41,241:INFO:Calculating mean and std
2022-08-11 22:38:41,243:INFO:Creating metrics dataframe
2022-08-11 22:38:41,246:INFO:Uploading results into container
2022-08-11 22:38:41,247:INFO:Uploading model into container now
2022-08-11 22:38:41,247:INFO:master_model_container: 15
2022-08-11 22:38:41,247:INFO:display_container: 2
2022-08-11 22:38:41,248:INFO:AdaBoostRegressor(random_state=1073)
2022-08-11 22:38:41,248:INFO:create_model() successfully completed......................................
2022-08-11 22:38:41,387:INFO:SubProcess create_model() end ==================================
2022-08-11 22:38:41,387:INFO:Creating metrics dataframe
2022-08-11 22:38:41,398:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:38:41,398:INFO:Total runtime is 2.4977243820826214 minutes
2022-08-11 22:38:41,401:INFO:SubProcess create_model() called ==================================
2022-08-11 22:38:41,401:INFO:Initializing create_model()
2022-08-11 22:38:41,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:38:41,401:INFO:Checking exceptions
2022-08-11 22:38:41,416:INFO:Importing libraries
2022-08-11 22:38:41,416:INFO:Copying training dataset
2022-08-11 22:38:41,436:INFO:Defining folds
2022-08-11 22:38:41,436:INFO:Declaring metric variables
2022-08-11 22:38:41,439:INFO:Importing untrained model
2022-08-11 22:38:41,441:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:38:41,448:INFO:Starting cross validation
2022-08-11 22:38:41,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:00,565:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,628:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,649:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,719:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,762:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:00,884:INFO:Calculating mean and std
2022-08-11 22:39:00,886:INFO:Creating metrics dataframe
2022-08-11 22:39:00,888:INFO:Uploading results into container
2022-08-11 22:39:00,888:INFO:Uploading model into container now
2022-08-11 22:39:00,889:INFO:master_model_container: 16
2022-08-11 22:39:00,889:INFO:display_container: 2
2022-08-11 22:39:00,889:INFO:GradientBoostingRegressor(random_state=1073)
2022-08-11 22:39:00,889:INFO:create_model() successfully completed......................................
2022-08-11 22:39:01,001:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:01,001:INFO:Creating metrics dataframe
2022-08-11 22:39:01,010:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:39:01,010:INFO:Total runtime is 2.824591334660848 minutes
2022-08-11 22:39:01,013:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:01,013:INFO:Initializing create_model()
2022-08-11 22:39:01,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:01,013:INFO:Checking exceptions
2022-08-11 22:39:01,026:INFO:Importing libraries
2022-08-11 22:39:01,026:INFO:Copying training dataset
2022-08-11 22:39:01,043:INFO:Defining folds
2022-08-11 22:39:01,043:INFO:Declaring metric variables
2022-08-11 22:39:01,046:INFO:Importing untrained model
2022-08-11 22:39:01,050:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:39:01,056:INFO:Starting cross validation
2022-08-11 22:39:01,057:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:11,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,735:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,748:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,843:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,855:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:11,913:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:14,600:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:14,601:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:14,728:INFO:Calculating mean and std
2022-08-11 22:39:14,729:INFO:Creating metrics dataframe
2022-08-11 22:39:14,731:INFO:Uploading results into container
2022-08-11 22:39:14,732:INFO:Uploading model into container now
2022-08-11 22:39:14,732:INFO:master_model_container: 17
2022-08-11 22:39:14,732:INFO:display_container: 2
2022-08-11 22:39:14,733:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=1073,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:39:14,733:INFO:create_model() successfully completed......................................
2022-08-11 22:39:14,844:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:14,844:INFO:Creating metrics dataframe
2022-08-11 22:39:14,855:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:39:14,855:INFO:Total runtime is 3.055334786574046 minutes
2022-08-11 22:39:14,858:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:14,858:INFO:Initializing create_model()
2022-08-11 22:39:14,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:14,858:INFO:Checking exceptions
2022-08-11 22:39:14,864:INFO:Importing libraries
2022-08-11 22:39:14,864:INFO:Copying training dataset
2022-08-11 22:39:14,873:INFO:Defining folds
2022-08-11 22:39:14,873:INFO:Declaring metric variables
2022-08-11 22:39:14,876:INFO:Importing untrained model
2022-08-11 22:39:14,879:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:39:14,885:INFO:Starting cross validation
2022-08-11 22:39:14,886:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:15,557:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,583:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,608:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,619:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,672:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,773:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:15,909:INFO:Calculating mean and std
2022-08-11 22:39:15,911:INFO:Creating metrics dataframe
2022-08-11 22:39:15,914:INFO:Uploading results into container
2022-08-11 22:39:15,914:INFO:Uploading model into container now
2022-08-11 22:39:15,915:INFO:master_model_container: 18
2022-08-11 22:39:15,915:INFO:display_container: 2
2022-08-11 22:39:15,915:INFO:LGBMRegressor(random_state=1073)
2022-08-11 22:39:15,915:INFO:create_model() successfully completed......................................
2022-08-11 22:39:16,028:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:16,028:INFO:Creating metrics dataframe
2022-08-11 22:39:16,039:INFO:Initializing Dummy Regressor
2022-08-11 22:39:16,039:INFO:Total runtime is 3.075067448616028 minutes
2022-08-11 22:39:16,042:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:16,042:INFO:Initializing create_model()
2022-08-11 22:39:16,042:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0d3fa1f0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:16,042:INFO:Checking exceptions
2022-08-11 22:39:16,048:INFO:Importing libraries
2022-08-11 22:39:16,048:INFO:Copying training dataset
2022-08-11 22:39:16,063:INFO:Defining folds
2022-08-11 22:39:16,063:INFO:Declaring metric variables
2022-08-11 22:39:16,066:INFO:Importing untrained model
2022-08-11 22:39:16,069:INFO:Dummy Regressor Imported successfully
2022-08-11 22:39:16,074:INFO:Starting cross validation
2022-08-11 22:39:16,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:16,200:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,209:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,211:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,219:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,236:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,245:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,256:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,303:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:16,418:INFO:Calculating mean and std
2022-08-11 22:39:16,419:INFO:Creating metrics dataframe
2022-08-11 22:39:16,422:INFO:Uploading results into container
2022-08-11 22:39:16,422:INFO:Uploading model into container now
2022-08-11 22:39:16,423:INFO:master_model_container: 19
2022-08-11 22:39:16,423:INFO:display_container: 2
2022-08-11 22:39:16,423:INFO:DummyRegressor()
2022-08-11 22:39:16,423:INFO:create_model() successfully completed......................................
2022-08-11 22:39:16,531:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:16,531:INFO:Creating metrics dataframe
2022-08-11 22:39:16,548:INFO:Initializing create_model()
2022-08-11 22:39:16,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=LGBMRegressor(random_state=1073), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:16,548:INFO:Checking exceptions
2022-08-11 22:39:16,556:INFO:Importing libraries
2022-08-11 22:39:16,556:INFO:Copying training dataset
2022-08-11 22:39:16,567:INFO:Defining folds
2022-08-11 22:39:16,567:INFO:Declaring metric variables
2022-08-11 22:39:16,567:INFO:Importing untrained model
2022-08-11 22:39:16,567:INFO:Declaring custom model
2022-08-11 22:39:16,567:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:39:16,568:INFO:Cross validation set to False
2022-08-11 22:39:16,568:INFO:Fitting Model
2022-08-11 22:39:18,275:INFO:LGBMRegressor(random_state=1073)
2022-08-11 22:39:18,275:INFO:create_model() successfully completed......................................
2022-08-11 22:39:18,410:INFO:master_model_container: 19
2022-08-11 22:39:18,410:INFO:display_container: 2
2022-08-11 22:39:18,411:INFO:LGBMRegressor(random_state=1073)
2022-08-11 22:39:18,411:INFO:compare_models() successfully completed......................................
2022-08-11 22:39:34,334:INFO:Initializing create_model()
2022-08-11 22:39:34,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:34,335:INFO:Checking exceptions
2022-08-11 22:39:34,372:INFO:Importing libraries
2022-08-11 22:39:34,373:INFO:Copying training dataset
2022-08-11 22:39:34,383:INFO:Defining folds
2022-08-11 22:39:34,383:INFO:Declaring metric variables
2022-08-11 22:39:34,386:INFO:Importing untrained model
2022-08-11 22:39:34,389:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:39:34,396:INFO:Starting cross validation
2022-08-11 22:39:34,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:35,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,099:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,099:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,138:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,160:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,170:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,272:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,279:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:35,425:INFO:Calculating mean and std
2022-08-11 22:39:35,426:INFO:Creating metrics dataframe
2022-08-11 22:39:35,430:INFO:Finalizing model
2022-08-11 22:39:37,143:INFO:Uploading results into container
2022-08-11 22:39:37,144:INFO:Uploading model into container now
2022-08-11 22:39:37,152:INFO:master_model_container: 20
2022-08-11 22:39:37,152:INFO:display_container: 3
2022-08-11 22:39:37,152:INFO:LGBMRegressor(random_state=1073)
2022-08-11 22:39:37,152:INFO:create_model() successfully completed......................................
2022-08-11 22:39:38,606:INFO:Initializing finalize_model()
2022-08-11 22:39:38,606:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=LGBMRegressor(random_state=1073), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:39:38,607:INFO:Finalizing LGBMRegressor(random_state=1073)
2022-08-11 22:39:38,628:INFO:Initializing create_model()
2022-08-11 22:39:38,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=LGBMRegressor(random_state=1073), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:39:38,629:INFO:Checking exceptions
2022-08-11 22:39:38,631:INFO:Importing libraries
2022-08-11 22:39:38,631:INFO:Copying training dataset
2022-08-11 22:39:38,633:INFO:Defining folds
2022-08-11 22:39:38,633:INFO:Declaring metric variables
2022-08-11 22:39:38,633:INFO:Importing untrained model
2022-08-11 22:39:38,633:INFO:Declaring custom model
2022-08-11 22:39:38,634:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:39:38,634:INFO:Cross validation set to False
2022-08-11 22:39:38,634:INFO:Fitting Model
2022-08-11 22:39:40,736:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=1073))])
2022-08-11 22:39:40,736:INFO:create_model() successfully completed......................................
2022-08-11 22:39:40,852:INFO:Initializing predict_model()
2022-08-11 22:39:40,852:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=1073))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ec9305280>)
2022-08-11 22:39:40,852:INFO:Checking exceptions
2022-08-11 22:39:40,852:INFO:Preloading libraries
2022-08-11 22:39:40,856:INFO:Set up data.
2022-08-11 22:39:41,137:INFO:display_container: 4
2022-08-11 22:39:41,137:INFO:master_model_container: 20
2022-08-11 22:39:41,138:INFO:display_container: 4
2022-08-11 22:39:41,142:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=1073))])
2022-08-11 22:39:41,142:INFO:finalize_model() successfully completed......................................
2022-08-11 22:39:41,265:INFO:Initializing predict_model()
2022-08-11 22:39:41,266:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7ecd79a430>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=1073))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7f093f25e0>)
2022-08-11 22:39:41,266:INFO:Checking exceptions
2022-08-11 22:39:41,266:INFO:Preloading libraries
2022-08-11 22:39:41,273:INFO:Set up data.
2022-08-11 22:39:41,804:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/438800501.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_11'] = predict_model(model_y11, data=test_df)['prediction_label']

2022-08-11 22:39:44,109:INFO:PyCaret RegressionExperiment
2022-08-11 22:39:44,109:INFO:Logging name: reg-default-name
2022-08-11 22:39:44,109:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:39:44,109:INFO:version 3.0.0.rc3
2022-08-11 22:39:44,109:INFO:Initializing setup()
2022-08-11 22:39:44,110:INFO:self.USI: 20fd
2022-08-11 22:39:44,110:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:39:44,110:INFO:Checking environment
2022-08-11 22:39:44,110:INFO:python_version: 3.8.8
2022-08-11 22:39:44,110:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:39:44,110:INFO:machine: x86_64
2022-08-11 22:39:44,110:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:39:44,111:INFO:Memory: svmem(total=34359738368, available=4169494528, percent=87.9, used=3949199360, free=630599680, active=3530448896, inactive=3506204672, wired=418750464)
2022-08-11 22:39:44,111:INFO:Physical Core: 10
2022-08-11 22:39:44,111:INFO:Logical Core: 10
2022-08-11 22:39:44,111:INFO:Checking libraries
2022-08-11 22:39:44,111:INFO:System:
2022-08-11 22:39:44,111:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:39:44,111:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:39:44,111:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:39:44,112:INFO:PyCaret required dependencies:
2022-08-11 22:39:44,113:INFO:                 pip: 22.1.2
2022-08-11 22:39:44,113:INFO:          setuptools: 61.2.0
2022-08-11 22:39:44,114:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:39:44,114:INFO:             IPython: 8.4.0
2022-08-11 22:39:44,114:INFO:          ipywidgets: 7.6.5
2022-08-11 22:39:44,114:INFO:                tqdm: 4.64.0
2022-08-11 22:39:44,114:INFO:               numpy: 1.22.4
2022-08-11 22:39:44,115:INFO:              pandas: 1.4.3
2022-08-11 22:39:44,115:INFO:              jinja2: 3.0.3
2022-08-11 22:39:44,115:INFO:               scipy: 1.5.4
2022-08-11 22:39:44,116:INFO:              joblib: 1.1.0
2022-08-11 22:39:44,116:INFO:             sklearn: 1.1.1
2022-08-11 22:39:44,116:INFO:                pyod: 1.0.4
2022-08-11 22:39:44,116:INFO:            imblearn: 0.9.1
2022-08-11 22:39:44,116:INFO:   category_encoders: 2.5.0
2022-08-11 22:39:44,116:INFO:            lightgbm: 3.2.1
2022-08-11 22:39:44,116:INFO:               numba: 0.55.2
2022-08-11 22:39:44,116:INFO:            requests: 2.28.1
2022-08-11 22:39:44,116:INFO:          matplotlib: 3.5.1
2022-08-11 22:39:44,116:INFO:          scikitplot: 0.3.7
2022-08-11 22:39:44,117:INFO:         yellowbrick: 1.4
2022-08-11 22:39:44,117:INFO:              plotly: 5.9.0
2022-08-11 22:39:44,117:INFO:             kaleido: 0.2.1
2022-08-11 22:39:44,117:INFO:         statsmodels: 0.13.2
2022-08-11 22:39:44,117:INFO:              sktime: 0.13.0
2022-08-11 22:39:44,117:INFO:               tbats: 1.1.0
2022-08-11 22:39:44,117:INFO:            pmdarima: 1.8.5
2022-08-11 22:39:44,117:INFO:              psutil: 5.9.1
2022-08-11 22:39:44,117:INFO:PyCaret optional dependencies:
2022-08-11 22:39:44,117:INFO:                shap: Not installed
2022-08-11 22:39:44,117:INFO:           interpret: Not installed
2022-08-11 22:39:44,118:INFO:                umap: 0.5.3
2022-08-11 22:39:44,118:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:39:44,118:INFO:  explainerdashboard: Not installed
2022-08-11 22:39:44,118:INFO:             autoviz: Not installed
2022-08-11 22:39:44,118:INFO:           fairlearn: Not installed
2022-08-11 22:39:44,118:INFO:             xgboost: 1.6.1
2022-08-11 22:39:44,118:INFO:            catboost: Not installed
2022-08-11 22:39:44,118:INFO:              kmodes: 0.12.1
2022-08-11 22:39:44,118:INFO:             mlxtend: 0.19.0
2022-08-11 22:39:44,118:INFO:       statsforecast: Not installed
2022-08-11 22:39:44,118:INFO:        tune_sklearn: Not installed
2022-08-11 22:39:44,118:INFO:                 ray: Not installed
2022-08-11 22:39:44,119:INFO:            hyperopt: Not installed
2022-08-11 22:39:44,119:INFO:              optuna: Not installed
2022-08-11 22:39:44,119:INFO:               skopt: Not installed
2022-08-11 22:39:44,119:INFO:              mlflow: 1.27.0
2022-08-11 22:39:44,119:INFO:              gradio: Not installed
2022-08-11 22:39:44,119:INFO:             fastapi: Not installed
2022-08-11 22:39:44,119:INFO:             uvicorn: Not installed
2022-08-11 22:39:44,119:INFO:              m2cgen: Not installed
2022-08-11 22:39:44,119:INFO:           evidently: Not installed
2022-08-11 22:39:44,119:INFO:                nltk: 3.7
2022-08-11 22:39:44,119:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:39:44,119:INFO:              gensim: 3.8.3
2022-08-11 22:39:44,119:INFO:               spacy: 2.3.7
2022-08-11 22:39:44,120:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:39:44,120:INFO:            textblob: 0.17.1
2022-08-11 22:39:44,120:INFO:               fugue: Not installed
2022-08-11 22:39:44,120:INFO:           streamlit: Not installed
2022-08-11 22:39:44,120:INFO:             prophet: Not installed
2022-08-11 22:39:44,120:INFO:None
2022-08-11 22:39:44,120:INFO:Set up data.
2022-08-11 22:39:44,155:INFO:Set up train/test split.
2022-08-11 22:39:44,178:INFO:Set up folding strategy.
2022-08-11 22:39:44,178:INFO:Assigning column types.
2022-08-11 22:39:44,186:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:39:44,186:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,191:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,196:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,302:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:44,305:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,309:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,314:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,377:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,419:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,419:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:44,423:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:39:44,427:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,432:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,535:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,535:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:44,543:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,547:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,650:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,651:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:44,654:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:39:44,662:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,720:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,763:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:44,775:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,879:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:44,881:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:39:44,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:44,993:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:44,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:45,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:45,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:39:45,107:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:45,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:45,109:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:39:45,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:45,222:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:45,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:45,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:39:45,339:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:45,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:45,342:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:39:45,454:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:45,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:45,571:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:45,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:45,575:INFO:Preparing preprocessing pipeline...
2022-08-11 22:39:45,576:INFO:Set up simple imputation.
2022-08-11 22:39:45,577:INFO:Set up variance threshold.
2022-08-11 22:39:45,750:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:39:45,753:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:39:45,753:INFO:Creating final display dataframe.
2022-08-11 22:39:46,429:INFO:Setup display_container:                Description             Value
0               Session id              8017
1                   Target              Y_12
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              20fd
2022-08-11 22:39:46,538:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:46,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:46,655:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:39:46,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:39:46,675:INFO:setup() successfully completed in 2.57s...............
2022-08-11 22:39:48,081:INFO:Initializing compare_models()
2022-08-11 22:39:48,081:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:39:48,084:INFO:Checking exceptions
2022-08-11 22:39:48,098:INFO:Preparing display monitor
2022-08-11 22:39:48,125:INFO:Initializing Linear Regression
2022-08-11 22:39:48,125:INFO:Total runtime is 2.7179718017578126e-06 minutes
2022-08-11 22:39:48,128:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:48,129:INFO:Initializing create_model()
2022-08-11 22:39:48,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:48,130:INFO:Checking exceptions
2022-08-11 22:39:48,136:INFO:Importing libraries
2022-08-11 22:39:48,136:INFO:Copying training dataset
2022-08-11 22:39:48,144:INFO:Defining folds
2022-08-11 22:39:48,144:INFO:Declaring metric variables
2022-08-11 22:39:48,146:INFO:Importing untrained model
2022-08-11 22:39:48,149:INFO:Linear Regression Imported successfully
2022-08-11 22:39:48,155:INFO:Starting cross validation
2022-08-11 22:39:48,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:48,827:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,833:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,846:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,848:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,898:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,923:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,925:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:48,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,026:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,360:INFO:Calculating mean and std
2022-08-11 22:39:49,361:INFO:Creating metrics dataframe
2022-08-11 22:39:49,364:INFO:Uploading results into container
2022-08-11 22:39:49,364:INFO:Uploading model into container now
2022-08-11 22:39:49,364:INFO:master_model_container: 1
2022-08-11 22:39:49,364:INFO:display_container: 2
2022-08-11 22:39:49,365:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:39:49,365:INFO:create_model() successfully completed......................................
2022-08-11 22:39:49,476:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:49,476:INFO:Creating metrics dataframe
2022-08-11 22:39:49,482:INFO:Initializing Lasso Regression
2022-08-11 22:39:49,483:INFO:Total runtime is 0.022624866167704264 minutes
2022-08-11 22:39:49,485:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:49,485:INFO:Initializing create_model()
2022-08-11 22:39:49,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:49,485:INFO:Checking exceptions
2022-08-11 22:39:49,491:INFO:Importing libraries
2022-08-11 22:39:49,491:INFO:Copying training dataset
2022-08-11 22:39:49,499:INFO:Defining folds
2022-08-11 22:39:49,500:INFO:Declaring metric variables
2022-08-11 22:39:49,503:INFO:Importing untrained model
2022-08-11 22:39:49,506:INFO:Lasso Regression Imported successfully
2022-08-11 22:39:49,511:INFO:Starting cross validation
2022-08-11 22:39:49,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:49,661:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,668:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,675:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,695:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,705:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:49,837:INFO:Calculating mean and std
2022-08-11 22:39:49,839:INFO:Creating metrics dataframe
2022-08-11 22:39:49,843:INFO:Uploading results into container
2022-08-11 22:39:49,843:INFO:Uploading model into container now
2022-08-11 22:39:49,843:INFO:master_model_container: 2
2022-08-11 22:39:49,843:INFO:display_container: 2
2022-08-11 22:39:49,844:INFO:Lasso(random_state=8017)
2022-08-11 22:39:49,844:INFO:create_model() successfully completed......................................
2022-08-11 22:39:49,950:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:49,950:INFO:Creating metrics dataframe
2022-08-11 22:39:49,956:INFO:Initializing Ridge Regression
2022-08-11 22:39:49,956:INFO:Total runtime is 0.030518802007039388 minutes
2022-08-11 22:39:49,959:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:49,959:INFO:Initializing create_model()
2022-08-11 22:39:49,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:49,959:INFO:Checking exceptions
2022-08-11 22:39:49,964:INFO:Importing libraries
2022-08-11 22:39:49,964:INFO:Copying training dataset
2022-08-11 22:39:49,973:INFO:Defining folds
2022-08-11 22:39:49,973:INFO:Declaring metric variables
2022-08-11 22:39:49,976:INFO:Importing untrained model
2022-08-11 22:39:49,979:INFO:Ridge Regression Imported successfully
2022-08-11 22:39:49,984:INFO:Starting cross validation
2022-08-11 22:39:49,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:50,105:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,113:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,186:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,206:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,320:INFO:Calculating mean and std
2022-08-11 22:39:50,321:INFO:Creating metrics dataframe
2022-08-11 22:39:50,324:INFO:Uploading results into container
2022-08-11 22:39:50,324:INFO:Uploading model into container now
2022-08-11 22:39:50,324:INFO:master_model_container: 3
2022-08-11 22:39:50,325:INFO:display_container: 2
2022-08-11 22:39:50,325:INFO:Ridge(random_state=8017)
2022-08-11 22:39:50,325:INFO:create_model() successfully completed......................................
2022-08-11 22:39:50,432:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:50,432:INFO:Creating metrics dataframe
2022-08-11 22:39:50,438:INFO:Initializing Elastic Net
2022-08-11 22:39:50,438:INFO:Total runtime is 0.038547786076863606 minutes
2022-08-11 22:39:50,441:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:50,441:INFO:Initializing create_model()
2022-08-11 22:39:50,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:50,441:INFO:Checking exceptions
2022-08-11 22:39:50,446:INFO:Importing libraries
2022-08-11 22:39:50,446:INFO:Copying training dataset
2022-08-11 22:39:50,455:INFO:Defining folds
2022-08-11 22:39:50,456:INFO:Declaring metric variables
2022-08-11 22:39:50,459:INFO:Importing untrained model
2022-08-11 22:39:50,462:INFO:Elastic Net Imported successfully
2022-08-11 22:39:50,467:INFO:Starting cross validation
2022-08-11 22:39:50,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:50,590:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,596:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,598:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,614:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,622:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,624:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,644:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,664:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:50,781:INFO:Calculating mean and std
2022-08-11 22:39:50,782:INFO:Creating metrics dataframe
2022-08-11 22:39:50,784:INFO:Uploading results into container
2022-08-11 22:39:50,784:INFO:Uploading model into container now
2022-08-11 22:39:50,785:INFO:master_model_container: 4
2022-08-11 22:39:50,785:INFO:display_container: 2
2022-08-11 22:39:50,785:INFO:ElasticNet(random_state=8017)
2022-08-11 22:39:50,785:INFO:create_model() successfully completed......................................
2022-08-11 22:39:50,893:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:50,893:INFO:Creating metrics dataframe
2022-08-11 22:39:50,900:INFO:Initializing Least Angle Regression
2022-08-11 22:39:50,900:INFO:Total runtime is 0.04625278313954671 minutes
2022-08-11 22:39:50,903:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:50,903:INFO:Initializing create_model()
2022-08-11 22:39:50,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:50,904:INFO:Checking exceptions
2022-08-11 22:39:50,909:INFO:Importing libraries
2022-08-11 22:39:50,909:INFO:Copying training dataset
2022-08-11 22:39:50,918:INFO:Defining folds
2022-08-11 22:39:50,918:INFO:Declaring metric variables
2022-08-11 22:39:50,921:INFO:Importing untrained model
2022-08-11 22:39:50,925:INFO:Least Angle Regression Imported successfully
2022-08-11 22:39:50,931:INFO:Starting cross validation
2022-08-11 22:39:50,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:51,060:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,062:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,066:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,081:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,084:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,084:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,094:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,094:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,097:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,102:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,111:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,112:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,118:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,118:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,147:INFO:Calculating mean and std
2022-08-11 22:39:51,148:INFO:Creating metrics dataframe
2022-08-11 22:39:51,151:INFO:Uploading results into container
2022-08-11 22:39:51,152:INFO:Uploading model into container now
2022-08-11 22:39:51,152:INFO:master_model_container: 5
2022-08-11 22:39:51,152:INFO:display_container: 2
2022-08-11 22:39:51,153:INFO:Lars(random_state=8017)
2022-08-11 22:39:51,153:INFO:create_model() successfully completed......................................
2022-08-11 22:39:51,258:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:51,258:INFO:Creating metrics dataframe
2022-08-11 22:39:51,264:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:39:51,264:INFO:Total runtime is 0.052316701412200926 minutes
2022-08-11 22:39:51,267:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:51,267:INFO:Initializing create_model()
2022-08-11 22:39:51,267:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:51,267:INFO:Checking exceptions
2022-08-11 22:39:51,272:INFO:Importing libraries
2022-08-11 22:39:51,272:INFO:Copying training dataset
2022-08-11 22:39:51,280:INFO:Defining folds
2022-08-11 22:39:51,281:INFO:Declaring metric variables
2022-08-11 22:39:51,283:INFO:Importing untrained model
2022-08-11 22:39:51,286:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:39:51,291:INFO:Starting cross validation
2022-08-11 22:39:51,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:51,410:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,419:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,421:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,428:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,434:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,436:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,440:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,442:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,451:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,459:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,468:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,471:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,476:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,478:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:39:51,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,608:INFO:Calculating mean and std
2022-08-11 22:39:51,610:INFO:Creating metrics dataframe
2022-08-11 22:39:51,612:INFO:Uploading results into container
2022-08-11 22:39:51,613:INFO:Uploading model into container now
2022-08-11 22:39:51,613:INFO:master_model_container: 6
2022-08-11 22:39:51,613:INFO:display_container: 2
2022-08-11 22:39:51,614:INFO:LassoLars(random_state=8017)
2022-08-11 22:39:51,614:INFO:create_model() successfully completed......................................
2022-08-11 22:39:51,720:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:51,721:INFO:Creating metrics dataframe
2022-08-11 22:39:51,727:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:39:51,727:INFO:Total runtime is 0.06003865400950114 minutes
2022-08-11 22:39:51,730:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:51,730:INFO:Initializing create_model()
2022-08-11 22:39:51,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:51,730:INFO:Checking exceptions
2022-08-11 22:39:51,735:INFO:Importing libraries
2022-08-11 22:39:51,735:INFO:Copying training dataset
2022-08-11 22:39:51,744:INFO:Defining folds
2022-08-11 22:39:51,744:INFO:Declaring metric variables
2022-08-11 22:39:51,747:INFO:Importing untrained model
2022-08-11 22:39:51,749:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:39:51,754:INFO:Starting cross validation
2022-08-11 22:39:51,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:51,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,875:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,887:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,891:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,893:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,896:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,900:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,902:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,906:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,907:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,909:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,923:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,935:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,942:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:39:51,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:51,954:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,086:INFO:Calculating mean and std
2022-08-11 22:39:52,087:INFO:Creating metrics dataframe
2022-08-11 22:39:52,107:INFO:Uploading results into container
2022-08-11 22:39:52,124:INFO:Uploading model into container now
2022-08-11 22:39:52,124:INFO:master_model_container: 7
2022-08-11 22:39:52,124:INFO:display_container: 2
2022-08-11 22:39:52,124:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:39:52,124:INFO:create_model() successfully completed......................................
2022-08-11 22:39:52,236:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:52,236:INFO:Creating metrics dataframe
2022-08-11 22:39:52,242:INFO:Initializing Bayesian Ridge
2022-08-11 22:39:52,242:INFO:Total runtime is 0.06862090428670248 minutes
2022-08-11 22:39:52,245:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:52,245:INFO:Initializing create_model()
2022-08-11 22:39:52,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:52,245:INFO:Checking exceptions
2022-08-11 22:39:52,250:INFO:Importing libraries
2022-08-11 22:39:52,250:INFO:Copying training dataset
2022-08-11 22:39:52,259:INFO:Defining folds
2022-08-11 22:39:52,260:INFO:Declaring metric variables
2022-08-11 22:39:52,262:INFO:Importing untrained model
2022-08-11 22:39:52,266:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:39:52,271:INFO:Starting cross validation
2022-08-11 22:39:52,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:52,620:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,650:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,671:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,673:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,697:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,697:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,749:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:52,868:INFO:Calculating mean and std
2022-08-11 22:39:52,869:INFO:Creating metrics dataframe
2022-08-11 22:39:52,871:INFO:Uploading results into container
2022-08-11 22:39:52,872:INFO:Uploading model into container now
2022-08-11 22:39:52,872:INFO:master_model_container: 8
2022-08-11 22:39:52,873:INFO:display_container: 2
2022-08-11 22:39:52,873:INFO:BayesianRidge()
2022-08-11 22:39:52,873:INFO:create_model() successfully completed......................................
2022-08-11 22:39:52,978:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:52,978:INFO:Creating metrics dataframe
2022-08-11 22:39:52,986:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:39:52,986:INFO:Total runtime is 0.08101730346679688 minutes
2022-08-11 22:39:52,988:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:52,989:INFO:Initializing create_model()
2022-08-11 22:39:52,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:52,989:INFO:Checking exceptions
2022-08-11 22:39:52,993:INFO:Importing libraries
2022-08-11 22:39:52,993:INFO:Copying training dataset
2022-08-11 22:39:53,001:INFO:Defining folds
2022-08-11 22:39:53,002:INFO:Declaring metric variables
2022-08-11 22:39:53,004:INFO:Importing untrained model
2022-08-11 22:39:53,007:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:39:53,013:INFO:Starting cross validation
2022-08-11 22:39:53,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:53,244:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,262:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,272:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,311:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,312:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,321:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,323:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:53,443:INFO:Calculating mean and std
2022-08-11 22:39:53,444:INFO:Creating metrics dataframe
2022-08-11 22:39:53,446:INFO:Uploading results into container
2022-08-11 22:39:53,447:INFO:Uploading model into container now
2022-08-11 22:39:53,447:INFO:master_model_container: 9
2022-08-11 22:39:53,447:INFO:display_container: 2
2022-08-11 22:39:53,448:INFO:PassiveAggressiveRegressor(random_state=8017)
2022-08-11 22:39:53,448:INFO:create_model() successfully completed......................................
2022-08-11 22:39:53,552:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:53,552:INFO:Creating metrics dataframe
2022-08-11 22:39:53,559:INFO:Initializing Huber Regressor
2022-08-11 22:39:53,559:INFO:Total runtime is 0.0905719518661499 minutes
2022-08-11 22:39:53,562:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:53,562:INFO:Initializing create_model()
2022-08-11 22:39:53,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:53,562:INFO:Checking exceptions
2022-08-11 22:39:53,568:INFO:Importing libraries
2022-08-11 22:39:53,569:INFO:Copying training dataset
2022-08-11 22:39:53,576:INFO:Defining folds
2022-08-11 22:39:53,577:INFO:Declaring metric variables
2022-08-11 22:39:53,579:INFO:Importing untrained model
2022-08-11 22:39:53,582:INFO:Huber Regressor Imported successfully
2022-08-11 22:39:53,587:INFO:Starting cross validation
2022-08-11 22:39:53,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:54,541:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,590:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,591:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,596:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,611:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,637:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,638:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,661:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,661:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,662:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,663:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:39:54,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:54,800:INFO:Calculating mean and std
2022-08-11 22:39:54,801:INFO:Creating metrics dataframe
2022-08-11 22:39:54,804:INFO:Uploading results into container
2022-08-11 22:39:54,805:INFO:Uploading model into container now
2022-08-11 22:39:54,805:INFO:master_model_container: 10
2022-08-11 22:39:54,805:INFO:display_container: 2
2022-08-11 22:39:54,806:INFO:HuberRegressor()
2022-08-11 22:39:54,806:INFO:create_model() successfully completed......................................
2022-08-11 22:39:54,911:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:54,911:INFO:Creating metrics dataframe
2022-08-11 22:39:54,919:INFO:Initializing K Neighbors Regressor
2022-08-11 22:39:54,920:INFO:Total runtime is 0.11324151754379272 minutes
2022-08-11 22:39:54,922:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:54,922:INFO:Initializing create_model()
2022-08-11 22:39:54,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:54,922:INFO:Checking exceptions
2022-08-11 22:39:54,927:INFO:Importing libraries
2022-08-11 22:39:54,928:INFO:Copying training dataset
2022-08-11 22:39:54,936:INFO:Defining folds
2022-08-11 22:39:54,936:INFO:Declaring metric variables
2022-08-11 22:39:54,939:INFO:Importing untrained model
2022-08-11 22:39:54,942:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:39:54,947:INFO:Starting cross validation
2022-08-11 22:39:54,948:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:55,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,071:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,071:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,080:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,083:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,115:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,126:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,134:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:55,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:56,427:INFO:Calculating mean and std
2022-08-11 22:39:56,429:INFO:Creating metrics dataframe
2022-08-11 22:39:56,431:INFO:Uploading results into container
2022-08-11 22:39:56,431:INFO:Uploading model into container now
2022-08-11 22:39:56,432:INFO:master_model_container: 11
2022-08-11 22:39:56,432:INFO:display_container: 2
2022-08-11 22:39:56,432:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:39:56,432:INFO:create_model() successfully completed......................................
2022-08-11 22:39:56,538:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:56,538:INFO:Creating metrics dataframe
2022-08-11 22:39:56,546:INFO:Initializing Decision Tree Regressor
2022-08-11 22:39:56,546:INFO:Total runtime is 0.14034322102864583 minutes
2022-08-11 22:39:56,548:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:56,548:INFO:Initializing create_model()
2022-08-11 22:39:56,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:56,548:INFO:Checking exceptions
2022-08-11 22:39:56,553:INFO:Importing libraries
2022-08-11 22:39:56,553:INFO:Copying training dataset
2022-08-11 22:39:56,561:INFO:Defining folds
2022-08-11 22:39:56,561:INFO:Declaring metric variables
2022-08-11 22:39:56,564:INFO:Importing untrained model
2022-08-11 22:39:56,567:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:39:56,572:INFO:Starting cross validation
2022-08-11 22:39:56,573:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:39:57,871:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:57,907:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,044:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,195:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,207:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,213:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:39:58,352:INFO:Calculating mean and std
2022-08-11 22:39:58,353:INFO:Creating metrics dataframe
2022-08-11 22:39:58,355:INFO:Uploading results into container
2022-08-11 22:39:58,356:INFO:Uploading model into container now
2022-08-11 22:39:58,356:INFO:master_model_container: 12
2022-08-11 22:39:58,356:INFO:display_container: 2
2022-08-11 22:39:58,356:INFO:DecisionTreeRegressor(random_state=8017)
2022-08-11 22:39:58,356:INFO:create_model() successfully completed......................................
2022-08-11 22:39:58,461:INFO:SubProcess create_model() end ==================================
2022-08-11 22:39:58,461:INFO:Creating metrics dataframe
2022-08-11 22:39:58,468:INFO:Initializing Random Forest Regressor
2022-08-11 22:39:58,469:INFO:Total runtime is 0.1723911166191101 minutes
2022-08-11 22:39:58,471:INFO:SubProcess create_model() called ==================================
2022-08-11 22:39:58,471:INFO:Initializing create_model()
2022-08-11 22:39:58,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:39:58,471:INFO:Checking exceptions
2022-08-11 22:39:58,475:INFO:Importing libraries
2022-08-11 22:39:58,475:INFO:Copying training dataset
2022-08-11 22:39:58,484:INFO:Defining folds
2022-08-11 22:39:58,484:INFO:Declaring metric variables
2022-08-11 22:39:58,487:INFO:Importing untrained model
2022-08-11 22:39:58,490:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:39:58,495:INFO:Starting cross validation
2022-08-11 22:39:58,496:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:41:26,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,391:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,476:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,591:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,690:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,767:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,774:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:27,896:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:28,036:INFO:Calculating mean and std
2022-08-11 22:41:28,037:INFO:Creating metrics dataframe
2022-08-11 22:41:28,040:INFO:Uploading results into container
2022-08-11 22:41:28,040:INFO:Uploading model into container now
2022-08-11 22:41:28,040:INFO:master_model_container: 13
2022-08-11 22:41:28,040:INFO:display_container: 2
2022-08-11 22:41:28,040:INFO:RandomForestRegressor(n_jobs=-1, random_state=8017)
2022-08-11 22:41:28,041:INFO:create_model() successfully completed......................................
2022-08-11 22:41:28,147:INFO:SubProcess create_model() end ==================================
2022-08-11 22:41:28,147:INFO:Creating metrics dataframe
2022-08-11 22:41:28,156:INFO:Initializing Extra Trees Regressor
2022-08-11 22:41:28,156:INFO:Total runtime is 1.6671824693679809 minutes
2022-08-11 22:41:28,158:INFO:SubProcess create_model() called ==================================
2022-08-11 22:41:28,159:INFO:Initializing create_model()
2022-08-11 22:41:28,159:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:41:28,159:INFO:Checking exceptions
2022-08-11 22:41:28,163:INFO:Importing libraries
2022-08-11 22:41:28,164:INFO:Copying training dataset
2022-08-11 22:41:28,171:INFO:Defining folds
2022-08-11 22:41:28,172:INFO:Declaring metric variables
2022-08-11 22:41:28,174:INFO:Importing untrained model
2022-08-11 22:41:28,177:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:41:28,182:INFO:Starting cross validation
2022-08-11 22:41:28,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:41:53,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:56,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:57,244:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:57,492:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:59,172:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:41:59,862:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:00,149:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:00,170:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:01,946:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:01,993:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:02,151:INFO:Calculating mean and std
2022-08-11 22:42:02,152:INFO:Creating metrics dataframe
2022-08-11 22:42:02,154:INFO:Uploading results into container
2022-08-11 22:42:02,155:INFO:Uploading model into container now
2022-08-11 22:42:02,155:INFO:master_model_container: 14
2022-08-11 22:42:02,155:INFO:display_container: 2
2022-08-11 22:42:02,155:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8017)
2022-08-11 22:42:02,156:INFO:create_model() successfully completed......................................
2022-08-11 22:42:02,265:INFO:SubProcess create_model() end ==================================
2022-08-11 22:42:02,265:INFO:Creating metrics dataframe
2022-08-11 22:42:02,273:INFO:Initializing AdaBoost Regressor
2022-08-11 22:42:02,274:INFO:Total runtime is 2.2358091195424397 minutes
2022-08-11 22:42:02,276:INFO:SubProcess create_model() called ==================================
2022-08-11 22:42:02,277:INFO:Initializing create_model()
2022-08-11 22:42:02,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:42:02,277:INFO:Checking exceptions
2022-08-11 22:42:02,282:INFO:Importing libraries
2022-08-11 22:42:02,282:INFO:Copying training dataset
2022-08-11 22:42:02,290:INFO:Defining folds
2022-08-11 22:42:02,291:INFO:Declaring metric variables
2022-08-11 22:42:02,294:INFO:Importing untrained model
2022-08-11 22:42:02,297:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:42:02,303:INFO:Starting cross validation
2022-08-11 22:42:02,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:42:08,150:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:08,309:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:08,489:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:08,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:08,811:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:08,839:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:08,851:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:09,046:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:09,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:10,220:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:10,344:INFO:Calculating mean and std
2022-08-11 22:42:10,347:INFO:Creating metrics dataframe
2022-08-11 22:42:10,350:INFO:Uploading results into container
2022-08-11 22:42:10,351:INFO:Uploading model into container now
2022-08-11 22:42:10,351:INFO:master_model_container: 15
2022-08-11 22:42:10,351:INFO:display_container: 2
2022-08-11 22:42:10,351:INFO:AdaBoostRegressor(random_state=8017)
2022-08-11 22:42:10,351:INFO:create_model() successfully completed......................................
2022-08-11 22:42:10,484:INFO:SubProcess create_model() end ==================================
2022-08-11 22:42:10,484:INFO:Creating metrics dataframe
2022-08-11 22:42:10,492:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:42:10,492:INFO:Total runtime is 2.3727896372477213 minutes
2022-08-11 22:42:10,495:INFO:SubProcess create_model() called ==================================
2022-08-11 22:42:10,495:INFO:Initializing create_model()
2022-08-11 22:42:10,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:42:10,495:INFO:Checking exceptions
2022-08-11 22:42:10,508:INFO:Importing libraries
2022-08-11 22:42:10,508:INFO:Copying training dataset
2022-08-11 22:42:10,519:INFO:Defining folds
2022-08-11 22:42:10,519:INFO:Declaring metric variables
2022-08-11 22:42:10,522:INFO:Importing untrained model
2022-08-11 22:42:10,525:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:42:10,531:INFO:Starting cross validation
2022-08-11 22:42:10,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:42:29,869:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,877:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,879:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,923:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:29,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:30,054:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:30,175:INFO:Calculating mean and std
2022-08-11 22:42:30,176:INFO:Creating metrics dataframe
2022-08-11 22:42:30,178:INFO:Uploading results into container
2022-08-11 22:42:30,179:INFO:Uploading model into container now
2022-08-11 22:42:30,179:INFO:master_model_container: 16
2022-08-11 22:42:30,179:INFO:display_container: 2
2022-08-11 22:42:30,180:INFO:GradientBoostingRegressor(random_state=8017)
2022-08-11 22:42:30,180:INFO:create_model() successfully completed......................................
2022-08-11 22:42:30,284:INFO:SubProcess create_model() end ==================================
2022-08-11 22:42:30,285:INFO:Creating metrics dataframe
2022-08-11 22:42:30,293:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:42:30,293:INFO:Total runtime is 2.702802817026774 minutes
2022-08-11 22:42:30,296:INFO:SubProcess create_model() called ==================================
2022-08-11 22:42:30,296:INFO:Initializing create_model()
2022-08-11 22:42:30,296:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:42:30,296:INFO:Checking exceptions
2022-08-11 22:42:30,304:INFO:Importing libraries
2022-08-11 22:42:30,305:INFO:Copying training dataset
2022-08-11 22:42:30,313:INFO:Defining folds
2022-08-11 22:42:30,313:INFO:Declaring metric variables
2022-08-11 22:42:30,315:INFO:Importing untrained model
2022-08-11 22:42:30,319:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:42:30,325:INFO:Starting cross validation
2022-08-11 22:42:30,326:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:42:40,973:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:40,978:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:41,029:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:41,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:41,229:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:41,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:41,547:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:43,962:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:44,045:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:44,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:44,207:INFO:Calculating mean and std
2022-08-11 22:42:44,209:INFO:Creating metrics dataframe
2022-08-11 22:42:44,212:INFO:Uploading results into container
2022-08-11 22:42:44,212:INFO:Uploading model into container now
2022-08-11 22:42:44,213:INFO:master_model_container: 17
2022-08-11 22:42:44,213:INFO:display_container: 2
2022-08-11 22:42:44,214:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=8017,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:42:44,214:INFO:create_model() successfully completed......................................
2022-08-11 22:42:44,321:INFO:SubProcess create_model() end ==================================
2022-08-11 22:42:44,321:INFO:Creating metrics dataframe
2022-08-11 22:42:44,330:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:42:44,330:INFO:Total runtime is 2.936750801404317 minutes
2022-08-11 22:42:44,333:INFO:SubProcess create_model() called ==================================
2022-08-11 22:42:44,333:INFO:Initializing create_model()
2022-08-11 22:42:44,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:42:44,333:INFO:Checking exceptions
2022-08-11 22:42:44,343:INFO:Importing libraries
2022-08-11 22:42:44,343:INFO:Copying training dataset
2022-08-11 22:42:44,352:INFO:Defining folds
2022-08-11 22:42:44,353:INFO:Declaring metric variables
2022-08-11 22:42:44,355:INFO:Importing untrained model
2022-08-11 22:42:44,358:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:42:44,374:INFO:Starting cross validation
2022-08-11 22:42:44,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:42:45,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,067:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,082:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,152:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,182:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,207:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,291:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,368:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,399:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,539:INFO:Calculating mean and std
2022-08-11 22:42:45,540:INFO:Creating metrics dataframe
2022-08-11 22:42:45,543:INFO:Uploading results into container
2022-08-11 22:42:45,543:INFO:Uploading model into container now
2022-08-11 22:42:45,543:INFO:master_model_container: 18
2022-08-11 22:42:45,543:INFO:display_container: 2
2022-08-11 22:42:45,544:INFO:LGBMRegressor(random_state=8017)
2022-08-11 22:42:45,544:INFO:create_model() successfully completed......................................
2022-08-11 22:42:45,650:INFO:SubProcess create_model() end ==================================
2022-08-11 22:42:45,651:INFO:Creating metrics dataframe
2022-08-11 22:42:45,660:INFO:Initializing Dummy Regressor
2022-08-11 22:42:45,660:INFO:Total runtime is 2.95891508658727 minutes
2022-08-11 22:42:45,662:INFO:SubProcess create_model() called ==================================
2022-08-11 22:42:45,662:INFO:Initializing create_model()
2022-08-11 22:42:45,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ebfd41eb0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:42:45,663:INFO:Checking exceptions
2022-08-11 22:42:45,671:INFO:Importing libraries
2022-08-11 22:42:45,671:INFO:Copying training dataset
2022-08-11 22:42:45,686:INFO:Defining folds
2022-08-11 22:42:45,687:INFO:Declaring metric variables
2022-08-11 22:42:45,690:INFO:Importing untrained model
2022-08-11 22:42:45,693:INFO:Dummy Regressor Imported successfully
2022-08-11 22:42:45,698:INFO:Starting cross validation
2022-08-11 22:42:45,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:42:45,819:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,820:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,821:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,822:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,860:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,871:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:45,899:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:42:46,018:INFO:Calculating mean and std
2022-08-11 22:42:46,020:INFO:Creating metrics dataframe
2022-08-11 22:42:46,022:INFO:Uploading results into container
2022-08-11 22:42:46,022:INFO:Uploading model into container now
2022-08-11 22:42:46,022:INFO:master_model_container: 19
2022-08-11 22:42:46,022:INFO:display_container: 2
2022-08-11 22:42:46,023:INFO:DummyRegressor()
2022-08-11 22:42:46,023:INFO:create_model() successfully completed......................................
2022-08-11 22:42:46,129:INFO:SubProcess create_model() end ==================================
2022-08-11 22:42:46,129:INFO:Creating metrics dataframe
2022-08-11 22:42:46,146:INFO:Initializing create_model()
2022-08-11 22:42:46,147:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8017), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:42:46,147:INFO:Checking exceptions
2022-08-11 22:42:46,155:INFO:Importing libraries
2022-08-11 22:42:46,155:INFO:Copying training dataset
2022-08-11 22:42:46,162:INFO:Defining folds
2022-08-11 22:42:46,163:INFO:Declaring metric variables
2022-08-11 22:42:46,163:INFO:Importing untrained model
2022-08-11 22:42:46,163:INFO:Declaring custom model
2022-08-11 22:42:46,163:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:42:46,164:INFO:Cross validation set to False
2022-08-11 22:42:46,164:INFO:Fitting Model
2022-08-11 22:42:56,749:INFO:RandomForestRegressor(n_jobs=-1, random_state=8017)
2022-08-11 22:42:56,749:INFO:create_model() successfully completed......................................
2022-08-11 22:42:56,877:INFO:master_model_container: 19
2022-08-11 22:42:56,877:INFO:display_container: 2
2022-08-11 22:42:56,877:INFO:RandomForestRegressor(n_jobs=-1, random_state=8017)
2022-08-11 22:42:56,878:INFO:compare_models() successfully completed......................................
2022-08-11 22:43:11,261:INFO:Initializing create_model()
2022-08-11 22:43:11,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:43:11,262:INFO:Checking exceptions
2022-08-11 22:43:11,305:INFO:Importing libraries
2022-08-11 22:43:11,305:INFO:Copying training dataset
2022-08-11 22:43:11,327:INFO:Defining folds
2022-08-11 22:43:11,328:INFO:Declaring metric variables
2022-08-11 22:43:11,330:INFO:Importing untrained model
2022-08-11 22:43:11,333:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:43:11,338:INFO:Starting cross validation
2022-08-11 22:43:11,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:44:39,525:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:39,728:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:39,981:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,054:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,218:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,340:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:44:40,478:INFO:Calculating mean and std
2022-08-11 22:44:40,479:INFO:Creating metrics dataframe
2022-08-11 22:44:40,483:INFO:Finalizing model
2022-08-11 22:44:50,752:INFO:Uploading results into container
2022-08-11 22:44:50,753:INFO:Uploading model into container now
2022-08-11 22:44:50,760:INFO:master_model_container: 20
2022-08-11 22:44:50,760:INFO:display_container: 3
2022-08-11 22:44:50,760:INFO:RandomForestRegressor(n_jobs=-1, random_state=8017)
2022-08-11 22:44:50,760:INFO:create_model() successfully completed......................................
2022-08-11 22:44:50,870:INFO:Initializing finalize_model()
2022-08-11 22:44:50,871:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8017), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:44:50,872:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=8017)
2022-08-11 22:44:50,895:INFO:Initializing create_model()
2022-08-11 22:44:50,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=8017), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:44:50,895:INFO:Checking exceptions
2022-08-11 22:44:50,896:INFO:Importing libraries
2022-08-11 22:44:50,896:INFO:Copying training dataset
2022-08-11 22:44:50,901:INFO:Defining folds
2022-08-11 22:44:50,901:INFO:Declaring metric variables
2022-08-11 22:44:50,901:INFO:Importing untrained model
2022-08-11 22:44:50,901:INFO:Declaring custom model
2022-08-11 22:44:50,902:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:44:50,902:INFO:Cross validation set to False
2022-08-11 22:44:50,902:INFO:Fitting Model
2022-08-11 22:45:05,878:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8017))])
2022-08-11 22:45:05,878:INFO:create_model() successfully completed......................................
2022-08-11 22:45:05,991:INFO:Initializing predict_model()
2022-08-11 22:45:05,991:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8017))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7edaa591f0>)
2022-08-11 22:45:05,991:INFO:Checking exceptions
2022-08-11 22:45:05,991:INFO:Preloading libraries
2022-08-11 22:45:06,283:INFO:Set up data.
2022-08-11 22:45:06,608:INFO:display_container: 4
2022-08-11 22:45:06,609:INFO:master_model_container: 20
2022-08-11 22:45:06,609:INFO:display_container: 4
2022-08-11 22:45:06,613:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8017))])
2022-08-11 22:45:06,613:INFO:finalize_model() successfully completed......................................
2022-08-11 22:45:06,725:INFO:Initializing predict_model()
2022-08-11 22:45:06,725:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7f09413af0>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=8017))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e156241f0>)
2022-08-11 22:45:06,725:INFO:Checking exceptions
2022-08-11 22:45:06,725:INFO:Preloading libraries
2022-08-11 22:45:06,989:INFO:Set up data.
2022-08-11 22:45:07,592:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3486322105.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_12'] = predict_model(model_y12, data=test_df)['prediction_label']

2022-08-11 22:45:07,598:INFO:PyCaret RegressionExperiment
2022-08-11 22:45:07,598:INFO:Logging name: reg-default-name
2022-08-11 22:45:07,598:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:45:07,598:INFO:version 3.0.0.rc3
2022-08-11 22:45:07,598:INFO:Initializing setup()
2022-08-11 22:45:07,598:INFO:self.USI: 48a0
2022-08-11 22:45:07,598:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:45:07,598:INFO:Checking environment
2022-08-11 22:45:07,598:INFO:python_version: 3.8.8
2022-08-11 22:45:07,598:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:45:07,598:INFO:machine: x86_64
2022-08-11 22:45:07,598:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:45:07,598:INFO:Memory: svmem(total=34359738368, available=3887489024, percent=88.7, used=4230766592, free=83243008, active=3806519296, inactive=3786534912, wired=424247296)
2022-08-11 22:45:07,598:INFO:Physical Core: 10
2022-08-11 22:45:07,598:INFO:Logical Core: 10
2022-08-11 22:45:07,598:INFO:Checking libraries
2022-08-11 22:45:07,598:INFO:System:
2022-08-11 22:45:07,598:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:45:07,598:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:45:07,598:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:45:07,598:INFO:PyCaret required dependencies:
2022-08-11 22:45:07,598:INFO:                 pip: 22.1.2
2022-08-11 22:45:07,598:INFO:          setuptools: 61.2.0
2022-08-11 22:45:07,598:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:45:07,598:INFO:             IPython: 8.4.0
2022-08-11 22:45:07,598:INFO:          ipywidgets: 7.6.5
2022-08-11 22:45:07,599:INFO:                tqdm: 4.64.0
2022-08-11 22:45:07,599:INFO:               numpy: 1.22.4
2022-08-11 22:45:07,599:INFO:              pandas: 1.4.3
2022-08-11 22:45:07,599:INFO:              jinja2: 3.0.3
2022-08-11 22:45:07,599:INFO:               scipy: 1.5.4
2022-08-11 22:45:07,599:INFO:              joblib: 1.1.0
2022-08-11 22:45:07,599:INFO:             sklearn: 1.1.1
2022-08-11 22:45:07,599:INFO:                pyod: 1.0.4
2022-08-11 22:45:07,599:INFO:            imblearn: 0.9.1
2022-08-11 22:45:07,599:INFO:   category_encoders: 2.5.0
2022-08-11 22:45:07,599:INFO:            lightgbm: 3.2.1
2022-08-11 22:45:07,599:INFO:               numba: 0.55.2
2022-08-11 22:45:07,599:INFO:            requests: 2.28.1
2022-08-11 22:45:07,599:INFO:          matplotlib: 3.5.1
2022-08-11 22:45:07,599:INFO:          scikitplot: 0.3.7
2022-08-11 22:45:07,599:INFO:         yellowbrick: 1.4
2022-08-11 22:45:07,599:INFO:              plotly: 5.9.0
2022-08-11 22:45:07,599:INFO:             kaleido: 0.2.1
2022-08-11 22:45:07,599:INFO:         statsmodels: 0.13.2
2022-08-11 22:45:07,599:INFO:              sktime: 0.13.0
2022-08-11 22:45:07,599:INFO:               tbats: 1.1.0
2022-08-11 22:45:07,599:INFO:            pmdarima: 1.8.5
2022-08-11 22:45:07,599:INFO:              psutil: 5.9.1
2022-08-11 22:45:07,599:INFO:PyCaret optional dependencies:
2022-08-11 22:45:07,599:INFO:                shap: Not installed
2022-08-11 22:45:07,599:INFO:           interpret: Not installed
2022-08-11 22:45:07,599:INFO:                umap: 0.5.3
2022-08-11 22:45:07,599:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:45:07,599:INFO:  explainerdashboard: Not installed
2022-08-11 22:45:07,599:INFO:             autoviz: Not installed
2022-08-11 22:45:07,599:INFO:           fairlearn: Not installed
2022-08-11 22:45:07,599:INFO:             xgboost: 1.6.1
2022-08-11 22:45:07,599:INFO:            catboost: Not installed
2022-08-11 22:45:07,599:INFO:              kmodes: 0.12.1
2022-08-11 22:45:07,599:INFO:             mlxtend: 0.19.0
2022-08-11 22:45:07,599:INFO:       statsforecast: Not installed
2022-08-11 22:45:07,599:INFO:        tune_sklearn: Not installed
2022-08-11 22:45:07,599:INFO:                 ray: Not installed
2022-08-11 22:45:07,599:INFO:            hyperopt: Not installed
2022-08-11 22:45:07,599:INFO:              optuna: Not installed
2022-08-11 22:45:07,599:INFO:               skopt: Not installed
2022-08-11 22:45:07,600:INFO:              mlflow: 1.27.0
2022-08-11 22:45:07,600:INFO:              gradio: Not installed
2022-08-11 22:45:07,600:INFO:             fastapi: Not installed
2022-08-11 22:45:07,600:INFO:             uvicorn: Not installed
2022-08-11 22:45:07,600:INFO:              m2cgen: Not installed
2022-08-11 22:45:07,600:INFO:           evidently: Not installed
2022-08-11 22:45:07,600:INFO:                nltk: 3.7
2022-08-11 22:45:07,600:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:45:07,600:INFO:              gensim: 3.8.3
2022-08-11 22:45:07,600:INFO:               spacy: 2.3.7
2022-08-11 22:45:07,600:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:45:07,600:INFO:            textblob: 0.17.1
2022-08-11 22:45:07,600:INFO:               fugue: Not installed
2022-08-11 22:45:07,600:INFO:           streamlit: Not installed
2022-08-11 22:45:07,600:INFO:             prophet: Not installed
2022-08-11 22:45:07,600:INFO:None
2022-08-11 22:45:07,600:INFO:Set up data.
2022-08-11 22:45:07,633:INFO:Set up train/test split.
2022-08-11 22:45:07,645:INFO:Set up folding strategy.
2022-08-11 22:45:07,645:INFO:Assigning column types.
2022-08-11 22:45:07,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:45:07,652:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,656:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,660:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,717:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,757:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:07,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:07,760:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,764:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,768:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,865:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:07,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:07,867:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:45:07,872:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,876:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,972:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,972:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:07,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:07,979:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:45:07,983:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,039:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,080:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,082:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:45:08,090:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,147:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,187:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,188:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,198:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,295:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,298:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:45:08,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,403:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,470:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,510:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,512:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:45:08,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,616:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,683:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:45:08,724:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,726:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:45:08,834:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,940:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:08,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:08,943:INFO:Preparing preprocessing pipeline...
2022-08-11 22:45:08,944:INFO:Set up simple imputation.
2022-08-11 22:45:08,944:INFO:Set up variance threshold.
2022-08-11 22:45:09,114:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:45:09,117:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:45:09,117:INFO:Creating final display dataframe.
2022-08-11 22:45:09,790:INFO:Setup display_container:                Description             Value
0               Session id              4039
1                   Target              Y_13
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              48a0
2022-08-11 22:45:09,900:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:09,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:10,014:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:45:10,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:45:10,038:INFO:setup() successfully completed in 2.44s...............
2022-08-11 22:45:10,049:INFO:Initializing compare_models()
2022-08-11 22:45:10,049:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:45:10,050:INFO:Checking exceptions
2022-08-11 22:45:10,055:INFO:Preparing display monitor
2022-08-11 22:45:10,080:INFO:Initializing Linear Regression
2022-08-11 22:45:10,080:INFO:Total runtime is 4.649162292480469e-06 minutes
2022-08-11 22:45:10,083:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:10,084:INFO:Initializing create_model()
2022-08-11 22:45:10,084:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:10,084:INFO:Checking exceptions
2022-08-11 22:45:10,091:INFO:Importing libraries
2022-08-11 22:45:10,091:INFO:Copying training dataset
2022-08-11 22:45:10,102:INFO:Defining folds
2022-08-11 22:45:10,102:INFO:Declaring metric variables
2022-08-11 22:45:10,104:INFO:Importing untrained model
2022-08-11 22:45:10,107:INFO:Linear Regression Imported successfully
2022-08-11 22:45:10,112:INFO:Starting cross validation
2022-08-11 22:45:10,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:10,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:10,772:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:10,810:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:10,813:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:10,837:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:10,853:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:10,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,010:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,075:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,319:INFO:Calculating mean and std
2022-08-11 22:45:11,320:INFO:Creating metrics dataframe
2022-08-11 22:45:11,323:INFO:Uploading results into container
2022-08-11 22:45:11,324:INFO:Uploading model into container now
2022-08-11 22:45:11,324:INFO:master_model_container: 1
2022-08-11 22:45:11,324:INFO:display_container: 2
2022-08-11 22:45:11,324:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:45:11,324:INFO:create_model() successfully completed......................................
2022-08-11 22:45:11,436:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:11,436:INFO:Creating metrics dataframe
2022-08-11 22:45:11,441:INFO:Initializing Lasso Regression
2022-08-11 22:45:11,441:INFO:Total runtime is 0.022694464524586996 minutes
2022-08-11 22:45:11,444:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:11,444:INFO:Initializing create_model()
2022-08-11 22:45:11,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:11,445:INFO:Checking exceptions
2022-08-11 22:45:11,450:INFO:Importing libraries
2022-08-11 22:45:11,450:INFO:Copying training dataset
2022-08-11 22:45:11,458:INFO:Defining folds
2022-08-11 22:45:11,458:INFO:Declaring metric variables
2022-08-11 22:45:11,460:INFO:Importing untrained model
2022-08-11 22:45:11,463:INFO:Lasso Regression Imported successfully
2022-08-11 22:45:11,468:INFO:Starting cross validation
2022-08-11 22:45:11,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:11,618:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,621:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,644:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,671:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:11,810:INFO:Calculating mean and std
2022-08-11 22:45:11,811:INFO:Creating metrics dataframe
2022-08-11 22:45:11,814:INFO:Uploading results into container
2022-08-11 22:45:11,814:INFO:Uploading model into container now
2022-08-11 22:45:11,815:INFO:master_model_container: 2
2022-08-11 22:45:11,815:INFO:display_container: 2
2022-08-11 22:45:11,815:INFO:Lasso(random_state=4039)
2022-08-11 22:45:11,815:INFO:create_model() successfully completed......................................
2022-08-11 22:45:11,922:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:11,922:INFO:Creating metrics dataframe
2022-08-11 22:45:11,928:INFO:Initializing Ridge Regression
2022-08-11 22:45:11,928:INFO:Total runtime is 0.030803048610687257 minutes
2022-08-11 22:45:11,930:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:11,930:INFO:Initializing create_model()
2022-08-11 22:45:11,930:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:11,930:INFO:Checking exceptions
2022-08-11 22:45:11,935:INFO:Importing libraries
2022-08-11 22:45:11,935:INFO:Copying training dataset
2022-08-11 22:45:11,942:INFO:Defining folds
2022-08-11 22:45:11,942:INFO:Declaring metric variables
2022-08-11 22:45:11,945:INFO:Importing untrained model
2022-08-11 22:45:11,948:INFO:Ridge Regression Imported successfully
2022-08-11 22:45:11,953:INFO:Starting cross validation
2022-08-11 22:45:11,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:12,075:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,096:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,111:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,121:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,189:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,307:INFO:Calculating mean and std
2022-08-11 22:45:12,309:INFO:Creating metrics dataframe
2022-08-11 22:45:12,312:INFO:Uploading results into container
2022-08-11 22:45:12,312:INFO:Uploading model into container now
2022-08-11 22:45:12,313:INFO:master_model_container: 3
2022-08-11 22:45:12,313:INFO:display_container: 2
2022-08-11 22:45:12,313:INFO:Ridge(random_state=4039)
2022-08-11 22:45:12,313:INFO:create_model() successfully completed......................................
2022-08-11 22:45:12,420:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:12,420:INFO:Creating metrics dataframe
2022-08-11 22:45:12,428:INFO:Initializing Elastic Net
2022-08-11 22:45:12,428:INFO:Total runtime is 0.0391440471013387 minutes
2022-08-11 22:45:12,431:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:12,432:INFO:Initializing create_model()
2022-08-11 22:45:12,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:12,432:INFO:Checking exceptions
2022-08-11 22:45:12,436:INFO:Importing libraries
2022-08-11 22:45:12,436:INFO:Copying training dataset
2022-08-11 22:45:12,444:INFO:Defining folds
2022-08-11 22:45:12,444:INFO:Declaring metric variables
2022-08-11 22:45:12,446:INFO:Importing untrained model
2022-08-11 22:45:12,449:INFO:Elastic Net Imported successfully
2022-08-11 22:45:12,454:INFO:Starting cross validation
2022-08-11 22:45:12,455:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:12,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,588:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,588:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,594:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,594:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,605:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,611:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,645:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,654:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:12,773:INFO:Calculating mean and std
2022-08-11 22:45:12,775:INFO:Creating metrics dataframe
2022-08-11 22:45:12,778:INFO:Uploading results into container
2022-08-11 22:45:12,779:INFO:Uploading model into container now
2022-08-11 22:45:12,779:INFO:master_model_container: 4
2022-08-11 22:45:12,779:INFO:display_container: 2
2022-08-11 22:45:12,779:INFO:ElasticNet(random_state=4039)
2022-08-11 22:45:12,779:INFO:create_model() successfully completed......................................
2022-08-11 22:45:12,887:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:12,887:INFO:Creating metrics dataframe
2022-08-11 22:45:12,893:INFO:Initializing Least Angle Regression
2022-08-11 22:45:12,893:INFO:Total runtime is 0.0468932310740153 minutes
2022-08-11 22:45:12,896:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:12,897:INFO:Initializing create_model()
2022-08-11 22:45:12,897:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:12,897:INFO:Checking exceptions
2022-08-11 22:45:12,901:INFO:Importing libraries
2022-08-11 22:45:12,901:INFO:Copying training dataset
2022-08-11 22:45:12,909:INFO:Defining folds
2022-08-11 22:45:12,909:INFO:Declaring metric variables
2022-08-11 22:45:12,912:INFO:Importing untrained model
2022-08-11 22:45:12,915:INFO:Least Angle Regression Imported successfully
2022-08-11 22:45:12,920:INFO:Starting cross validation
2022-08-11 22:45:12,921:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:13,046:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,047:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,049:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,064:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,069:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,070:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,075:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,097:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,107:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,112:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,122:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,130:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,246:INFO:Calculating mean and std
2022-08-11 22:45:13,247:INFO:Creating metrics dataframe
2022-08-11 22:45:13,250:INFO:Uploading results into container
2022-08-11 22:45:13,251:INFO:Uploading model into container now
2022-08-11 22:45:13,251:INFO:master_model_container: 5
2022-08-11 22:45:13,251:INFO:display_container: 2
2022-08-11 22:45:13,251:INFO:Lars(random_state=4039)
2022-08-11 22:45:13,251:INFO:create_model() successfully completed......................................
2022-08-11 22:45:13,358:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:13,358:INFO:Creating metrics dataframe
2022-08-11 22:45:13,365:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:45:13,365:INFO:Total runtime is 0.054755246639251715 minutes
2022-08-11 22:45:13,368:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:13,368:INFO:Initializing create_model()
2022-08-11 22:45:13,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:13,368:INFO:Checking exceptions
2022-08-11 22:45:13,373:INFO:Importing libraries
2022-08-11 22:45:13,373:INFO:Copying training dataset
2022-08-11 22:45:13,381:INFO:Defining folds
2022-08-11 22:45:13,381:INFO:Declaring metric variables
2022-08-11 22:45:13,384:INFO:Importing untrained model
2022-08-11 22:45:13,386:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:45:13,391:INFO:Starting cross validation
2022-08-11 22:45:13,392:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:13,516:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,520:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,522:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,524:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,526:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,528:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,534:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,535:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,536:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,543:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,543:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,543:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,551:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,553:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,586:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,602:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:45:13,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,726:INFO:Calculating mean and std
2022-08-11 22:45:13,727:INFO:Creating metrics dataframe
2022-08-11 22:45:13,729:INFO:Uploading results into container
2022-08-11 22:45:13,730:INFO:Uploading model into container now
2022-08-11 22:45:13,730:INFO:master_model_container: 6
2022-08-11 22:45:13,730:INFO:display_container: 2
2022-08-11 22:45:13,730:INFO:LassoLars(random_state=4039)
2022-08-11 22:45:13,730:INFO:create_model() successfully completed......................................
2022-08-11 22:45:13,836:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:13,836:INFO:Creating metrics dataframe
2022-08-11 22:45:13,844:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:45:13,844:INFO:Total runtime is 0.06273638407389323 minutes
2022-08-11 22:45:13,846:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:13,847:INFO:Initializing create_model()
2022-08-11 22:45:13,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:13,847:INFO:Checking exceptions
2022-08-11 22:45:13,851:INFO:Importing libraries
2022-08-11 22:45:13,851:INFO:Copying training dataset
2022-08-11 22:45:13,859:INFO:Defining folds
2022-08-11 22:45:13,859:INFO:Declaring metric variables
2022-08-11 22:45:13,861:INFO:Importing untrained model
2022-08-11 22:45:13,864:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:45:13,870:INFO:Starting cross validation
2022-08-11 22:45:13,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:13,980:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,988:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,991:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,992:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:13,998:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:13,999:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:14,003:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,001:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,010:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,018:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:14,031:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,032:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,031:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:14,037:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:14,059:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,095:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:45:14,107:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,227:INFO:Calculating mean and std
2022-08-11 22:45:14,229:INFO:Creating metrics dataframe
2022-08-11 22:45:14,232:INFO:Uploading results into container
2022-08-11 22:45:14,232:INFO:Uploading model into container now
2022-08-11 22:45:14,232:INFO:master_model_container: 7
2022-08-11 22:45:14,232:INFO:display_container: 2
2022-08-11 22:45:14,232:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:45:14,233:INFO:create_model() successfully completed......................................
2022-08-11 22:45:14,342:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:14,342:INFO:Creating metrics dataframe
2022-08-11 22:45:14,349:INFO:Initializing Bayesian Ridge
2022-08-11 22:45:14,349:INFO:Total runtime is 0.07115396658579509 minutes
2022-08-11 22:45:14,352:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:14,352:INFO:Initializing create_model()
2022-08-11 22:45:14,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:14,353:INFO:Checking exceptions
2022-08-11 22:45:14,358:INFO:Importing libraries
2022-08-11 22:45:14,358:INFO:Copying training dataset
2022-08-11 22:45:14,366:INFO:Defining folds
2022-08-11 22:45:14,366:INFO:Declaring metric variables
2022-08-11 22:45:14,369:INFO:Importing untrained model
2022-08-11 22:45:14,371:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:45:14,376:INFO:Starting cross validation
2022-08-11 22:45:14,377:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:14,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,765:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,766:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,774:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,777:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,789:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,792:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,803:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,849:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:14,966:INFO:Calculating mean and std
2022-08-11 22:45:14,967:INFO:Creating metrics dataframe
2022-08-11 22:45:14,969:INFO:Uploading results into container
2022-08-11 22:45:14,970:INFO:Uploading model into container now
2022-08-11 22:45:14,970:INFO:master_model_container: 8
2022-08-11 22:45:14,970:INFO:display_container: 2
2022-08-11 22:45:14,970:INFO:BayesianRidge()
2022-08-11 22:45:14,970:INFO:create_model() successfully completed......................................
2022-08-11 22:45:15,077:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:15,077:INFO:Creating metrics dataframe
2022-08-11 22:45:15,084:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:45:15,084:INFO:Total runtime is 0.08340166409810384 minutes
2022-08-11 22:45:15,086:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:15,086:INFO:Initializing create_model()
2022-08-11 22:45:15,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:15,086:INFO:Checking exceptions
2022-08-11 22:45:15,091:INFO:Importing libraries
2022-08-11 22:45:15,091:INFO:Copying training dataset
2022-08-11 22:45:15,098:INFO:Defining folds
2022-08-11 22:45:15,098:INFO:Declaring metric variables
2022-08-11 22:45:15,101:INFO:Importing untrained model
2022-08-11 22:45:15,104:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:45:15,109:INFO:Starting cross validation
2022-08-11 22:45:15,109:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:15,321:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,324:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,331:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,376:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,385:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,394:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,426:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:15,545:INFO:Calculating mean and std
2022-08-11 22:45:15,547:INFO:Creating metrics dataframe
2022-08-11 22:45:15,551:INFO:Uploading results into container
2022-08-11 22:45:15,551:INFO:Uploading model into container now
2022-08-11 22:45:15,551:INFO:master_model_container: 9
2022-08-11 22:45:15,551:INFO:display_container: 2
2022-08-11 22:45:15,552:INFO:PassiveAggressiveRegressor(random_state=4039)
2022-08-11 22:45:15,552:INFO:create_model() successfully completed......................................
2022-08-11 22:45:15,659:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:15,659:INFO:Creating metrics dataframe
2022-08-11 22:45:15,667:INFO:Initializing Huber Regressor
2022-08-11 22:45:15,667:INFO:Total runtime is 0.09312288363774618 minutes
2022-08-11 22:45:15,670:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:15,670:INFO:Initializing create_model()
2022-08-11 22:45:15,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:15,670:INFO:Checking exceptions
2022-08-11 22:45:15,675:INFO:Importing libraries
2022-08-11 22:45:15,675:INFO:Copying training dataset
2022-08-11 22:45:15,683:INFO:Defining folds
2022-08-11 22:45:15,683:INFO:Declaring metric variables
2022-08-11 22:45:15,686:INFO:Importing untrained model
2022-08-11 22:45:15,689:INFO:Huber Regressor Imported successfully
2022-08-11 22:45:15,694:INFO:Starting cross validation
2022-08-11 22:45:15,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:16,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,698:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,719:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,743:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,745:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,746:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,778:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,779:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,783:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,784:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,791:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,792:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:45:16,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:16,920:INFO:Calculating mean and std
2022-08-11 22:45:16,921:INFO:Creating metrics dataframe
2022-08-11 22:45:16,924:INFO:Uploading results into container
2022-08-11 22:45:16,924:INFO:Uploading model into container now
2022-08-11 22:45:16,925:INFO:master_model_container: 10
2022-08-11 22:45:16,925:INFO:display_container: 2
2022-08-11 22:45:16,925:INFO:HuberRegressor()
2022-08-11 22:45:16,925:INFO:create_model() successfully completed......................................
2022-08-11 22:45:17,031:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:17,031:INFO:Creating metrics dataframe
2022-08-11 22:45:17,039:INFO:Initializing K Neighbors Regressor
2022-08-11 22:45:17,039:INFO:Total runtime is 0.11598034699757895 minutes
2022-08-11 22:45:17,040:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:17,041:INFO:Initializing create_model()
2022-08-11 22:45:17,041:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:17,041:INFO:Checking exceptions
2022-08-11 22:45:17,047:INFO:Importing libraries
2022-08-11 22:45:17,047:INFO:Copying training dataset
2022-08-11 22:45:17,060:INFO:Defining folds
2022-08-11 22:45:17,060:INFO:Declaring metric variables
2022-08-11 22:45:17,063:INFO:Importing untrained model
2022-08-11 22:45:17,066:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:45:17,071:INFO:Starting cross validation
2022-08-11 22:45:17,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:17,182:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,218:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,224:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,227:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,247:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,259:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,270:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:17,296:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:18,498:INFO:Calculating mean and std
2022-08-11 22:45:18,499:INFO:Creating metrics dataframe
2022-08-11 22:45:18,501:INFO:Uploading results into container
2022-08-11 22:45:18,501:INFO:Uploading model into container now
2022-08-11 22:45:18,502:INFO:master_model_container: 11
2022-08-11 22:45:18,502:INFO:display_container: 2
2022-08-11 22:45:18,502:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:45:18,502:INFO:create_model() successfully completed......................................
2022-08-11 22:45:18,609:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:18,609:INFO:Creating metrics dataframe
2022-08-11 22:45:18,616:INFO:Initializing Decision Tree Regressor
2022-08-11 22:45:18,616:INFO:Total runtime is 0.14227573076883954 minutes
2022-08-11 22:45:18,619:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:18,619:INFO:Initializing create_model()
2022-08-11 22:45:18,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:18,619:INFO:Checking exceptions
2022-08-11 22:45:18,624:INFO:Importing libraries
2022-08-11 22:45:18,624:INFO:Copying training dataset
2022-08-11 22:45:18,632:INFO:Defining folds
2022-08-11 22:45:18,632:INFO:Declaring metric variables
2022-08-11 22:45:18,635:INFO:Importing untrained model
2022-08-11 22:45:18,637:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:45:18,642:INFO:Starting cross validation
2022-08-11 22:45:18,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:45:20,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,063:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,142:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,159:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,166:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,185:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,237:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,285:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:45:20,406:INFO:Calculating mean and std
2022-08-11 22:45:20,407:INFO:Creating metrics dataframe
2022-08-11 22:45:20,409:INFO:Uploading results into container
2022-08-11 22:45:20,410:INFO:Uploading model into container now
2022-08-11 22:45:20,410:INFO:master_model_container: 12
2022-08-11 22:45:20,410:INFO:display_container: 2
2022-08-11 22:45:20,410:INFO:DecisionTreeRegressor(random_state=4039)
2022-08-11 22:45:20,410:INFO:create_model() successfully completed......................................
2022-08-11 22:45:20,517:INFO:SubProcess create_model() end ==================================
2022-08-11 22:45:20,517:INFO:Creating metrics dataframe
2022-08-11 22:45:20,524:INFO:Initializing Random Forest Regressor
2022-08-11 22:45:20,525:INFO:Total runtime is 0.1740816632906596 minutes
2022-08-11 22:45:20,527:INFO:SubProcess create_model() called ==================================
2022-08-11 22:45:20,527:INFO:Initializing create_model()
2022-08-11 22:45:20,527:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:45:20,527:INFO:Checking exceptions
2022-08-11 22:45:20,532:INFO:Importing libraries
2022-08-11 22:45:20,532:INFO:Copying training dataset
2022-08-11 22:45:20,540:INFO:Defining folds
2022-08-11 22:45:20,540:INFO:Declaring metric variables
2022-08-11 22:45:20,543:INFO:Importing untrained model
2022-08-11 22:45:20,546:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:45:20,550:INFO:Starting cross validation
2022-08-11 22:45:20,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:46:48,749:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,346:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,399:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,502:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,551:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,641:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,737:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,761:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,788:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:46:49,936:INFO:Calculating mean and std
2022-08-11 22:46:49,938:INFO:Creating metrics dataframe
2022-08-11 22:46:49,940:INFO:Uploading results into container
2022-08-11 22:46:49,940:INFO:Uploading model into container now
2022-08-11 22:46:49,941:INFO:master_model_container: 13
2022-08-11 22:46:49,941:INFO:display_container: 2
2022-08-11 22:46:49,941:INFO:RandomForestRegressor(n_jobs=-1, random_state=4039)
2022-08-11 22:46:49,941:INFO:create_model() successfully completed......................................
2022-08-11 22:46:50,049:INFO:SubProcess create_model() end ==================================
2022-08-11 22:46:50,049:INFO:Creating metrics dataframe
2022-08-11 22:46:50,057:INFO:Initializing Extra Trees Regressor
2022-08-11 22:46:50,057:INFO:Total runtime is 1.6662885983784994 minutes
2022-08-11 22:46:50,060:INFO:SubProcess create_model() called ==================================
2022-08-11 22:46:50,060:INFO:Initializing create_model()
2022-08-11 22:46:50,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:46:50,060:INFO:Checking exceptions
2022-08-11 22:46:50,064:INFO:Importing libraries
2022-08-11 22:46:50,064:INFO:Copying training dataset
2022-08-11 22:46:50,072:INFO:Defining folds
2022-08-11 22:46:50,072:INFO:Declaring metric variables
2022-08-11 22:46:50,076:INFO:Importing untrained model
2022-08-11 22:46:50,079:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:46:50,085:INFO:Starting cross validation
2022-08-11 22:46:50,086:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:47:15,507:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:16,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:16,400:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:20,487:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:21,100:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:21,552:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:23,405:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:23,627:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:23,780:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:23,824:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:24,239:INFO:Calculating mean and std
2022-08-11 22:47:24,240:INFO:Creating metrics dataframe
2022-08-11 22:47:24,243:INFO:Uploading results into container
2022-08-11 22:47:24,243:INFO:Uploading model into container now
2022-08-11 22:47:24,244:INFO:master_model_container: 14
2022-08-11 22:47:24,244:INFO:display_container: 2
2022-08-11 22:47:24,244:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4039)
2022-08-11 22:47:24,244:INFO:create_model() successfully completed......................................
2022-08-11 22:47:24,355:INFO:SubProcess create_model() end ==================================
2022-08-11 22:47:24,355:INFO:Creating metrics dataframe
2022-08-11 22:47:24,363:INFO:Initializing AdaBoost Regressor
2022-08-11 22:47:24,364:INFO:Total runtime is 2.238065767288208 minutes
2022-08-11 22:47:24,366:INFO:SubProcess create_model() called ==================================
2022-08-11 22:47:24,367:INFO:Initializing create_model()
2022-08-11 22:47:24,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:47:24,367:INFO:Checking exceptions
2022-08-11 22:47:24,374:INFO:Importing libraries
2022-08-11 22:47:24,374:INFO:Copying training dataset
2022-08-11 22:47:24,385:INFO:Defining folds
2022-08-11 22:47:24,385:INFO:Declaring metric variables
2022-08-11 22:47:24,389:INFO:Importing untrained model
2022-08-11 22:47:24,391:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:47:24,397:INFO:Starting cross validation
2022-08-11 22:47:24,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:47:30,595:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:30,897:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:30,972:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:31,047:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:31,266:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:31,339:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:31,344:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:31,412:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:31,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:32,190:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:32,318:INFO:Calculating mean and std
2022-08-11 22:47:32,321:INFO:Creating metrics dataframe
2022-08-11 22:47:32,325:INFO:Uploading results into container
2022-08-11 22:47:32,326:INFO:Uploading model into container now
2022-08-11 22:47:32,326:INFO:master_model_container: 15
2022-08-11 22:47:32,326:INFO:display_container: 2
2022-08-11 22:47:32,327:INFO:AdaBoostRegressor(random_state=4039)
2022-08-11 22:47:32,327:INFO:create_model() successfully completed......................................
2022-08-11 22:47:32,461:INFO:SubProcess create_model() end ==================================
2022-08-11 22:47:32,462:INFO:Creating metrics dataframe
2022-08-11 22:47:32,472:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:47:32,472:INFO:Total runtime is 2.3732024987538654 minutes
2022-08-11 22:47:32,475:INFO:SubProcess create_model() called ==================================
2022-08-11 22:47:32,476:INFO:Initializing create_model()
2022-08-11 22:47:32,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:47:32,476:INFO:Checking exceptions
2022-08-11 22:47:32,490:INFO:Importing libraries
2022-08-11 22:47:32,490:INFO:Copying training dataset
2022-08-11 22:47:32,513:INFO:Defining folds
2022-08-11 22:47:32,513:INFO:Declaring metric variables
2022-08-11 22:47:32,516:INFO:Importing untrained model
2022-08-11 22:47:32,519:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:47:32,524:INFO:Starting cross validation
2022-08-11 22:47:32,525:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:47:51,878:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:51,956:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:51,958:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,006:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,019:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,031:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,126:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,151:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,168:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,244:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:47:52,366:INFO:Calculating mean and std
2022-08-11 22:47:52,367:INFO:Creating metrics dataframe
2022-08-11 22:47:52,370:INFO:Uploading results into container
2022-08-11 22:47:52,371:INFO:Uploading model into container now
2022-08-11 22:47:52,371:INFO:master_model_container: 16
2022-08-11 22:47:52,371:INFO:display_container: 2
2022-08-11 22:47:52,372:INFO:GradientBoostingRegressor(random_state=4039)
2022-08-11 22:47:52,372:INFO:create_model() successfully completed......................................
2022-08-11 22:47:52,480:INFO:SubProcess create_model() end ==================================
2022-08-11 22:47:52,480:INFO:Creating metrics dataframe
2022-08-11 22:47:52,491:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:47:52,491:INFO:Total runtime is 2.7068511803944904 minutes
2022-08-11 22:47:52,494:INFO:SubProcess create_model() called ==================================
2022-08-11 22:47:52,494:INFO:Initializing create_model()
2022-08-11 22:47:52,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:47:52,494:INFO:Checking exceptions
2022-08-11 22:47:52,504:INFO:Importing libraries
2022-08-11 22:47:52,504:INFO:Copying training dataset
2022-08-11 22:47:52,519:INFO:Defining folds
2022-08-11 22:47:52,519:INFO:Declaring metric variables
2022-08-11 22:47:52,522:INFO:Importing untrained model
2022-08-11 22:47:52,525:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:47:52,531:INFO:Starting cross validation
2022-08-11 22:47:52,531:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:48:03,701:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:03,738:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:03,773:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:03,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:03,832:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:03,870:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:03,908:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:04,030:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:04,048:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:05,209:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:05,340:INFO:Calculating mean and std
2022-08-11 22:48:05,341:INFO:Creating metrics dataframe
2022-08-11 22:48:05,343:INFO:Uploading results into container
2022-08-11 22:48:05,343:INFO:Uploading model into container now
2022-08-11 22:48:05,344:INFO:master_model_container: 17
2022-08-11 22:48:05,344:INFO:display_container: 2
2022-08-11 22:48:05,345:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=4039,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:48:05,345:INFO:create_model() successfully completed......................................
2022-08-11 22:48:05,452:INFO:SubProcess create_model() end ==================================
2022-08-11 22:48:05,452:INFO:Creating metrics dataframe
2022-08-11 22:48:05,461:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:48:05,461:INFO:Total runtime is 2.923018682003021 minutes
2022-08-11 22:48:05,463:INFO:SubProcess create_model() called ==================================
2022-08-11 22:48:05,464:INFO:Initializing create_model()
2022-08-11 22:48:05,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:48:05,464:INFO:Checking exceptions
2022-08-11 22:48:05,472:INFO:Importing libraries
2022-08-11 22:48:05,472:INFO:Copying training dataset
2022-08-11 22:48:05,484:INFO:Defining folds
2022-08-11 22:48:05,485:INFO:Declaring metric variables
2022-08-11 22:48:05,488:INFO:Importing untrained model
2022-08-11 22:48:05,491:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:48:05,496:INFO:Starting cross validation
2022-08-11 22:48:05,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:48:06,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,202:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,223:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,260:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,358:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,411:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,649:INFO:Calculating mean and std
2022-08-11 22:48:06,650:INFO:Creating metrics dataframe
2022-08-11 22:48:06,652:INFO:Uploading results into container
2022-08-11 22:48:06,652:INFO:Uploading model into container now
2022-08-11 22:48:06,653:INFO:master_model_container: 18
2022-08-11 22:48:06,653:INFO:display_container: 2
2022-08-11 22:48:06,653:INFO:LGBMRegressor(random_state=4039)
2022-08-11 22:48:06,653:INFO:create_model() successfully completed......................................
2022-08-11 22:48:06,760:INFO:SubProcess create_model() end ==================================
2022-08-11 22:48:06,760:INFO:Creating metrics dataframe
2022-08-11 22:48:06,769:INFO:Initializing Dummy Regressor
2022-08-11 22:48:06,770:INFO:Total runtime is 2.9448330163955685 minutes
2022-08-11 22:48:06,772:INFO:SubProcess create_model() called ==================================
2022-08-11 22:48:06,773:INFO:Initializing create_model()
2022-08-11 22:48:06,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ec74d2250>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:48:06,773:INFO:Checking exceptions
2022-08-11 22:48:06,778:INFO:Importing libraries
2022-08-11 22:48:06,778:INFO:Copying training dataset
2022-08-11 22:48:06,792:INFO:Defining folds
2022-08-11 22:48:06,792:INFO:Declaring metric variables
2022-08-11 22:48:06,795:INFO:Importing untrained model
2022-08-11 22:48:06,798:INFO:Dummy Regressor Imported successfully
2022-08-11 22:48:06,803:INFO:Starting cross validation
2022-08-11 22:48:06,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:48:06,919:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,932:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,933:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,936:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,940:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,941:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,949:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,972:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:06,981:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:48:07,097:INFO:Calculating mean and std
2022-08-11 22:48:07,098:INFO:Creating metrics dataframe
2022-08-11 22:48:07,100:INFO:Uploading results into container
2022-08-11 22:48:07,101:INFO:Uploading model into container now
2022-08-11 22:48:07,101:INFO:master_model_container: 19
2022-08-11 22:48:07,101:INFO:display_container: 2
2022-08-11 22:48:07,101:INFO:DummyRegressor()
2022-08-11 22:48:07,101:INFO:create_model() successfully completed......................................
2022-08-11 22:48:07,207:INFO:SubProcess create_model() end ==================================
2022-08-11 22:48:07,207:INFO:Creating metrics dataframe
2022-08-11 22:48:07,239:INFO:Initializing create_model()
2022-08-11 22:48:07,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4039), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:48:07,239:INFO:Checking exceptions
2022-08-11 22:48:07,246:INFO:Importing libraries
2022-08-11 22:48:07,246:INFO:Copying training dataset
2022-08-11 22:48:07,254:INFO:Defining folds
2022-08-11 22:48:07,254:INFO:Declaring metric variables
2022-08-11 22:48:07,254:INFO:Importing untrained model
2022-08-11 22:48:07,254:INFO:Declaring custom model
2022-08-11 22:48:07,254:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:48:07,255:INFO:Cross validation set to False
2022-08-11 22:48:07,255:INFO:Fitting Model
2022-08-11 22:48:17,799:INFO:RandomForestRegressor(n_jobs=-1, random_state=4039)
2022-08-11 22:48:17,799:INFO:create_model() successfully completed......................................
2022-08-11 22:48:17,930:INFO:master_model_container: 19
2022-08-11 22:48:17,930:INFO:display_container: 2
2022-08-11 22:48:17,931:INFO:RandomForestRegressor(n_jobs=-1, random_state=4039)
2022-08-11 22:48:17,931:INFO:compare_models() successfully completed......................................
2022-08-11 22:48:32,300:INFO:Initializing create_model()
2022-08-11 22:48:32,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:48:32,300:INFO:Checking exceptions
2022-08-11 22:48:32,343:INFO:Importing libraries
2022-08-11 22:48:32,343:INFO:Copying training dataset
2022-08-11 22:48:32,367:INFO:Defining folds
2022-08-11 22:48:32,367:INFO:Declaring metric variables
2022-08-11 22:48:32,370:INFO:Importing untrained model
2022-08-11 22:48:32,373:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:48:32,378:INFO:Starting cross validation
2022-08-11 22:48:32,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:01,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,261:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,345:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,374:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,563:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,662:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,687:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,741:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:01,882:INFO:Calculating mean and std
2022-08-11 22:50:01,883:INFO:Creating metrics dataframe
2022-08-11 22:50:01,887:INFO:Finalizing model
2022-08-11 22:50:12,472:INFO:Uploading results into container
2022-08-11 22:50:12,473:INFO:Uploading model into container now
2022-08-11 22:50:12,480:INFO:master_model_container: 20
2022-08-11 22:50:12,480:INFO:display_container: 3
2022-08-11 22:50:12,480:INFO:RandomForestRegressor(n_jobs=-1, random_state=4039)
2022-08-11 22:50:12,480:INFO:create_model() successfully completed......................................
2022-08-11 22:50:12,593:INFO:Initializing finalize_model()
2022-08-11 22:50:12,593:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4039), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:50:12,593:INFO:Finalizing RandomForestRegressor(n_jobs=-1, random_state=4039)
2022-08-11 22:50:12,614:INFO:Initializing create_model()
2022-08-11 22:50:12,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4039), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:50:12,614:INFO:Checking exceptions
2022-08-11 22:50:12,616:INFO:Importing libraries
2022-08-11 22:50:12,616:INFO:Copying training dataset
2022-08-11 22:50:12,619:INFO:Defining folds
2022-08-11 22:50:12,619:INFO:Declaring metric variables
2022-08-11 22:50:12,619:INFO:Importing untrained model
2022-08-11 22:50:12,619:INFO:Declaring custom model
2022-08-11 22:50:12,620:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:50:12,620:INFO:Cross validation set to False
2022-08-11 22:50:12,620:INFO:Fitting Model
2022-08-11 22:50:28,009:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4039))])
2022-08-11 22:50:28,009:INFO:create_model() successfully completed......................................
2022-08-11 22:50:28,119:INFO:Initializing predict_model()
2022-08-11 22:50:28,119:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4039))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7f093f2700>)
2022-08-11 22:50:28,119:INFO:Checking exceptions
2022-08-11 22:50:28,119:INFO:Preloading libraries
2022-08-11 22:50:28,418:INFO:Set up data.
2022-08-11 22:50:28,745:INFO:display_container: 4
2022-08-11 22:50:28,746:INFO:master_model_container: 20
2022-08-11 22:50:28,746:INFO:display_container: 4
2022-08-11 22:50:28,750:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4039))])
2022-08-11 22:50:28,750:INFO:finalize_model() successfully completed......................................
2022-08-11 22:50:28,861:INFO:Initializing predict_model()
2022-08-11 22:50:28,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e4404b400>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=4039))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e47f64b80>)
2022-08-11 22:50:28,862:INFO:Checking exceptions
2022-08-11 22:50:28,862:INFO:Preloading libraries
2022-08-11 22:50:29,095:INFO:Set up data.
2022-08-11 22:50:29,692:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3554280798.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_13'] = predict_model(model_y13, data=test_df)['prediction_label']

2022-08-11 22:50:29,700:INFO:PyCaret RegressionExperiment
2022-08-11 22:50:29,700:INFO:Logging name: reg-default-name
2022-08-11 22:50:29,700:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:50:29,700:INFO:version 3.0.0.rc3
2022-08-11 22:50:29,700:INFO:Initializing setup()
2022-08-11 22:50:29,700:INFO:self.USI: d375
2022-08-11 22:50:29,700:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:50:29,700:INFO:Checking environment
2022-08-11 22:50:29,700:INFO:python_version: 3.8.8
2022-08-11 22:50:29,700:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:50:29,700:INFO:machine: x86_64
2022-08-11 22:50:29,700:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:50:29,700:INFO:Memory: svmem(total=34359738368, available=3828383744, percent=88.9, used=4237344768, free=17063936, active=3813838848, inactive=3793551360, wired=423505920)
2022-08-11 22:50:29,700:INFO:Physical Core: 10
2022-08-11 22:50:29,700:INFO:Logical Core: 10
2022-08-11 22:50:29,700:INFO:Checking libraries
2022-08-11 22:50:29,701:INFO:System:
2022-08-11 22:50:29,701:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:50:29,701:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:50:29,701:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:50:29,701:INFO:PyCaret required dependencies:
2022-08-11 22:50:29,701:INFO:                 pip: 22.1.2
2022-08-11 22:50:29,701:INFO:          setuptools: 61.2.0
2022-08-11 22:50:29,701:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:50:29,701:INFO:             IPython: 8.4.0
2022-08-11 22:50:29,701:INFO:          ipywidgets: 7.6.5
2022-08-11 22:50:29,701:INFO:                tqdm: 4.64.0
2022-08-11 22:50:29,701:INFO:               numpy: 1.22.4
2022-08-11 22:50:29,701:INFO:              pandas: 1.4.3
2022-08-11 22:50:29,701:INFO:              jinja2: 3.0.3
2022-08-11 22:50:29,701:INFO:               scipy: 1.5.4
2022-08-11 22:50:29,701:INFO:              joblib: 1.1.0
2022-08-11 22:50:29,701:INFO:             sklearn: 1.1.1
2022-08-11 22:50:29,701:INFO:                pyod: 1.0.4
2022-08-11 22:50:29,701:INFO:            imblearn: 0.9.1
2022-08-11 22:50:29,701:INFO:   category_encoders: 2.5.0
2022-08-11 22:50:29,701:INFO:            lightgbm: 3.2.1
2022-08-11 22:50:29,701:INFO:               numba: 0.55.2
2022-08-11 22:50:29,701:INFO:            requests: 2.28.1
2022-08-11 22:50:29,701:INFO:          matplotlib: 3.5.1
2022-08-11 22:50:29,701:INFO:          scikitplot: 0.3.7
2022-08-11 22:50:29,701:INFO:         yellowbrick: 1.4
2022-08-11 22:50:29,701:INFO:              plotly: 5.9.0
2022-08-11 22:50:29,701:INFO:             kaleido: 0.2.1
2022-08-11 22:50:29,701:INFO:         statsmodels: 0.13.2
2022-08-11 22:50:29,701:INFO:              sktime: 0.13.0
2022-08-11 22:50:29,701:INFO:               tbats: 1.1.0
2022-08-11 22:50:29,702:INFO:            pmdarima: 1.8.5
2022-08-11 22:50:29,702:INFO:              psutil: 5.9.1
2022-08-11 22:50:29,702:INFO:PyCaret optional dependencies:
2022-08-11 22:50:29,702:INFO:                shap: Not installed
2022-08-11 22:50:29,702:INFO:           interpret: Not installed
2022-08-11 22:50:29,702:INFO:                umap: 0.5.3
2022-08-11 22:50:29,702:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:50:29,702:INFO:  explainerdashboard: Not installed
2022-08-11 22:50:29,702:INFO:             autoviz: Not installed
2022-08-11 22:50:29,702:INFO:           fairlearn: Not installed
2022-08-11 22:50:29,702:INFO:             xgboost: 1.6.1
2022-08-11 22:50:29,702:INFO:            catboost: Not installed
2022-08-11 22:50:29,702:INFO:              kmodes: 0.12.1
2022-08-11 22:50:29,702:INFO:             mlxtend: 0.19.0
2022-08-11 22:50:29,702:INFO:       statsforecast: Not installed
2022-08-11 22:50:29,702:INFO:        tune_sklearn: Not installed
2022-08-11 22:50:29,702:INFO:                 ray: Not installed
2022-08-11 22:50:29,702:INFO:            hyperopt: Not installed
2022-08-11 22:50:29,702:INFO:              optuna: Not installed
2022-08-11 22:50:29,702:INFO:               skopt: Not installed
2022-08-11 22:50:29,702:INFO:              mlflow: 1.27.0
2022-08-11 22:50:29,702:INFO:              gradio: Not installed
2022-08-11 22:50:29,702:INFO:             fastapi: Not installed
2022-08-11 22:50:29,702:INFO:             uvicorn: Not installed
2022-08-11 22:50:29,702:INFO:              m2cgen: Not installed
2022-08-11 22:50:29,702:INFO:           evidently: Not installed
2022-08-11 22:50:29,702:INFO:                nltk: 3.7
2022-08-11 22:50:29,702:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:50:29,702:INFO:              gensim: 3.8.3
2022-08-11 22:50:29,702:INFO:               spacy: 2.3.7
2022-08-11 22:50:29,702:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:50:29,702:INFO:            textblob: 0.17.1
2022-08-11 22:50:29,702:INFO:               fugue: Not installed
2022-08-11 22:50:29,702:INFO:           streamlit: Not installed
2022-08-11 22:50:29,702:INFO:             prophet: Not installed
2022-08-11 22:50:29,702:INFO:None
2022-08-11 22:50:29,702:INFO:Set up data.
2022-08-11 22:50:29,733:INFO:Set up train/test split.
2022-08-11 22:50:29,744:INFO:Set up folding strategy.
2022-08-11 22:50:29,744:INFO:Assigning column types.
2022-08-11 22:50:29,751:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:50:29,751:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,755:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,816:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,856:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,857:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:29,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:29,859:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,863:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,867:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,967:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:29,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:29,969:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:50:29,973:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:50:29,977:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,087:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,093:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,098:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,156:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,198:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,200:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:50:30,208:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,306:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,306:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,317:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,373:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,413:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,416:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:50:30,480:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,519:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,520:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,586:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,626:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,626:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,628:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:50:30,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,732:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,799:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:50:30,839:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:30,841:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:50:30,950:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:30,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:31,057:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:31,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:31,060:INFO:Preparing preprocessing pipeline...
2022-08-11 22:50:31,061:INFO:Set up simple imputation.
2022-08-11 22:50:31,062:INFO:Set up variance threshold.
2022-08-11 22:50:31,233:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:50:31,237:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:50:31,237:INFO:Creating final display dataframe.
2022-08-11 22:50:31,921:INFO:Setup display_container:                Description             Value
0               Session id               599
1                   Target              Y_14
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              d375
2022-08-11 22:50:32,030:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:32,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:32,133:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:50:32,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:50:32,149:INFO:setup() successfully completed in 2.45s...............
2022-08-11 22:50:32,152:INFO:Initializing compare_models()
2022-08-11 22:50:32,153:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:50:32,153:INFO:Checking exceptions
2022-08-11 22:50:32,158:INFO:Preparing display monitor
2022-08-11 22:50:32,183:INFO:Initializing Linear Regression
2022-08-11 22:50:32,184:INFO:Total runtime is 3.6954879760742188e-06 minutes
2022-08-11 22:50:32,186:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:32,187:INFO:Initializing create_model()
2022-08-11 22:50:32,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:32,187:INFO:Checking exceptions
2022-08-11 22:50:32,193:INFO:Importing libraries
2022-08-11 22:50:32,193:INFO:Copying training dataset
2022-08-11 22:50:32,200:INFO:Defining folds
2022-08-11 22:50:32,200:INFO:Declaring metric variables
2022-08-11 22:50:32,202:INFO:Importing untrained model
2022-08-11 22:50:32,205:INFO:Linear Regression Imported successfully
2022-08-11 22:50:32,210:INFO:Starting cross validation
2022-08-11 22:50:32,210:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:32,952:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:32,973:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:32,996:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:32,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,005:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,026:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,028:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,052:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,210:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,451:INFO:Calculating mean and std
2022-08-11 22:50:33,452:INFO:Creating metrics dataframe
2022-08-11 22:50:33,454:INFO:Uploading results into container
2022-08-11 22:50:33,455:INFO:Uploading model into container now
2022-08-11 22:50:33,455:INFO:master_model_container: 1
2022-08-11 22:50:33,455:INFO:display_container: 2
2022-08-11 22:50:33,455:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:50:33,455:INFO:create_model() successfully completed......................................
2022-08-11 22:50:33,563:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:33,563:INFO:Creating metrics dataframe
2022-08-11 22:50:33,569:INFO:Initializing Lasso Regression
2022-08-11 22:50:33,569:INFO:Total runtime is 0.023100745677948 minutes
2022-08-11 22:50:33,572:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:33,572:INFO:Initializing create_model()
2022-08-11 22:50:33,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:33,572:INFO:Checking exceptions
2022-08-11 22:50:33,577:INFO:Importing libraries
2022-08-11 22:50:33,577:INFO:Copying training dataset
2022-08-11 22:50:33,584:INFO:Defining folds
2022-08-11 22:50:33,585:INFO:Declaring metric variables
2022-08-11 22:50:33,587:INFO:Importing untrained model
2022-08-11 22:50:33,590:INFO:Lasso Regression Imported successfully
2022-08-11 22:50:33,595:INFO:Starting cross validation
2022-08-11 22:50:33,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:33,725:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,756:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,758:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,758:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,760:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,771:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,793:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,795:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:33,915:INFO:Calculating mean and std
2022-08-11 22:50:33,916:INFO:Creating metrics dataframe
2022-08-11 22:50:33,918:INFO:Uploading results into container
2022-08-11 22:50:33,918:INFO:Uploading model into container now
2022-08-11 22:50:33,919:INFO:master_model_container: 2
2022-08-11 22:50:33,919:INFO:display_container: 2
2022-08-11 22:50:33,919:INFO:Lasso(random_state=599)
2022-08-11 22:50:33,919:INFO:create_model() successfully completed......................................
2022-08-11 22:50:34,026:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:34,026:INFO:Creating metrics dataframe
2022-08-11 22:50:34,032:INFO:Initializing Ridge Regression
2022-08-11 22:50:34,047:INFO:Total runtime is 0.031062014897664386 minutes
2022-08-11 22:50:34,050:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:34,050:INFO:Initializing create_model()
2022-08-11 22:50:34,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:34,050:INFO:Checking exceptions
2022-08-11 22:50:34,055:INFO:Importing libraries
2022-08-11 22:50:34,055:INFO:Copying training dataset
2022-08-11 22:50:34,066:INFO:Defining folds
2022-08-11 22:50:34,066:INFO:Declaring metric variables
2022-08-11 22:50:34,068:INFO:Importing untrained model
2022-08-11 22:50:34,071:INFO:Ridge Regression Imported successfully
2022-08-11 22:50:34,075:INFO:Starting cross validation
2022-08-11 22:50:34,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:34,199:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,204:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,218:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,220:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,234:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,235:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,252:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,265:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,411:INFO:Calculating mean and std
2022-08-11 22:50:34,412:INFO:Creating metrics dataframe
2022-08-11 22:50:34,415:INFO:Uploading results into container
2022-08-11 22:50:34,415:INFO:Uploading model into container now
2022-08-11 22:50:34,415:INFO:master_model_container: 3
2022-08-11 22:50:34,415:INFO:display_container: 2
2022-08-11 22:50:34,416:INFO:Ridge(random_state=599)
2022-08-11 22:50:34,416:INFO:create_model() successfully completed......................................
2022-08-11 22:50:34,522:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:34,522:INFO:Creating metrics dataframe
2022-08-11 22:50:34,530:INFO:Initializing Elastic Net
2022-08-11 22:50:34,530:INFO:Total runtime is 0.03910558223724365 minutes
2022-08-11 22:50:34,532:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:34,533:INFO:Initializing create_model()
2022-08-11 22:50:34,533:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:34,533:INFO:Checking exceptions
2022-08-11 22:50:34,538:INFO:Importing libraries
2022-08-11 22:50:34,538:INFO:Copying training dataset
2022-08-11 22:50:34,546:INFO:Defining folds
2022-08-11 22:50:34,547:INFO:Declaring metric variables
2022-08-11 22:50:34,550:INFO:Importing untrained model
2022-08-11 22:50:34,553:INFO:Elastic Net Imported successfully
2022-08-11 22:50:34,557:INFO:Starting cross validation
2022-08-11 22:50:34,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:34,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,692:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,703:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,711:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,712:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,730:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,751:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:34,870:INFO:Calculating mean and std
2022-08-11 22:50:34,871:INFO:Creating metrics dataframe
2022-08-11 22:50:34,873:INFO:Uploading results into container
2022-08-11 22:50:34,874:INFO:Uploading model into container now
2022-08-11 22:50:34,874:INFO:master_model_container: 4
2022-08-11 22:50:34,874:INFO:display_container: 2
2022-08-11 22:50:34,874:INFO:ElasticNet(random_state=599)
2022-08-11 22:50:34,874:INFO:create_model() successfully completed......................................
2022-08-11 22:50:34,982:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:34,982:INFO:Creating metrics dataframe
2022-08-11 22:50:34,989:INFO:Initializing Least Angle Regression
2022-08-11 22:50:34,989:INFO:Total runtime is 0.046755846341451 minutes
2022-08-11 22:50:34,991:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:34,991:INFO:Initializing create_model()
2022-08-11 22:50:34,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:34,991:INFO:Checking exceptions
2022-08-11 22:50:34,997:INFO:Importing libraries
2022-08-11 22:50:34,997:INFO:Copying training dataset
2022-08-11 22:50:35,007:INFO:Defining folds
2022-08-11 22:50:35,007:INFO:Declaring metric variables
2022-08-11 22:50:35,010:INFO:Importing untrained model
2022-08-11 22:50:35,013:INFO:Least Angle Regression Imported successfully
2022-08-11 22:50:35,018:INFO:Starting cross validation
2022-08-11 22:50:35,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:35,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,146:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,160:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,163:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,165:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,173:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,179:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,183:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,184:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,185:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,196:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,203:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,206:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,216:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:35,233:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,350:INFO:Calculating mean and std
2022-08-11 22:50:35,351:INFO:Creating metrics dataframe
2022-08-11 22:50:35,353:INFO:Uploading results into container
2022-08-11 22:50:35,354:INFO:Uploading model into container now
2022-08-11 22:50:35,354:INFO:master_model_container: 5
2022-08-11 22:50:35,354:INFO:display_container: 2
2022-08-11 22:50:35,355:INFO:Lars(random_state=599)
2022-08-11 22:50:35,355:INFO:create_model() successfully completed......................................
2022-08-11 22:50:35,462:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:35,462:INFO:Creating metrics dataframe
2022-08-11 22:50:35,468:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:50:35,468:INFO:Total runtime is 0.05474231243133544 minutes
2022-08-11 22:50:35,470:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:35,470:INFO:Initializing create_model()
2022-08-11 22:50:35,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:35,470:INFO:Checking exceptions
2022-08-11 22:50:35,475:INFO:Importing libraries
2022-08-11 22:50:35,475:INFO:Copying training dataset
2022-08-11 22:50:35,483:INFO:Defining folds
2022-08-11 22:50:35,483:INFO:Declaring metric variables
2022-08-11 22:50:35,486:INFO:Importing untrained model
2022-08-11 22:50:35,489:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:50:35,494:INFO:Starting cross validation
2022-08-11 22:50:35,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:35,608:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,619:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,631:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,631:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,642:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,643:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,647:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,652:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,654:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,659:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,661:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,662:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,664:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,669:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,696:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:50:35,698:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,706:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:35,825:INFO:Calculating mean and std
2022-08-11 22:50:35,827:INFO:Creating metrics dataframe
2022-08-11 22:50:35,829:INFO:Uploading results into container
2022-08-11 22:50:35,829:INFO:Uploading model into container now
2022-08-11 22:50:35,830:INFO:master_model_container: 6
2022-08-11 22:50:35,830:INFO:display_container: 2
2022-08-11 22:50:35,830:INFO:LassoLars(random_state=599)
2022-08-11 22:50:35,830:INFO:create_model() successfully completed......................................
2022-08-11 22:50:35,938:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:35,938:INFO:Creating metrics dataframe
2022-08-11 22:50:35,945:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:50:35,945:INFO:Total runtime is 0.06269445021947224 minutes
2022-08-11 22:50:35,947:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:35,947:INFO:Initializing create_model()
2022-08-11 22:50:35,948:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:35,948:INFO:Checking exceptions
2022-08-11 22:50:35,953:INFO:Importing libraries
2022-08-11 22:50:35,953:INFO:Copying training dataset
2022-08-11 22:50:35,961:INFO:Defining folds
2022-08-11 22:50:35,961:INFO:Declaring metric variables
2022-08-11 22:50:35,963:INFO:Importing untrained model
2022-08-11 22:50:35,965:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:50:35,970:INFO:Starting cross validation
2022-08-11 22:50:35,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:36,090:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,099:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,101:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,102:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,103:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,103:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,105:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,114:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,114:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,116:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,125:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,125:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,127:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,134:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,143:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,143:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:50:36,148:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,155:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,155:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,273:INFO:Calculating mean and std
2022-08-11 22:50:36,274:INFO:Creating metrics dataframe
2022-08-11 22:50:36,276:INFO:Uploading results into container
2022-08-11 22:50:36,276:INFO:Uploading model into container now
2022-08-11 22:50:36,277:INFO:master_model_container: 7
2022-08-11 22:50:36,277:INFO:display_container: 2
2022-08-11 22:50:36,277:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:50:36,277:INFO:create_model() successfully completed......................................
2022-08-11 22:50:36,385:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:36,386:INFO:Creating metrics dataframe
2022-08-11 22:50:36,393:INFO:Initializing Bayesian Ridge
2022-08-11 22:50:36,393:INFO:Total runtime is 0.0701561172803243 minutes
2022-08-11 22:50:36,395:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:36,395:INFO:Initializing create_model()
2022-08-11 22:50:36,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:36,396:INFO:Checking exceptions
2022-08-11 22:50:36,401:INFO:Importing libraries
2022-08-11 22:50:36,401:INFO:Copying training dataset
2022-08-11 22:50:36,412:INFO:Defining folds
2022-08-11 22:50:36,412:INFO:Declaring metric variables
2022-08-11 22:50:36,414:INFO:Importing untrained model
2022-08-11 22:50:36,417:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:50:36,422:INFO:Starting cross validation
2022-08-11 22:50:36,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:36,801:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,810:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,813:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,815:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,816:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,830:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,832:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,840:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,841:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:36,946:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,067:INFO:Calculating mean and std
2022-08-11 22:50:37,068:INFO:Creating metrics dataframe
2022-08-11 22:50:37,070:INFO:Uploading results into container
2022-08-11 22:50:37,070:INFO:Uploading model into container now
2022-08-11 22:50:37,071:INFO:master_model_container: 8
2022-08-11 22:50:37,071:INFO:display_container: 2
2022-08-11 22:50:37,071:INFO:BayesianRidge()
2022-08-11 22:50:37,071:INFO:create_model() successfully completed......................................
2022-08-11 22:50:37,179:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:37,179:INFO:Creating metrics dataframe
2022-08-11 22:50:37,185:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:50:37,185:INFO:Total runtime is 0.08336718082427978 minutes
2022-08-11 22:50:37,187:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:37,188:INFO:Initializing create_model()
2022-08-11 22:50:37,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:37,188:INFO:Checking exceptions
2022-08-11 22:50:37,193:INFO:Importing libraries
2022-08-11 22:50:37,193:INFO:Copying training dataset
2022-08-11 22:50:37,201:INFO:Defining folds
2022-08-11 22:50:37,201:INFO:Declaring metric variables
2022-08-11 22:50:37,204:INFO:Importing untrained model
2022-08-11 22:50:37,206:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:50:37,211:INFO:Starting cross validation
2022-08-11 22:50:37,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:37,431:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,438:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,455:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,455:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,459:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,462:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,484:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,485:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:37,626:INFO:Calculating mean and std
2022-08-11 22:50:37,627:INFO:Creating metrics dataframe
2022-08-11 22:50:37,630:INFO:Uploading results into container
2022-08-11 22:50:37,630:INFO:Uploading model into container now
2022-08-11 22:50:37,631:INFO:master_model_container: 9
2022-08-11 22:50:37,631:INFO:display_container: 2
2022-08-11 22:50:37,631:INFO:PassiveAggressiveRegressor(random_state=599)
2022-08-11 22:50:37,631:INFO:create_model() successfully completed......................................
2022-08-11 22:50:37,739:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:37,739:INFO:Creating metrics dataframe
2022-08-11 22:50:37,746:INFO:Initializing Huber Regressor
2022-08-11 22:50:37,746:INFO:Total runtime is 0.09271826744079589 minutes
2022-08-11 22:50:37,748:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:37,749:INFO:Initializing create_model()
2022-08-11 22:50:37,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:37,749:INFO:Checking exceptions
2022-08-11 22:50:37,754:INFO:Importing libraries
2022-08-11 22:50:37,754:INFO:Copying training dataset
2022-08-11 22:50:37,763:INFO:Defining folds
2022-08-11 22:50:37,763:INFO:Declaring metric variables
2022-08-11 22:50:37,766:INFO:Importing untrained model
2022-08-11 22:50:37,769:INFO:Huber Regressor Imported successfully
2022-08-11 22:50:37,774:INFO:Starting cross validation
2022-08-11 22:50:37,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:38,717:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,718:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,725:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,728:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,729:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,795:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,797:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,801:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,802:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,804:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,805:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,810:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,811:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,829:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,830:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:50:38,836:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:38,956:INFO:Calculating mean and std
2022-08-11 22:50:38,957:INFO:Creating metrics dataframe
2022-08-11 22:50:38,959:INFO:Uploading results into container
2022-08-11 22:50:38,959:INFO:Uploading model into container now
2022-08-11 22:50:38,960:INFO:master_model_container: 10
2022-08-11 22:50:38,960:INFO:display_container: 2
2022-08-11 22:50:38,960:INFO:HuberRegressor()
2022-08-11 22:50:38,960:INFO:create_model() successfully completed......................................
2022-08-11 22:50:39,067:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:39,067:INFO:Creating metrics dataframe
2022-08-11 22:50:39,074:INFO:Initializing K Neighbors Regressor
2022-08-11 22:50:39,074:INFO:Total runtime is 0.11484543085098266 minutes
2022-08-11 22:50:39,077:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:39,077:INFO:Initializing create_model()
2022-08-11 22:50:39,078:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:39,078:INFO:Checking exceptions
2022-08-11 22:50:39,082:INFO:Importing libraries
2022-08-11 22:50:39,082:INFO:Copying training dataset
2022-08-11 22:50:39,090:INFO:Defining folds
2022-08-11 22:50:39,090:INFO:Declaring metric variables
2022-08-11 22:50:39,093:INFO:Importing untrained model
2022-08-11 22:50:39,095:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:50:39,100:INFO:Starting cross validation
2022-08-11 22:50:39,101:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:39,221:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,242:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,244:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,279:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:39,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:40,494:INFO:Calculating mean and std
2022-08-11 22:50:40,495:INFO:Creating metrics dataframe
2022-08-11 22:50:40,497:INFO:Uploading results into container
2022-08-11 22:50:40,497:INFO:Uploading model into container now
2022-08-11 22:50:40,498:INFO:master_model_container: 11
2022-08-11 22:50:40,498:INFO:display_container: 2
2022-08-11 22:50:40,498:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:50:40,498:INFO:create_model() successfully completed......................................
2022-08-11 22:50:40,604:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:40,604:INFO:Creating metrics dataframe
2022-08-11 22:50:40,612:INFO:Initializing Decision Tree Regressor
2022-08-11 22:50:40,612:INFO:Total runtime is 0.14048086404800414 minutes
2022-08-11 22:50:40,615:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:40,615:INFO:Initializing create_model()
2022-08-11 22:50:40,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:40,615:INFO:Checking exceptions
2022-08-11 22:50:40,620:INFO:Importing libraries
2022-08-11 22:50:40,620:INFO:Copying training dataset
2022-08-11 22:50:40,627:INFO:Defining folds
2022-08-11 22:50:40,628:INFO:Declaring metric variables
2022-08-11 22:50:40,630:INFO:Importing untrained model
2022-08-11 22:50:40,633:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:50:40,637:INFO:Starting cross validation
2022-08-11 22:50:40,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:50:42,043:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,106:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,128:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,183:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,205:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,249:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,256:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:50:42,377:INFO:Calculating mean and std
2022-08-11 22:50:42,378:INFO:Creating metrics dataframe
2022-08-11 22:50:42,380:INFO:Uploading results into container
2022-08-11 22:50:42,380:INFO:Uploading model into container now
2022-08-11 22:50:42,380:INFO:master_model_container: 12
2022-08-11 22:50:42,381:INFO:display_container: 2
2022-08-11 22:50:42,381:INFO:DecisionTreeRegressor(random_state=599)
2022-08-11 22:50:42,381:INFO:create_model() successfully completed......................................
2022-08-11 22:50:42,489:INFO:SubProcess create_model() end ==================================
2022-08-11 22:50:42,489:INFO:Creating metrics dataframe
2022-08-11 22:50:42,496:INFO:Initializing Random Forest Regressor
2022-08-11 22:50:42,497:INFO:Total runtime is 0.171885613600413 minutes
2022-08-11 22:50:42,499:INFO:SubProcess create_model() called ==================================
2022-08-11 22:50:42,499:INFO:Initializing create_model()
2022-08-11 22:50:42,499:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:50:42,499:INFO:Checking exceptions
2022-08-11 22:50:42,503:INFO:Importing libraries
2022-08-11 22:50:42,503:INFO:Copying training dataset
2022-08-11 22:50:42,511:INFO:Defining folds
2022-08-11 22:50:42,512:INFO:Declaring metric variables
2022-08-11 22:50:42,514:INFO:Importing untrained model
2022-08-11 22:50:42,517:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:50:42,522:INFO:Starting cross validation
2022-08-11 22:50:42,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:52:10,881:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,334:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,639:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,670:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,750:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,947:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:11,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:12,141:INFO:Calculating mean and std
2022-08-11 22:52:12,142:INFO:Creating metrics dataframe
2022-08-11 22:52:12,144:INFO:Uploading results into container
2022-08-11 22:52:12,144:INFO:Uploading model into container now
2022-08-11 22:52:12,145:INFO:master_model_container: 13
2022-08-11 22:52:12,145:INFO:display_container: 2
2022-08-11 22:52:12,145:INFO:RandomForestRegressor(n_jobs=-1, random_state=599)
2022-08-11 22:52:12,145:INFO:create_model() successfully completed......................................
2022-08-11 22:52:12,254:INFO:SubProcess create_model() end ==================================
2022-08-11 22:52:12,254:INFO:Creating metrics dataframe
2022-08-11 22:52:12,263:INFO:Initializing Extra Trees Regressor
2022-08-11 22:52:12,263:INFO:Total runtime is 1.667988896369934 minutes
2022-08-11 22:52:12,265:INFO:SubProcess create_model() called ==================================
2022-08-11 22:52:12,265:INFO:Initializing create_model()
2022-08-11 22:52:12,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:52:12,266:INFO:Checking exceptions
2022-08-11 22:52:12,270:INFO:Importing libraries
2022-08-11 22:52:12,270:INFO:Copying training dataset
2022-08-11 22:52:12,278:INFO:Defining folds
2022-08-11 22:52:12,279:INFO:Declaring metric variables
2022-08-11 22:52:12,282:INFO:Importing untrained model
2022-08-11 22:52:12,285:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:52:12,291:INFO:Starting cross validation
2022-08-11 22:52:12,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:52:40,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:41,880:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:42,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:43,305:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:44,736:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:44,881:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:45,634:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:45,704:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:45,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:46,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:47,053:INFO:Calculating mean and std
2022-08-11 22:52:47,055:INFO:Creating metrics dataframe
2022-08-11 22:52:47,057:INFO:Uploading results into container
2022-08-11 22:52:47,057:INFO:Uploading model into container now
2022-08-11 22:52:47,057:INFO:master_model_container: 14
2022-08-11 22:52:47,057:INFO:display_container: 2
2022-08-11 22:52:47,058:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=599)
2022-08-11 22:52:47,058:INFO:create_model() successfully completed......................................
2022-08-11 22:52:47,171:INFO:SubProcess create_model() end ==================================
2022-08-11 22:52:47,171:INFO:Creating metrics dataframe
2022-08-11 22:52:47,179:INFO:Initializing AdaBoost Regressor
2022-08-11 22:52:47,179:INFO:Total runtime is 2.249925665060679 minutes
2022-08-11 22:52:47,181:INFO:SubProcess create_model() called ==================================
2022-08-11 22:52:47,181:INFO:Initializing create_model()
2022-08-11 22:52:47,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:52:47,181:INFO:Checking exceptions
2022-08-11 22:52:47,187:INFO:Importing libraries
2022-08-11 22:52:47,187:INFO:Copying training dataset
2022-08-11 22:52:47,197:INFO:Defining folds
2022-08-11 22:52:47,197:INFO:Declaring metric variables
2022-08-11 22:52:47,200:INFO:Importing untrained model
2022-08-11 22:52:47,202:INFO:AdaBoost Regressor Imported successfully
2022-08-11 22:52:47,207:INFO:Starting cross validation
2022-08-11 22:52:47,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:52:53,296:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:53,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:53,748:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:53,850:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:54,185:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:54,394:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:54,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:55,182:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:55,350:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:55,497:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:52:55,626:INFO:Calculating mean and std
2022-08-11 22:52:55,628:INFO:Creating metrics dataframe
2022-08-11 22:52:55,631:INFO:Uploading results into container
2022-08-11 22:52:55,632:INFO:Uploading model into container now
2022-08-11 22:52:55,632:INFO:master_model_container: 15
2022-08-11 22:52:55,632:INFO:display_container: 2
2022-08-11 22:52:55,633:INFO:AdaBoostRegressor(random_state=599)
2022-08-11 22:52:55,633:INFO:create_model() successfully completed......................................
2022-08-11 22:52:55,767:INFO:SubProcess create_model() end ==================================
2022-08-11 22:52:55,767:INFO:Creating metrics dataframe
2022-08-11 22:52:55,776:INFO:Initializing Gradient Boosting Regressor
2022-08-11 22:52:55,777:INFO:Total runtime is 2.3932212273279827 minutes
2022-08-11 22:52:55,779:INFO:SubProcess create_model() called ==================================
2022-08-11 22:52:55,780:INFO:Initializing create_model()
2022-08-11 22:52:55,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:52:55,780:INFO:Checking exceptions
2022-08-11 22:52:55,792:INFO:Importing libraries
2022-08-11 22:52:55,792:INFO:Copying training dataset
2022-08-11 22:52:55,804:INFO:Defining folds
2022-08-11 22:52:55,805:INFO:Declaring metric variables
2022-08-11 22:52:55,807:INFO:Importing untrained model
2022-08-11 22:52:55,810:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 22:52:55,815:INFO:Starting cross validation
2022-08-11 22:52:55,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:53:15,208:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,230:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,257:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,266:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,277:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,318:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,324:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,411:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:15,571:INFO:Calculating mean and std
2022-08-11 22:53:15,572:INFO:Creating metrics dataframe
2022-08-11 22:53:15,575:INFO:Uploading results into container
2022-08-11 22:53:15,575:INFO:Uploading model into container now
2022-08-11 22:53:15,576:INFO:master_model_container: 16
2022-08-11 22:53:15,576:INFO:display_container: 2
2022-08-11 22:53:15,576:INFO:GradientBoostingRegressor(random_state=599)
2022-08-11 22:53:15,576:INFO:create_model() successfully completed......................................
2022-08-11 22:53:15,686:INFO:SubProcess create_model() end ==================================
2022-08-11 22:53:15,687:INFO:Creating metrics dataframe
2022-08-11 22:53:15,696:INFO:Initializing Extreme Gradient Boosting
2022-08-11 22:53:15,696:INFO:Total runtime is 2.7252073605855305 minutes
2022-08-11 22:53:15,698:INFO:SubProcess create_model() called ==================================
2022-08-11 22:53:15,699:INFO:Initializing create_model()
2022-08-11 22:53:15,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:53:15,699:INFO:Checking exceptions
2022-08-11 22:53:15,710:INFO:Importing libraries
2022-08-11 22:53:15,710:INFO:Copying training dataset
2022-08-11 22:53:15,718:INFO:Defining folds
2022-08-11 22:53:15,718:INFO:Declaring metric variables
2022-08-11 22:53:15,721:INFO:Importing untrained model
2022-08-11 22:53:15,724:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 22:53:15,729:INFO:Starting cross validation
2022-08-11 22:53:15,729:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:53:27,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,146:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,146:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,259:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,269:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,276:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:27,738:INFO:Calculating mean and std
2022-08-11 22:53:27,739:INFO:Creating metrics dataframe
2022-08-11 22:53:27,741:INFO:Uploading results into container
2022-08-11 22:53:27,742:INFO:Uploading model into container now
2022-08-11 22:53:27,742:INFO:master_model_container: 17
2022-08-11 22:53:27,742:INFO:display_container: 2
2022-08-11 22:53:27,742:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=599,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 22:53:27,742:INFO:create_model() successfully completed......................................
2022-08-11 22:53:27,849:INFO:SubProcess create_model() end ==================================
2022-08-11 22:53:27,849:INFO:Creating metrics dataframe
2022-08-11 22:53:27,859:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 22:53:27,860:INFO:Total runtime is 2.927939713001251 minutes
2022-08-11 22:53:27,863:INFO:SubProcess create_model() called ==================================
2022-08-11 22:53:27,863:INFO:Initializing create_model()
2022-08-11 22:53:27,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:53:27,863:INFO:Checking exceptions
2022-08-11 22:53:27,877:INFO:Importing libraries
2022-08-11 22:53:27,877:INFO:Copying training dataset
2022-08-11 22:53:27,894:INFO:Defining folds
2022-08-11 22:53:27,894:INFO:Declaring metric variables
2022-08-11 22:53:27,897:INFO:Importing untrained model
2022-08-11 22:53:27,901:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:53:27,909:INFO:Starting cross validation
2022-08-11 22:53:27,910:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:53:28,637:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,686:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,688:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,695:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,701:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,724:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,750:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,780:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:28,914:INFO:Calculating mean and std
2022-08-11 22:53:28,916:INFO:Creating metrics dataframe
2022-08-11 22:53:28,918:INFO:Uploading results into container
2022-08-11 22:53:28,918:INFO:Uploading model into container now
2022-08-11 22:53:28,918:INFO:master_model_container: 18
2022-08-11 22:53:28,919:INFO:display_container: 2
2022-08-11 22:53:28,919:INFO:LGBMRegressor(random_state=599)
2022-08-11 22:53:28,919:INFO:create_model() successfully completed......................................
2022-08-11 22:53:29,027:INFO:SubProcess create_model() end ==================================
2022-08-11 22:53:29,028:INFO:Creating metrics dataframe
2022-08-11 22:53:29,037:INFO:Initializing Dummy Regressor
2022-08-11 22:53:29,037:INFO:Total runtime is 2.947562348842621 minutes
2022-08-11 22:53:29,040:INFO:SubProcess create_model() called ==================================
2022-08-11 22:53:29,040:INFO:Initializing create_model()
2022-08-11 22:53:29,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7e08257fa0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:53:29,040:INFO:Checking exceptions
2022-08-11 22:53:29,048:INFO:Importing libraries
2022-08-11 22:53:29,048:INFO:Copying training dataset
2022-08-11 22:53:29,063:INFO:Defining folds
2022-08-11 22:53:29,063:INFO:Declaring metric variables
2022-08-11 22:53:29,066:INFO:Importing untrained model
2022-08-11 22:53:29,068:INFO:Dummy Regressor Imported successfully
2022-08-11 22:53:29,073:INFO:Starting cross validation
2022-08-11 22:53:29,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:53:29,206:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,207:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,210:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,220:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,233:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,247:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:29,387:INFO:Calculating mean and std
2022-08-11 22:53:29,389:INFO:Creating metrics dataframe
2022-08-11 22:53:29,391:INFO:Uploading results into container
2022-08-11 22:53:29,391:INFO:Uploading model into container now
2022-08-11 22:53:29,392:INFO:master_model_container: 19
2022-08-11 22:53:29,392:INFO:display_container: 2
2022-08-11 22:53:29,392:INFO:DummyRegressor()
2022-08-11 22:53:29,392:INFO:create_model() successfully completed......................................
2022-08-11 22:53:29,502:INFO:SubProcess create_model() end ==================================
2022-08-11 22:53:29,502:INFO:Creating metrics dataframe
2022-08-11 22:53:29,519:INFO:Initializing create_model()
2022-08-11 22:53:29,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=LGBMRegressor(random_state=599), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:53:29,520:INFO:Checking exceptions
2022-08-11 22:53:29,530:INFO:Importing libraries
2022-08-11 22:53:29,530:INFO:Copying training dataset
2022-08-11 22:53:29,537:INFO:Defining folds
2022-08-11 22:53:29,537:INFO:Declaring metric variables
2022-08-11 22:53:29,537:INFO:Importing untrained model
2022-08-11 22:53:29,537:INFO:Declaring custom model
2022-08-11 22:53:29,538:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:53:29,538:INFO:Cross validation set to False
2022-08-11 22:53:29,538:INFO:Fitting Model
2022-08-11 22:53:32,170:INFO:LGBMRegressor(random_state=599)
2022-08-11 22:53:32,170:INFO:create_model() successfully completed......................................
2022-08-11 22:53:32,310:INFO:master_model_container: 19
2022-08-11 22:53:32,310:INFO:display_container: 2
2022-08-11 22:53:32,310:INFO:LGBMRegressor(random_state=599)
2022-08-11 22:53:32,311:INFO:compare_models() successfully completed......................................
2022-08-11 22:53:53,229:INFO:Initializing create_model()
2022-08-11 22:53:53,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:53:53,229:INFO:Checking exceptions
2022-08-11 22:53:53,271:INFO:Importing libraries
2022-08-11 22:53:53,272:INFO:Copying training dataset
2022-08-11 22:53:53,285:INFO:Defining folds
2022-08-11 22:53:53,285:INFO:Declaring metric variables
2022-08-11 22:53:53,290:INFO:Importing untrained model
2022-08-11 22:53:53,294:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:53:53,300:INFO:Starting cross validation
2022-08-11 22:53:53,301:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:53:53,994:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,040:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,049:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,058:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,067:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,073:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,078:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,123:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,150:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:53:54,286:INFO:Calculating mean and std
2022-08-11 22:53:54,287:INFO:Creating metrics dataframe
2022-08-11 22:53:54,291:INFO:Finalizing model
2022-08-11 22:53:56,683:INFO:Uploading results into container
2022-08-11 22:53:56,684:INFO:Uploading model into container now
2022-08-11 22:53:56,691:INFO:master_model_container: 20
2022-08-11 22:53:56,691:INFO:display_container: 3
2022-08-11 22:53:56,692:INFO:LGBMRegressor(random_state=599)
2022-08-11 22:53:56,692:INFO:create_model() successfully completed......................................
2022-08-11 22:54:04,175:INFO:Initializing finalize_model()
2022-08-11 22:54:04,176:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=LGBMRegressor(random_state=599), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 22:54:04,177:INFO:Finalizing LGBMRegressor(random_state=599)
2022-08-11 22:54:04,195:INFO:Initializing create_model()
2022-08-11 22:54:04,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=LGBMRegressor(random_state=599), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 22:54:04,195:INFO:Checking exceptions
2022-08-11 22:54:04,196:INFO:Importing libraries
2022-08-11 22:54:04,197:INFO:Copying training dataset
2022-08-11 22:54:04,198:INFO:Defining folds
2022-08-11 22:54:04,198:INFO:Declaring metric variables
2022-08-11 22:54:04,198:INFO:Importing untrained model
2022-08-11 22:54:04,198:INFO:Declaring custom model
2022-08-11 22:54:04,198:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 22:54:04,199:INFO:Cross validation set to False
2022-08-11 22:54:04,199:INFO:Fitting Model
2022-08-11 22:54:07,016:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=599))])
2022-08-11 22:54:07,016:INFO:create_model() successfully completed......................................
2022-08-11 22:54:07,134:INFO:Initializing predict_model()
2022-08-11 22:54:07,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=599))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7d74501280>)
2022-08-11 22:54:07,134:INFO:Checking exceptions
2022-08-11 22:54:07,134:INFO:Preloading libraries
2022-08-11 22:54:07,138:INFO:Set up data.
2022-08-11 22:54:07,425:INFO:display_container: 4
2022-08-11 22:54:07,425:INFO:master_model_container: 20
2022-08-11 22:54:07,425:INFO:display_container: 4
2022-08-11 22:54:07,430:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=599))])
2022-08-11 22:54:07,430:INFO:finalize_model() successfully completed......................................
2022-08-11 22:54:07,552:INFO:Initializing predict_model()
2022-08-11 22:54:07,552:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c282310>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=599))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7d4c09fee0>)
2022-08-11 22:54:07,552:INFO:Checking exceptions
2022-08-11 22:54:07,553:INFO:Preloading libraries
2022-08-11 22:54:07,559:INFO:Set up data.
2022-08-11 22:54:08,088:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/1821619479.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_14'] = predict_model(model_y14, data=test_df)['prediction_label']

2022-08-11 22:57:50,965:INFO:PyCaret RegressionExperiment
2022-08-11 22:57:50,965:INFO:Logging name: reg-default-name
2022-08-11 22:57:50,966:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 22:57:50,966:INFO:version 3.0.0.rc3
2022-08-11 22:57:50,966:INFO:Initializing setup()
2022-08-11 22:57:50,966:INFO:self.USI: 759e
2022-08-11 22:57:50,966:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 22:57:50,966:INFO:Checking environment
2022-08-11 22:57:50,966:INFO:python_version: 3.8.8
2022-08-11 22:57:50,966:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 22:57:50,967:INFO:machine: x86_64
2022-08-11 22:57:50,967:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:57:50,967:INFO:Memory: svmem(total=34359738368, available=3958857728, percent=88.5, used=3912142848, free=472592384, active=3485626368, inactive=3439448064, wired=426516480)
2022-08-11 22:57:50,967:INFO:Physical Core: 10
2022-08-11 22:57:50,967:INFO:Logical Core: 10
2022-08-11 22:57:50,967:INFO:Checking libraries
2022-08-11 22:57:50,967:INFO:System:
2022-08-11 22:57:50,968:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 22:57:50,969:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 22:57:50,969:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 22:57:50,969:INFO:PyCaret required dependencies:
2022-08-11 22:57:50,969:INFO:                 pip: 22.1.2
2022-08-11 22:57:50,969:INFO:          setuptools: 61.2.0
2022-08-11 22:57:50,969:INFO:             pycaret: 3.0.0rc3
2022-08-11 22:57:50,970:INFO:             IPython: 8.4.0
2022-08-11 22:57:50,970:INFO:          ipywidgets: 7.6.5
2022-08-11 22:57:50,970:INFO:                tqdm: 4.64.0
2022-08-11 22:57:50,970:INFO:               numpy: 1.22.4
2022-08-11 22:57:50,970:INFO:              pandas: 1.4.3
2022-08-11 22:57:50,970:INFO:              jinja2: 3.0.3
2022-08-11 22:57:50,970:INFO:               scipy: 1.5.4
2022-08-11 22:57:50,970:INFO:              joblib: 1.1.0
2022-08-11 22:57:50,970:INFO:             sklearn: 1.1.1
2022-08-11 22:57:50,970:INFO:                pyod: 1.0.4
2022-08-11 22:57:50,971:INFO:            imblearn: 0.9.1
2022-08-11 22:57:50,971:INFO:   category_encoders: 2.5.0
2022-08-11 22:57:50,971:INFO:            lightgbm: 3.2.1
2022-08-11 22:57:50,971:INFO:               numba: 0.55.2
2022-08-11 22:57:50,971:INFO:            requests: 2.28.1
2022-08-11 22:57:50,971:INFO:          matplotlib: 3.5.1
2022-08-11 22:57:50,971:INFO:          scikitplot: 0.3.7
2022-08-11 22:57:50,971:INFO:         yellowbrick: 1.4
2022-08-11 22:57:50,971:INFO:              plotly: 5.9.0
2022-08-11 22:57:50,971:INFO:             kaleido: 0.2.1
2022-08-11 22:57:50,971:INFO:         statsmodels: 0.13.2
2022-08-11 22:57:50,972:INFO:              sktime: 0.13.0
2022-08-11 22:57:50,972:INFO:               tbats: 1.1.0
2022-08-11 22:57:50,972:INFO:            pmdarima: 1.8.5
2022-08-11 22:57:50,972:INFO:              psutil: 5.9.1
2022-08-11 22:57:50,972:INFO:PyCaret optional dependencies:
2022-08-11 22:57:50,972:INFO:                shap: Not installed
2022-08-11 22:57:50,972:INFO:           interpret: Not installed
2022-08-11 22:57:50,972:INFO:                umap: 0.5.3
2022-08-11 22:57:50,972:INFO:    pandas_profiling: 2.9.0
2022-08-11 22:57:50,972:INFO:  explainerdashboard: Not installed
2022-08-11 22:57:50,972:INFO:             autoviz: Not installed
2022-08-11 22:57:50,973:INFO:           fairlearn: Not installed
2022-08-11 22:57:50,973:INFO:             xgboost: 1.6.1
2022-08-11 22:57:50,973:INFO:            catboost: Not installed
2022-08-11 22:57:50,973:INFO:              kmodes: 0.12.1
2022-08-11 22:57:50,973:INFO:             mlxtend: 0.19.0
2022-08-11 22:57:50,973:INFO:       statsforecast: Not installed
2022-08-11 22:57:50,973:INFO:        tune_sklearn: Not installed
2022-08-11 22:57:50,973:INFO:                 ray: Not installed
2022-08-11 22:57:50,973:INFO:            hyperopt: Not installed
2022-08-11 22:57:50,973:INFO:              optuna: Not installed
2022-08-11 22:57:50,973:INFO:               skopt: Not installed
2022-08-11 22:57:50,973:INFO:              mlflow: 1.27.0
2022-08-11 22:57:50,974:INFO:              gradio: Not installed
2022-08-11 22:57:50,974:INFO:             fastapi: Not installed
2022-08-11 22:57:50,974:INFO:             uvicorn: Not installed
2022-08-11 22:57:50,974:INFO:              m2cgen: Not installed
2022-08-11 22:57:50,974:INFO:           evidently: Not installed
2022-08-11 22:57:50,974:INFO:                nltk: 3.7
2022-08-11 22:57:50,974:INFO:            pyLDAvis: 3.2.2
2022-08-11 22:57:50,974:INFO:              gensim: 3.8.3
2022-08-11 22:57:50,974:INFO:               spacy: 2.3.7
2022-08-11 22:57:50,974:INFO:           wordcloud: 1.8.2.2
2022-08-11 22:57:50,974:INFO:            textblob: 0.17.1
2022-08-11 22:57:50,974:INFO:               fugue: Not installed
2022-08-11 22:57:50,974:INFO:           streamlit: Not installed
2022-08-11 22:57:50,975:INFO:             prophet: Not installed
2022-08-11 22:57:50,975:INFO:None
2022-08-11 22:57:50,975:INFO:Set up data.
2022-08-11 22:57:51,014:INFO:Set up train/test split.
2022-08-11 22:57:51,038:INFO:Set up folding strategy.
2022-08-11 22:57:51,039:INFO:Assigning column types.
2022-08-11 22:57:51,048:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 22:57:51,048:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,053:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,057:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,120:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,163:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,165:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,170:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,174:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,234:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,277:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,280:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 22:57:51,284:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,289:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,391:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,398:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,402:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,463:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,505:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,506:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,508:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 22:57:51,517:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,579:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,622:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,634:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,736:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,739:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 22:57:51,807:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,850:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 22:57:51,964:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:51,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:51,966:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 22:57:52,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:52,079:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:52,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:52,152:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 22:57:52,195:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:52,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:52,197:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 22:57:52,306:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:52,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:52,418:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:52,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:52,421:INFO:Preparing preprocessing pipeline...
2022-08-11 22:57:52,423:INFO:Set up simple imputation.
2022-08-11 22:57:52,423:INFO:Set up variance threshold.
2022-08-11 22:57:52,606:INFO:Finished creating preprocessing pipeline.
2022-08-11 22:57:52,609:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 22:57:52,609:INFO:Creating final display dataframe.
2022-08-11 22:57:53,324:INFO:Setup display_container:                Description             Value
0               Session id              1740
1                   Target              Y_02
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              759e
2022-08-11 22:57:53,442:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:53,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:53,550:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 22:57:53,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 22:57:53,573:INFO:setup() successfully completed in 2.61s...............
2022-08-11 22:57:53,578:INFO:Initializing compare_models()
2022-08-11 22:57:53,578:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 22:57:53,578:INFO:Checking exceptions
2022-08-11 22:57:53,583:INFO:Preparing display monitor
2022-08-11 22:57:53,610:INFO:Initializing Linear Regression
2022-08-11 22:57:53,610:INFO:Total runtime is 2.4318695068359373e-06 minutes
2022-08-11 22:57:53,612:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:53,613:INFO:Initializing create_model()
2022-08-11 22:57:53,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:53,613:INFO:Checking exceptions
2022-08-11 22:57:53,620:INFO:Importing libraries
2022-08-11 22:57:53,620:INFO:Copying training dataset
2022-08-11 22:57:53,632:INFO:Defining folds
2022-08-11 22:57:53,632:INFO:Declaring metric variables
2022-08-11 22:57:53,635:INFO:Importing untrained model
2022-08-11 22:57:53,637:INFO:Linear Regression Imported successfully
2022-08-11 22:57:53,642:INFO:Starting cross validation
2022-08-11 22:57:53,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:54,373:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,373:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,388:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,396:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,443:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,447:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,466:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,506:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:54,781:INFO:Calculating mean and std
2022-08-11 22:57:54,783:INFO:Creating metrics dataframe
2022-08-11 22:57:54,787:INFO:Uploading results into container
2022-08-11 22:57:54,787:INFO:Uploading model into container now
2022-08-11 22:57:54,788:INFO:master_model_container: 1
2022-08-11 22:57:54,788:INFO:display_container: 2
2022-08-11 22:57:54,788:INFO:LinearRegression(n_jobs=-1)
2022-08-11 22:57:54,788:INFO:create_model() successfully completed......................................
2022-08-11 22:57:54,909:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:54,909:INFO:Creating metrics dataframe
2022-08-11 22:57:54,915:INFO:Initializing Lasso Regression
2022-08-11 22:57:54,915:INFO:Total runtime is 0.021761171023050942 minutes
2022-08-11 22:57:54,918:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:54,919:INFO:Initializing create_model()
2022-08-11 22:57:54,919:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:54,919:INFO:Checking exceptions
2022-08-11 22:57:54,924:INFO:Importing libraries
2022-08-11 22:57:54,924:INFO:Copying training dataset
2022-08-11 22:57:54,933:INFO:Defining folds
2022-08-11 22:57:54,933:INFO:Declaring metric variables
2022-08-11 22:57:54,936:INFO:Importing untrained model
2022-08-11 22:57:54,938:INFO:Lasso Regression Imported successfully
2022-08-11 22:57:54,944:INFO:Starting cross validation
2022-08-11 22:57:54,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:55,072:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,077:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,083:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,096:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,099:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,130:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,171:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,291:INFO:Calculating mean and std
2022-08-11 22:57:55,293:INFO:Creating metrics dataframe
2022-08-11 22:57:55,295:INFO:Uploading results into container
2022-08-11 22:57:55,296:INFO:Uploading model into container now
2022-08-11 22:57:55,296:INFO:master_model_container: 2
2022-08-11 22:57:55,296:INFO:display_container: 2
2022-08-11 22:57:55,297:INFO:Lasso(random_state=1740)
2022-08-11 22:57:55,297:INFO:create_model() successfully completed......................................
2022-08-11 22:57:55,411:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:55,411:INFO:Creating metrics dataframe
2022-08-11 22:57:55,417:INFO:Initializing Ridge Regression
2022-08-11 22:57:55,418:INFO:Total runtime is 0.030128701527913408 minutes
2022-08-11 22:57:55,420:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:55,420:INFO:Initializing create_model()
2022-08-11 22:57:55,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:55,420:INFO:Checking exceptions
2022-08-11 22:57:55,425:INFO:Importing libraries
2022-08-11 22:57:55,426:INFO:Copying training dataset
2022-08-11 22:57:55,434:INFO:Defining folds
2022-08-11 22:57:55,435:INFO:Declaring metric variables
2022-08-11 22:57:55,438:INFO:Importing untrained model
2022-08-11 22:57:55,440:INFO:Ridge Regression Imported successfully
2022-08-11 22:57:55,445:INFO:Starting cross validation
2022-08-11 22:57:55,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:55,576:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,580:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,590:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,598:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,607:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,622:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,665:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:55,784:INFO:Calculating mean and std
2022-08-11 22:57:55,786:INFO:Creating metrics dataframe
2022-08-11 22:57:55,788:INFO:Uploading results into container
2022-08-11 22:57:55,788:INFO:Uploading model into container now
2022-08-11 22:57:55,789:INFO:master_model_container: 3
2022-08-11 22:57:55,789:INFO:display_container: 2
2022-08-11 22:57:55,789:INFO:Ridge(random_state=1740)
2022-08-11 22:57:55,790:INFO:create_model() successfully completed......................................
2022-08-11 22:57:55,903:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:55,903:INFO:Creating metrics dataframe
2022-08-11 22:57:55,909:INFO:Initializing Elastic Net
2022-08-11 22:57:55,910:INFO:Total runtime is 0.03832981586456299 minutes
2022-08-11 22:57:55,912:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:55,912:INFO:Initializing create_model()
2022-08-11 22:57:55,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:55,913:INFO:Checking exceptions
2022-08-11 22:57:55,918:INFO:Importing libraries
2022-08-11 22:57:55,918:INFO:Copying training dataset
2022-08-11 22:57:55,927:INFO:Defining folds
2022-08-11 22:57:55,927:INFO:Declaring metric variables
2022-08-11 22:57:55,930:INFO:Importing untrained model
2022-08-11 22:57:55,933:INFO:Elastic Net Imported successfully
2022-08-11 22:57:55,939:INFO:Starting cross validation
2022-08-11 22:57:55,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:56,060:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,070:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,072:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,079:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,083:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,104:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,125:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,162:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,281:INFO:Calculating mean and std
2022-08-11 22:57:56,282:INFO:Creating metrics dataframe
2022-08-11 22:57:56,284:INFO:Uploading results into container
2022-08-11 22:57:56,285:INFO:Uploading model into container now
2022-08-11 22:57:56,285:INFO:master_model_container: 4
2022-08-11 22:57:56,285:INFO:display_container: 2
2022-08-11 22:57:56,285:INFO:ElasticNet(random_state=1740)
2022-08-11 22:57:56,285:INFO:create_model() successfully completed......................................
2022-08-11 22:57:56,396:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:56,396:INFO:Creating metrics dataframe
2022-08-11 22:57:56,403:INFO:Initializing Least Angle Regression
2022-08-11 22:57:56,403:INFO:Total runtime is 0.0465514341990153 minutes
2022-08-11 22:57:56,406:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:56,406:INFO:Initializing create_model()
2022-08-11 22:57:56,406:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:56,406:INFO:Checking exceptions
2022-08-11 22:57:56,412:INFO:Importing libraries
2022-08-11 22:57:56,412:INFO:Copying training dataset
2022-08-11 22:57:56,422:INFO:Defining folds
2022-08-11 22:57:56,422:INFO:Declaring metric variables
2022-08-11 22:57:56,426:INFO:Importing untrained model
2022-08-11 22:57:56,428:INFO:Least Angle Regression Imported successfully
2022-08-11 22:57:56,433:INFO:Starting cross validation
2022-08-11 22:57:56,434:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:56,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,561:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,564:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,568:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,571:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,576:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,578:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,581:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,583:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,592:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,594:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,598:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,609:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,624:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,625:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,653:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:56,667:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:56,784:INFO:Calculating mean and std
2022-08-11 22:57:56,785:INFO:Creating metrics dataframe
2022-08-11 22:57:56,788:INFO:Uploading results into container
2022-08-11 22:57:56,788:INFO:Uploading model into container now
2022-08-11 22:57:56,789:INFO:master_model_container: 5
2022-08-11 22:57:56,789:INFO:display_container: 2
2022-08-11 22:57:56,789:INFO:Lars(random_state=1740)
2022-08-11 22:57:56,789:INFO:create_model() successfully completed......................................
2022-08-11 22:57:56,904:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:56,904:INFO:Creating metrics dataframe
2022-08-11 22:57:56,913:INFO:Initializing Lasso Least Angle Regression
2022-08-11 22:57:56,913:INFO:Total runtime is 0.0550488034884135 minutes
2022-08-11 22:57:56,915:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:56,916:INFO:Initializing create_model()
2022-08-11 22:57:56,916:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:56,916:INFO:Checking exceptions
2022-08-11 22:57:56,921:INFO:Importing libraries
2022-08-11 22:57:56,921:INFO:Copying training dataset
2022-08-11 22:57:56,930:INFO:Defining folds
2022-08-11 22:57:56,930:INFO:Declaring metric variables
2022-08-11 22:57:56,933:INFO:Importing untrained model
2022-08-11 22:57:56,936:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 22:57:56,942:INFO:Starting cross validation
2022-08-11 22:57:56,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:57,056:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,069:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,071:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,072:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,074:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,080:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,089:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,092:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,094:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,095:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,103:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,105:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,106:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,110:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,114:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,119:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,125:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,129:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,135:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 22:57:57,145:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,262:INFO:Calculating mean and std
2022-08-11 22:57:57,264:INFO:Creating metrics dataframe
2022-08-11 22:57:57,266:INFO:Uploading results into container
2022-08-11 22:57:57,267:INFO:Uploading model into container now
2022-08-11 22:57:57,267:INFO:master_model_container: 6
2022-08-11 22:57:57,267:INFO:display_container: 2
2022-08-11 22:57:57,268:INFO:LassoLars(random_state=1740)
2022-08-11 22:57:57,268:INFO:create_model() successfully completed......................................
2022-08-11 22:57:57,381:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:57,382:INFO:Creating metrics dataframe
2022-08-11 22:57:57,389:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 22:57:57,389:INFO:Total runtime is 0.06298184792200724 minutes
2022-08-11 22:57:57,391:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:57,392:INFO:Initializing create_model()
2022-08-11 22:57:57,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:57,392:INFO:Checking exceptions
2022-08-11 22:57:57,397:INFO:Importing libraries
2022-08-11 22:57:57,397:INFO:Copying training dataset
2022-08-11 22:57:57,405:INFO:Defining folds
2022-08-11 22:57:57,405:INFO:Declaring metric variables
2022-08-11 22:57:57,408:INFO:Importing untrained model
2022-08-11 22:57:57,411:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 22:57:57,417:INFO:Starting cross validation
2022-08-11 22:57:57,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:57,531:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,536:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,538:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,542:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,544:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,547:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,550:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,553:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,554:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,558:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,559:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,560:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,590:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,591:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,604:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,605:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,668:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 22:57:57,680:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:57,797:INFO:Calculating mean and std
2022-08-11 22:57:57,798:INFO:Creating metrics dataframe
2022-08-11 22:57:57,800:INFO:Uploading results into container
2022-08-11 22:57:57,801:INFO:Uploading model into container now
2022-08-11 22:57:57,802:INFO:master_model_container: 7
2022-08-11 22:57:57,802:INFO:display_container: 2
2022-08-11 22:57:57,802:INFO:OrthogonalMatchingPursuit()
2022-08-11 22:57:57,802:INFO:create_model() successfully completed......................................
2022-08-11 22:57:57,915:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:57,915:INFO:Creating metrics dataframe
2022-08-11 22:57:57,922:INFO:Initializing Bayesian Ridge
2022-08-11 22:57:57,922:INFO:Total runtime is 0.07187490065892538 minutes
2022-08-11 22:57:57,924:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:57,925:INFO:Initializing create_model()
2022-08-11 22:57:57,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:57,925:INFO:Checking exceptions
2022-08-11 22:57:57,929:INFO:Importing libraries
2022-08-11 22:57:57,930:INFO:Copying training dataset
2022-08-11 22:57:57,939:INFO:Defining folds
2022-08-11 22:57:57,939:INFO:Declaring metric variables
2022-08-11 22:57:57,942:INFO:Importing untrained model
2022-08-11 22:57:57,945:INFO:Bayesian Ridge Imported successfully
2022-08-11 22:57:57,951:INFO:Starting cross validation
2022-08-11 22:57:57,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:58,336:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,336:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,347:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,352:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,353:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,359:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,378:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,408:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,426:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,427:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,547:INFO:Calculating mean and std
2022-08-11 22:57:58,549:INFO:Creating metrics dataframe
2022-08-11 22:57:58,551:INFO:Uploading results into container
2022-08-11 22:57:58,552:INFO:Uploading model into container now
2022-08-11 22:57:58,552:INFO:master_model_container: 8
2022-08-11 22:57:58,552:INFO:display_container: 2
2022-08-11 22:57:58,552:INFO:BayesianRidge()
2022-08-11 22:57:58,553:INFO:create_model() successfully completed......................................
2022-08-11 22:57:58,666:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:58,666:INFO:Creating metrics dataframe
2022-08-11 22:57:58,672:INFO:Initializing Passive Aggressive Regressor
2022-08-11 22:57:58,673:INFO:Total runtime is 0.08437850077946982 minutes
2022-08-11 22:57:58,675:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:58,675:INFO:Initializing create_model()
2022-08-11 22:57:58,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:58,675:INFO:Checking exceptions
2022-08-11 22:57:58,680:INFO:Importing libraries
2022-08-11 22:57:58,680:INFO:Copying training dataset
2022-08-11 22:57:58,689:INFO:Defining folds
2022-08-11 22:57:58,689:INFO:Declaring metric variables
2022-08-11 22:57:58,692:INFO:Importing untrained model
2022-08-11 22:57:58,695:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 22:57:58,701:INFO:Starting cross validation
2022-08-11 22:57:58,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:57:58,879:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,894:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,901:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,902:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,909:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,931:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,970:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:58,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:57:59,105:INFO:Calculating mean and std
2022-08-11 22:57:59,107:INFO:Creating metrics dataframe
2022-08-11 22:57:59,110:INFO:Uploading results into container
2022-08-11 22:57:59,111:INFO:Uploading model into container now
2022-08-11 22:57:59,111:INFO:master_model_container: 9
2022-08-11 22:57:59,111:INFO:display_container: 2
2022-08-11 22:57:59,111:INFO:PassiveAggressiveRegressor(random_state=1740)
2022-08-11 22:57:59,111:INFO:create_model() successfully completed......................................
2022-08-11 22:57:59,224:INFO:SubProcess create_model() end ==================================
2022-08-11 22:57:59,224:INFO:Creating metrics dataframe
2022-08-11 22:57:59,232:INFO:Initializing Huber Regressor
2022-08-11 22:57:59,232:INFO:Total runtime is 0.09370443423589071 minutes
2022-08-11 22:57:59,235:INFO:SubProcess create_model() called ==================================
2022-08-11 22:57:59,235:INFO:Initializing create_model()
2022-08-11 22:57:59,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:57:59,236:INFO:Checking exceptions
2022-08-11 22:57:59,243:INFO:Importing libraries
2022-08-11 22:57:59,243:INFO:Copying training dataset
2022-08-11 22:57:59,252:INFO:Defining folds
2022-08-11 22:57:59,252:INFO:Declaring metric variables
2022-08-11 22:57:59,255:INFO:Importing untrained model
2022-08-11 22:57:59,258:INFO:Huber Regressor Imported successfully
2022-08-11 22:57:59,264:INFO:Starting cross validation
2022-08-11 22:57:59,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:58:00,107:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,157:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,159:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,211:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,214:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,215:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,216:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,217:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,222:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,232:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,237:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,238:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,272:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 22:58:00,273:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,389:INFO:Calculating mean and std
2022-08-11 22:58:00,390:INFO:Creating metrics dataframe
2022-08-11 22:58:00,392:INFO:Uploading results into container
2022-08-11 22:58:00,392:INFO:Uploading model into container now
2022-08-11 22:58:00,393:INFO:master_model_container: 10
2022-08-11 22:58:00,393:INFO:display_container: 2
2022-08-11 22:58:00,393:INFO:HuberRegressor()
2022-08-11 22:58:00,393:INFO:create_model() successfully completed......................................
2022-08-11 22:58:00,505:INFO:SubProcess create_model() end ==================================
2022-08-11 22:58:00,505:INFO:Creating metrics dataframe
2022-08-11 22:58:00,512:INFO:Initializing K Neighbors Regressor
2022-08-11 22:58:00,513:INFO:Total runtime is 0.11504553556442261 minutes
2022-08-11 22:58:00,515:INFO:SubProcess create_model() called ==================================
2022-08-11 22:58:00,515:INFO:Initializing create_model()
2022-08-11 22:58:00,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:58:00,515:INFO:Checking exceptions
2022-08-11 22:58:00,520:INFO:Importing libraries
2022-08-11 22:58:00,520:INFO:Copying training dataset
2022-08-11 22:58:00,528:INFO:Defining folds
2022-08-11 22:58:00,528:INFO:Declaring metric variables
2022-08-11 22:58:00,531:INFO:Importing untrained model
2022-08-11 22:58:00,534:INFO:K Neighbors Regressor Imported successfully
2022-08-11 22:58:00,539:INFO:Starting cross validation
2022-08-11 22:58:00,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:58:00,655:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,656:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,678:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,681:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,682:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,685:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,689:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:00,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:02,047:INFO:Calculating mean and std
2022-08-11 22:58:02,049:INFO:Creating metrics dataframe
2022-08-11 22:58:02,051:INFO:Uploading results into container
2022-08-11 22:58:02,051:INFO:Uploading model into container now
2022-08-11 22:58:02,051:INFO:master_model_container: 11
2022-08-11 22:58:02,051:INFO:display_container: 2
2022-08-11 22:58:02,052:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 22:58:02,052:INFO:create_model() successfully completed......................................
2022-08-11 22:58:02,163:INFO:SubProcess create_model() end ==================================
2022-08-11 22:58:02,163:INFO:Creating metrics dataframe
2022-08-11 22:58:02,171:INFO:Initializing Decision Tree Regressor
2022-08-11 22:58:02,171:INFO:Total runtime is 0.14268370072046915 minutes
2022-08-11 22:58:02,173:INFO:SubProcess create_model() called ==================================
2022-08-11 22:58:02,173:INFO:Initializing create_model()
2022-08-11 22:58:02,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:58:02,173:INFO:Checking exceptions
2022-08-11 22:58:02,178:INFO:Importing libraries
2022-08-11 22:58:02,178:INFO:Copying training dataset
2022-08-11 22:58:02,187:INFO:Defining folds
2022-08-11 22:58:02,188:INFO:Declaring metric variables
2022-08-11 22:58:02,191:INFO:Importing untrained model
2022-08-11 22:58:02,193:INFO:Decision Tree Regressor Imported successfully
2022-08-11 22:58:02,198:INFO:Starting cross validation
2022-08-11 22:58:02,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:58:03,548:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,570:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,592:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,647:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,660:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,707:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,721:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:58:03,877:INFO:Calculating mean and std
2022-08-11 22:58:03,879:INFO:Creating metrics dataframe
2022-08-11 22:58:03,881:INFO:Uploading results into container
2022-08-11 22:58:03,882:INFO:Uploading model into container now
2022-08-11 22:58:03,882:INFO:master_model_container: 12
2022-08-11 22:58:03,882:INFO:display_container: 2
2022-08-11 22:58:03,883:INFO:DecisionTreeRegressor(random_state=1740)
2022-08-11 22:58:03,883:INFO:create_model() successfully completed......................................
2022-08-11 22:58:03,998:INFO:SubProcess create_model() end ==================================
2022-08-11 22:58:03,998:INFO:Creating metrics dataframe
2022-08-11 22:58:04,005:INFO:Initializing Random Forest Regressor
2022-08-11 22:58:04,005:INFO:Total runtime is 0.17326108614603677 minutes
2022-08-11 22:58:04,008:INFO:SubProcess create_model() called ==================================
2022-08-11 22:58:04,008:INFO:Initializing create_model()
2022-08-11 22:58:04,009:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:58:04,009:INFO:Checking exceptions
2022-08-11 22:58:04,014:INFO:Importing libraries
2022-08-11 22:58:04,014:INFO:Copying training dataset
2022-08-11 22:58:04,023:INFO:Defining folds
2022-08-11 22:58:04,023:INFO:Declaring metric variables
2022-08-11 22:58:04,026:INFO:Importing untrained model
2022-08-11 22:58:04,030:INFO:Random Forest Regressor Imported successfully
2022-08-11 22:58:04,036:INFO:Starting cross validation
2022-08-11 22:58:04,036:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:59:30,466:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,549:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,559:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,560:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,698:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,721:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,897:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:30,939:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 22:59:31,082:INFO:Calculating mean and std
2022-08-11 22:59:31,083:INFO:Creating metrics dataframe
2022-08-11 22:59:31,086:INFO:Uploading results into container
2022-08-11 22:59:31,086:INFO:Uploading model into container now
2022-08-11 22:59:31,086:INFO:master_model_container: 13
2022-08-11 22:59:31,086:INFO:display_container: 2
2022-08-11 22:59:31,087:INFO:RandomForestRegressor(n_jobs=-1, random_state=1740)
2022-08-11 22:59:31,087:INFO:create_model() successfully completed......................................
2022-08-11 22:59:31,200:INFO:SubProcess create_model() end ==================================
2022-08-11 22:59:31,200:INFO:Creating metrics dataframe
2022-08-11 22:59:31,209:INFO:Initializing Extra Trees Regressor
2022-08-11 22:59:31,209:INFO:Total runtime is 1.6266506671905518 minutes
2022-08-11 22:59:31,211:INFO:SubProcess create_model() called ==================================
2022-08-11 22:59:31,212:INFO:Initializing create_model()
2022-08-11 22:59:31,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 22:59:31,212:INFO:Checking exceptions
2022-08-11 22:59:31,216:INFO:Importing libraries
2022-08-11 22:59:31,216:INFO:Copying training dataset
2022-08-11 22:59:31,225:INFO:Defining folds
2022-08-11 22:59:31,225:INFO:Declaring metric variables
2022-08-11 22:59:31,228:INFO:Importing untrained model
2022-08-11 22:59:31,231:INFO:Extra Trees Regressor Imported successfully
2022-08-11 22:59:31,236:INFO:Starting cross validation
2022-08-11 22:59:31,237:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 22:59:57,179:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:00,039:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:00,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:02,895:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:03,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:03,551:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:05,617:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:05,822:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:05,909:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:06,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:06,825:INFO:Calculating mean and std
2022-08-11 23:00:06,826:INFO:Creating metrics dataframe
2022-08-11 23:00:06,829:INFO:Uploading results into container
2022-08-11 23:00:06,829:INFO:Uploading model into container now
2022-08-11 23:00:06,830:INFO:master_model_container: 14
2022-08-11 23:00:06,830:INFO:display_container: 2
2022-08-11 23:00:06,830:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=1740)
2022-08-11 23:00:06,830:INFO:create_model() successfully completed......................................
2022-08-11 23:00:06,949:INFO:SubProcess create_model() end ==================================
2022-08-11 23:00:06,950:INFO:Creating metrics dataframe
2022-08-11 23:00:06,958:INFO:Initializing AdaBoost Regressor
2022-08-11 23:00:06,958:INFO:Total runtime is 2.2224722186724346 minutes
2022-08-11 23:00:06,960:INFO:SubProcess create_model() called ==================================
2022-08-11 23:00:06,960:INFO:Initializing create_model()
2022-08-11 23:00:06,960:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:06,960:INFO:Checking exceptions
2022-08-11 23:00:06,965:INFO:Importing libraries
2022-08-11 23:00:06,966:INFO:Copying training dataset
2022-08-11 23:00:06,974:INFO:Defining folds
2022-08-11 23:00:06,975:INFO:Declaring metric variables
2022-08-11 23:00:06,977:INFO:Importing untrained model
2022-08-11 23:00:06,980:INFO:AdaBoost Regressor Imported successfully
2022-08-11 23:00:06,985:INFO:Starting cross validation
2022-08-11 23:00:06,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:00:14,717:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:14,905:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:15,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,715:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,744:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,835:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,861:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,899:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:16,928:INFO:Calculating mean and std
2022-08-11 23:00:16,931:INFO:Creating metrics dataframe
2022-08-11 23:00:16,936:INFO:Uploading results into container
2022-08-11 23:00:16,936:INFO:Uploading model into container now
2022-08-11 23:00:16,937:INFO:master_model_container: 15
2022-08-11 23:00:16,937:INFO:display_container: 2
2022-08-11 23:00:16,938:INFO:AdaBoostRegressor(random_state=1740)
2022-08-11 23:00:16,938:INFO:create_model() successfully completed......................................
2022-08-11 23:00:17,089:INFO:SubProcess create_model() end ==================================
2022-08-11 23:00:17,089:INFO:Creating metrics dataframe
2022-08-11 23:00:17,098:INFO:Initializing Gradient Boosting Regressor
2022-08-11 23:00:17,098:INFO:Total runtime is 2.391474751631419 minutes
2022-08-11 23:00:17,101:INFO:SubProcess create_model() called ==================================
2022-08-11 23:00:17,101:INFO:Initializing create_model()
2022-08-11 23:00:17,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:17,101:INFO:Checking exceptions
2022-08-11 23:00:17,113:INFO:Importing libraries
2022-08-11 23:00:17,113:INFO:Copying training dataset
2022-08-11 23:00:17,143:INFO:Defining folds
2022-08-11 23:00:17,143:INFO:Declaring metric variables
2022-08-11 23:00:17,148:INFO:Importing untrained model
2022-08-11 23:00:17,151:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 23:00:17,158:INFO:Starting cross validation
2022-08-11 23:00:17,158:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:00:36,869:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:36,922:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:36,937:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:36,963:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,002:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,019:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,024:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,053:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,065:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,088:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:37,211:INFO:Calculating mean and std
2022-08-11 23:00:37,213:INFO:Creating metrics dataframe
2022-08-11 23:00:37,215:INFO:Uploading results into container
2022-08-11 23:00:37,216:INFO:Uploading model into container now
2022-08-11 23:00:37,216:INFO:master_model_container: 16
2022-08-11 23:00:37,216:INFO:display_container: 2
2022-08-11 23:00:37,216:INFO:GradientBoostingRegressor(random_state=1740)
2022-08-11 23:00:37,216:INFO:create_model() successfully completed......................................
2022-08-11 23:00:37,331:INFO:SubProcess create_model() end ==================================
2022-08-11 23:00:37,332:INFO:Creating metrics dataframe
2022-08-11 23:00:37,342:INFO:Initializing Extreme Gradient Boosting
2022-08-11 23:00:37,342:INFO:Total runtime is 2.728872803846995 minutes
2022-08-11 23:00:37,345:INFO:SubProcess create_model() called ==================================
2022-08-11 23:00:37,345:INFO:Initializing create_model()
2022-08-11 23:00:37,345:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:37,345:INFO:Checking exceptions
2022-08-11 23:00:37,351:INFO:Importing libraries
2022-08-11 23:00:37,351:INFO:Copying training dataset
2022-08-11 23:00:37,362:INFO:Defining folds
2022-08-11 23:00:37,362:INFO:Declaring metric variables
2022-08-11 23:00:37,365:INFO:Importing untrained model
2022-08-11 23:00:37,368:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 23:00:37,373:INFO:Starting cross validation
2022-08-11 23:00:37,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:00:49,132:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,137:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,151:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,152:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,191:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,205:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,255:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,292:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,330:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:49,456:INFO:Calculating mean and std
2022-08-11 23:00:49,457:INFO:Creating metrics dataframe
2022-08-11 23:00:49,460:INFO:Uploading results into container
2022-08-11 23:00:49,461:INFO:Uploading model into container now
2022-08-11 23:00:49,461:INFO:master_model_container: 17
2022-08-11 23:00:49,461:INFO:display_container: 2
2022-08-11 23:00:49,462:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=1740,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 23:00:49,462:INFO:create_model() successfully completed......................................
2022-08-11 23:00:49,574:INFO:SubProcess create_model() end ==================================
2022-08-11 23:00:49,575:INFO:Creating metrics dataframe
2022-08-11 23:00:49,583:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 23:00:49,583:INFO:Total runtime is 2.932886564731598 minutes
2022-08-11 23:00:49,585:INFO:SubProcess create_model() called ==================================
2022-08-11 23:00:49,585:INFO:Initializing create_model()
2022-08-11 23:00:49,585:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:49,585:INFO:Checking exceptions
2022-08-11 23:00:49,595:INFO:Importing libraries
2022-08-11 23:00:49,595:INFO:Copying training dataset
2022-08-11 23:00:49,608:INFO:Defining folds
2022-08-11 23:00:49,608:INFO:Declaring metric variables
2022-08-11 23:00:49,611:INFO:Importing untrained model
2022-08-11 23:00:49,614:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 23:00:49,619:INFO:Starting cross validation
2022-08-11 23:00:49,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:00:50,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,288:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,302:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,306:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,320:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,336:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,364:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,368:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,575:INFO:Calculating mean and std
2022-08-11 23:00:50,577:INFO:Creating metrics dataframe
2022-08-11 23:00:50,580:INFO:Uploading results into container
2022-08-11 23:00:50,581:INFO:Uploading model into container now
2022-08-11 23:00:50,582:INFO:master_model_container: 18
2022-08-11 23:00:50,582:INFO:display_container: 2
2022-08-11 23:00:50,582:INFO:LGBMRegressor(random_state=1740)
2022-08-11 23:00:50,582:INFO:create_model() successfully completed......................................
2022-08-11 23:00:50,695:INFO:SubProcess create_model() end ==================================
2022-08-11 23:00:50,695:INFO:Creating metrics dataframe
2022-08-11 23:00:50,704:INFO:Initializing Dummy Regressor
2022-08-11 23:00:50,704:INFO:Total runtime is 2.951564101378123 minutes
2022-08-11 23:00:50,706:INFO:SubProcess create_model() called ==================================
2022-08-11 23:00:50,706:INFO:Initializing create_model()
2022-08-11 23:00:50,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ee884aa90>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:50,706:INFO:Checking exceptions
2022-08-11 23:00:50,714:INFO:Importing libraries
2022-08-11 23:00:50,714:INFO:Copying training dataset
2022-08-11 23:00:50,722:INFO:Defining folds
2022-08-11 23:00:50,723:INFO:Declaring metric variables
2022-08-11 23:00:50,725:INFO:Importing untrained model
2022-08-11 23:00:50,728:INFO:Dummy Regressor Imported successfully
2022-08-11 23:00:50,732:INFO:Starting cross validation
2022-08-11 23:00:50,733:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:00:50,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,847:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,861:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,868:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,873:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,882:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,893:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,896:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,910:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:50,919:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:00:51,035:INFO:Calculating mean and std
2022-08-11 23:00:51,037:INFO:Creating metrics dataframe
2022-08-11 23:00:51,039:INFO:Uploading results into container
2022-08-11 23:00:51,040:INFO:Uploading model into container now
2022-08-11 23:00:51,040:INFO:master_model_container: 19
2022-08-11 23:00:51,041:INFO:display_container: 2
2022-08-11 23:00:51,041:INFO:DummyRegressor()
2022-08-11 23:00:51,041:INFO:create_model() successfully completed......................................
2022-08-11 23:00:51,158:INFO:SubProcess create_model() end ==================================
2022-08-11 23:00:51,158:INFO:Creating metrics dataframe
2022-08-11 23:00:51,176:INFO:Initializing create_model()
2022-08-11 23:00:51,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=LGBMRegressor(random_state=1740), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:51,176:INFO:Checking exceptions
2022-08-11 23:00:51,187:INFO:Importing libraries
2022-08-11 23:00:51,187:INFO:Copying training dataset
2022-08-11 23:00:51,195:INFO:Defining folds
2022-08-11 23:00:51,195:INFO:Declaring metric variables
2022-08-11 23:00:51,195:INFO:Importing untrained model
2022-08-11 23:00:51,196:INFO:Declaring custom model
2022-08-11 23:00:51,196:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 23:00:51,197:INFO:Cross validation set to False
2022-08-11 23:00:51,197:INFO:Fitting Model
2022-08-11 23:00:53,338:INFO:LGBMRegressor(random_state=1740)
2022-08-11 23:00:53,346:INFO:create_model() successfully completed......................................
2022-08-11 23:00:53,524:INFO:master_model_container: 19
2022-08-11 23:00:53,524:INFO:display_container: 2
2022-08-11 23:00:53,524:INFO:LGBMRegressor(random_state=1740)
2022-08-11 23:00:53,524:INFO:compare_models() successfully completed......................................
2022-08-11 23:00:53,530:INFO:Initializing create_model()
2022-08-11 23:00:53,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:00:53,531:INFO:Checking exceptions
2022-08-11 23:00:53,556:INFO:Importing libraries
2022-08-11 23:00:53,557:INFO:Copying training dataset
2022-08-11 23:00:53,569:INFO:Defining folds
2022-08-11 23:00:53,569:INFO:Declaring metric variables
2022-08-11 23:00:53,571:INFO:Importing untrained model
2022-08-11 23:00:53,573:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 23:00:53,577:INFO:Starting cross validation
2022-08-11 23:00:53,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:09,299:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,308:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,336:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,364:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,365:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,447:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,454:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,482:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,545:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:09,668:INFO:Calculating mean and std
2022-08-11 23:01:09,670:INFO:Creating metrics dataframe
2022-08-11 23:01:09,675:INFO:Finalizing model
2022-08-11 23:01:24,505:INFO:Uploading results into container
2022-08-11 23:01:24,506:INFO:Uploading model into container now
2022-08-11 23:01:24,511:INFO:master_model_container: 20
2022-08-11 23:01:24,511:INFO:display_container: 3
2022-08-11 23:01:24,512:INFO:GradientBoostingRegressor(random_state=1740)
2022-08-11 23:01:24,512:INFO:create_model() successfully completed......................................
2022-08-11 23:01:24,629:INFO:Initializing finalize_model()
2022-08-11 23:01:24,629:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=GradientBoostingRegressor(random_state=1740), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 23:01:24,630:INFO:Finalizing GradientBoostingRegressor(random_state=1740)
2022-08-11 23:01:24,644:INFO:Initializing create_model()
2022-08-11 23:01:24,645:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=GradientBoostingRegressor(random_state=1740), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 23:01:24,645:INFO:Checking exceptions
2022-08-11 23:01:24,646:INFO:Importing libraries
2022-08-11 23:01:24,646:INFO:Copying training dataset
2022-08-11 23:01:24,648:INFO:Defining folds
2022-08-11 23:01:24,648:INFO:Declaring metric variables
2022-08-11 23:01:24,648:INFO:Importing untrained model
2022-08-11 23:01:24,648:INFO:Declaring custom model
2022-08-11 23:01:24,648:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 23:01:24,649:INFO:Cross validation set to False
2022-08-11 23:01:24,649:INFO:Fitting Model
2022-08-11 23:01:45,936:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1740))])
2022-08-11 23:01:45,936:INFO:create_model() successfully completed......................................
2022-08-11 23:01:46,045:INFO:Initializing predict_model()
2022-08-11 23:01:46,046:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1740))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e47979160>)
2022-08-11 23:01:46,046:INFO:Checking exceptions
2022-08-11 23:01:46,046:INFO:Preloading libraries
2022-08-11 23:01:46,051:INFO:Set up data.
2022-08-11 23:01:46,313:INFO:display_container: 4
2022-08-11 23:01:46,313:INFO:master_model_container: 20
2022-08-11 23:01:46,313:INFO:display_container: 4
2022-08-11 23:01:46,317:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1740))])
2022-08-11 23:01:46,317:INFO:finalize_model() successfully completed......................................
2022-08-11 23:01:46,428:INFO:Initializing predict_model()
2022-08-11 23:01:46,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7d7c25b040>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=1740))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7ebffb2670>)
2022-08-11 23:01:46,428:INFO:Checking exceptions
2022-08-11 23:01:46,428:INFO:Preloading libraries
2022-08-11 23:01:46,438:INFO:Set up data.
2022-08-11 23:01:46,822:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/2494218837.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_02'] = predict_model(model_y02, data=test_df)['prediction_label']

2022-08-11 23:01:46,826:INFO:PyCaret RegressionExperiment
2022-08-11 23:01:46,826:INFO:Logging name: reg-default-name
2022-08-11 23:01:46,826:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 23:01:46,826:INFO:version 3.0.0.rc3
2022-08-11 23:01:46,826:INFO:Initializing setup()
2022-08-11 23:01:46,826:INFO:self.USI: e82b
2022-08-11 23:01:46,827:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 23:01:46,827:INFO:Checking environment
2022-08-11 23:01:46,827:INFO:python_version: 3.8.8
2022-08-11 23:01:46,827:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 23:01:46,827:INFO:machine: x86_64
2022-08-11 23:01:46,827:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 23:01:46,827:INFO:Memory: svmem(total=34359738368, available=4187992064, percent=87.8, used=3715211264, free=871731200, active=3307638784, inactive=3289788416, wired=407572480)
2022-08-11 23:01:46,827:INFO:Physical Core: 10
2022-08-11 23:01:46,827:INFO:Logical Core: 10
2022-08-11 23:01:46,827:INFO:Checking libraries
2022-08-11 23:01:46,827:INFO:System:
2022-08-11 23:01:46,827:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 23:01:46,827:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 23:01:46,827:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 23:01:46,827:INFO:PyCaret required dependencies:
2022-08-11 23:01:46,827:INFO:                 pip: 22.1.2
2022-08-11 23:01:46,827:INFO:          setuptools: 61.2.0
2022-08-11 23:01:46,827:INFO:             pycaret: 3.0.0rc3
2022-08-11 23:01:46,828:INFO:             IPython: 8.4.0
2022-08-11 23:01:46,828:INFO:          ipywidgets: 7.6.5
2022-08-11 23:01:46,828:INFO:                tqdm: 4.64.0
2022-08-11 23:01:46,828:INFO:               numpy: 1.22.4
2022-08-11 23:01:46,828:INFO:              pandas: 1.4.3
2022-08-11 23:01:46,828:INFO:              jinja2: 3.0.3
2022-08-11 23:01:46,828:INFO:               scipy: 1.5.4
2022-08-11 23:01:46,828:INFO:              joblib: 1.1.0
2022-08-11 23:01:46,828:INFO:             sklearn: 1.1.1
2022-08-11 23:01:46,828:INFO:                pyod: 1.0.4
2022-08-11 23:01:46,828:INFO:            imblearn: 0.9.1
2022-08-11 23:01:46,828:INFO:   category_encoders: 2.5.0
2022-08-11 23:01:46,828:INFO:            lightgbm: 3.2.1
2022-08-11 23:01:46,828:INFO:               numba: 0.55.2
2022-08-11 23:01:46,828:INFO:            requests: 2.28.1
2022-08-11 23:01:46,828:INFO:          matplotlib: 3.5.1
2022-08-11 23:01:46,828:INFO:          scikitplot: 0.3.7
2022-08-11 23:01:46,828:INFO:         yellowbrick: 1.4
2022-08-11 23:01:46,828:INFO:              plotly: 5.9.0
2022-08-11 23:01:46,828:INFO:             kaleido: 0.2.1
2022-08-11 23:01:46,828:INFO:         statsmodels: 0.13.2
2022-08-11 23:01:46,828:INFO:              sktime: 0.13.0
2022-08-11 23:01:46,828:INFO:               tbats: 1.1.0
2022-08-11 23:01:46,828:INFO:            pmdarima: 1.8.5
2022-08-11 23:01:46,828:INFO:              psutil: 5.9.1
2022-08-11 23:01:46,828:INFO:PyCaret optional dependencies:
2022-08-11 23:01:46,828:INFO:                shap: Not installed
2022-08-11 23:01:46,828:INFO:           interpret: Not installed
2022-08-11 23:01:46,828:INFO:                umap: 0.5.3
2022-08-11 23:01:46,828:INFO:    pandas_profiling: 2.9.0
2022-08-11 23:01:46,828:INFO:  explainerdashboard: Not installed
2022-08-11 23:01:46,828:INFO:             autoviz: Not installed
2022-08-11 23:01:46,828:INFO:           fairlearn: Not installed
2022-08-11 23:01:46,828:INFO:             xgboost: 1.6.1
2022-08-11 23:01:46,828:INFO:            catboost: Not installed
2022-08-11 23:01:46,828:INFO:              kmodes: 0.12.1
2022-08-11 23:01:46,828:INFO:             mlxtend: 0.19.0
2022-08-11 23:01:46,828:INFO:       statsforecast: Not installed
2022-08-11 23:01:46,828:INFO:        tune_sklearn: Not installed
2022-08-11 23:01:46,828:INFO:                 ray: Not installed
2022-08-11 23:01:46,828:INFO:            hyperopt: Not installed
2022-08-11 23:01:46,828:INFO:              optuna: Not installed
2022-08-11 23:01:46,828:INFO:               skopt: Not installed
2022-08-11 23:01:46,828:INFO:              mlflow: 1.27.0
2022-08-11 23:01:46,828:INFO:              gradio: Not installed
2022-08-11 23:01:46,828:INFO:             fastapi: Not installed
2022-08-11 23:01:46,829:INFO:             uvicorn: Not installed
2022-08-11 23:01:46,829:INFO:              m2cgen: Not installed
2022-08-11 23:01:46,829:INFO:           evidently: Not installed
2022-08-11 23:01:46,829:INFO:                nltk: 3.7
2022-08-11 23:01:46,829:INFO:            pyLDAvis: 3.2.2
2022-08-11 23:01:46,829:INFO:              gensim: 3.8.3
2022-08-11 23:01:46,829:INFO:               spacy: 2.3.7
2022-08-11 23:01:46,829:INFO:           wordcloud: 1.8.2.2
2022-08-11 23:01:46,829:INFO:            textblob: 0.17.1
2022-08-11 23:01:46,829:INFO:               fugue: Not installed
2022-08-11 23:01:46,829:INFO:           streamlit: Not installed
2022-08-11 23:01:46,829:INFO:             prophet: Not installed
2022-08-11 23:01:46,829:INFO:None
2022-08-11 23:01:46,829:INFO:Set up data.
2022-08-11 23:01:46,862:INFO:Set up train/test split.
2022-08-11 23:01:46,880:INFO:Set up folding strategy.
2022-08-11 23:01:46,880:INFO:Assigning column types.
2022-08-11 23:01:46,886:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 23:01:46,886:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 23:01:46,891:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:01:46,895:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:01:46,950:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:46,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:46,990:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:46,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:46,993:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 23:01:46,997:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,001:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,058:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,097:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,098:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,100:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 23:01:47,104:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,164:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,204:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,211:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,215:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,310:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,312:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 23:01:47,320:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,416:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,426:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,521:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,524:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 23:01:47,594:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,635:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,700:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,740:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 23:01:47,807:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,847:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:01:47,959:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:47,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:47,961:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 23:01:48,064:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:48,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:48,170:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:48,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:48,172:INFO:Preparing preprocessing pipeline...
2022-08-11 23:01:48,173:INFO:Set up simple imputation.
2022-08-11 23:01:48,174:INFO:Set up variance threshold.
2022-08-11 23:01:48,340:INFO:Finished creating preprocessing pipeline.
2022-08-11 23:01:48,343:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 23:01:48,343:INFO:Creating final display dataframe.
2022-08-11 23:01:49,012:INFO:Setup display_container:                Description             Value
0               Session id              6978
1                   Target              Y_05
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              e82b
2022-08-11 23:01:49,119:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:49,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:49,221:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:01:49,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:01:49,243:INFO:setup() successfully completed in 2.42s...............
2022-08-11 23:01:49,246:INFO:Initializing compare_models()
2022-08-11 23:01:49,247:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 23:01:49,247:INFO:Checking exceptions
2022-08-11 23:01:49,254:INFO:Preparing display monitor
2022-08-11 23:01:49,278:INFO:Initializing Linear Regression
2022-08-11 23:01:49,278:INFO:Total runtime is 3.532568613688151e-06 minutes
2022-08-11 23:01:49,280:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:49,281:INFO:Initializing create_model()
2022-08-11 23:01:49,281:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:49,281:INFO:Checking exceptions
2022-08-11 23:01:49,286:INFO:Importing libraries
2022-08-11 23:01:49,286:INFO:Copying training dataset
2022-08-11 23:01:49,294:INFO:Defining folds
2022-08-11 23:01:49,294:INFO:Declaring metric variables
2022-08-11 23:01:49,296:INFO:Importing untrained model
2022-08-11 23:01:49,298:INFO:Linear Regression Imported successfully
2022-08-11 23:01:49,303:INFO:Starting cross validation
2022-08-11 23:01:49,303:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:49,927:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,931:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,934:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,938:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,950:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,951:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,966:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:49,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,219:INFO:Calculating mean and std
2022-08-11 23:01:50,220:INFO:Creating metrics dataframe
2022-08-11 23:01:50,223:INFO:Uploading results into container
2022-08-11 23:01:50,223:INFO:Uploading model into container now
2022-08-11 23:01:50,224:INFO:master_model_container: 1
2022-08-11 23:01:50,224:INFO:display_container: 2
2022-08-11 23:01:50,224:INFO:LinearRegression(n_jobs=-1)
2022-08-11 23:01:50,224:INFO:create_model() successfully completed......................................
2022-08-11 23:01:50,340:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:50,341:INFO:Creating metrics dataframe
2022-08-11 23:01:50,346:INFO:Initializing Lasso Regression
2022-08-11 23:01:50,346:INFO:Total runtime is 0.01779814958572388 minutes
2022-08-11 23:01:50,347:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:50,348:INFO:Initializing create_model()
2022-08-11 23:01:50,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:50,348:INFO:Checking exceptions
2022-08-11 23:01:50,352:INFO:Importing libraries
2022-08-11 23:01:50,352:INFO:Copying training dataset
2022-08-11 23:01:50,360:INFO:Defining folds
2022-08-11 23:01:50,360:INFO:Declaring metric variables
2022-08-11 23:01:50,362:INFO:Importing untrained model
2022-08-11 23:01:50,364:INFO:Lasso Regression Imported successfully
2022-08-11 23:01:50,368:INFO:Starting cross validation
2022-08-11 23:01:50,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:50,518:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,519:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,520:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,520:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,523:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,524:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,531:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,531:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,548:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,569:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,687:INFO:Calculating mean and std
2022-08-11 23:01:50,689:INFO:Creating metrics dataframe
2022-08-11 23:01:50,693:INFO:Uploading results into container
2022-08-11 23:01:50,693:INFO:Uploading model into container now
2022-08-11 23:01:50,694:INFO:master_model_container: 2
2022-08-11 23:01:50,694:INFO:display_container: 2
2022-08-11 23:01:50,694:INFO:Lasso(random_state=6978)
2022-08-11 23:01:50,694:INFO:create_model() successfully completed......................................
2022-08-11 23:01:50,802:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:50,802:INFO:Creating metrics dataframe
2022-08-11 23:01:50,808:INFO:Initializing Ridge Regression
2022-08-11 23:01:50,808:INFO:Total runtime is 0.025507533550262453 minutes
2022-08-11 23:01:50,810:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:50,810:INFO:Initializing create_model()
2022-08-11 23:01:50,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:50,811:INFO:Checking exceptions
2022-08-11 23:01:50,815:INFO:Importing libraries
2022-08-11 23:01:50,816:INFO:Copying training dataset
2022-08-11 23:01:50,823:INFO:Defining folds
2022-08-11 23:01:50,823:INFO:Declaring metric variables
2022-08-11 23:01:50,825:INFO:Importing untrained model
2022-08-11 23:01:50,828:INFO:Ridge Regression Imported successfully
2022-08-11 23:01:50,832:INFO:Starting cross validation
2022-08-11 23:01:50,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:50,953:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,959:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,962:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,964:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,970:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,975:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,981:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:50,997:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,016:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,135:INFO:Calculating mean and std
2022-08-11 23:01:51,137:INFO:Creating metrics dataframe
2022-08-11 23:01:51,140:INFO:Uploading results into container
2022-08-11 23:01:51,141:INFO:Uploading model into container now
2022-08-11 23:01:51,141:INFO:master_model_container: 3
2022-08-11 23:01:51,141:INFO:display_container: 2
2022-08-11 23:01:51,141:INFO:Ridge(random_state=6978)
2022-08-11 23:01:51,141:INFO:create_model() successfully completed......................................
2022-08-11 23:01:51,252:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:51,252:INFO:Creating metrics dataframe
2022-08-11 23:01:51,259:INFO:Initializing Elastic Net
2022-08-11 23:01:51,259:INFO:Total runtime is 0.03302449782689412 minutes
2022-08-11 23:01:51,261:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:51,262:INFO:Initializing create_model()
2022-08-11 23:01:51,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:51,262:INFO:Checking exceptions
2022-08-11 23:01:51,266:INFO:Importing libraries
2022-08-11 23:01:51,266:INFO:Copying training dataset
2022-08-11 23:01:51,273:INFO:Defining folds
2022-08-11 23:01:51,274:INFO:Declaring metric variables
2022-08-11 23:01:51,276:INFO:Importing untrained model
2022-08-11 23:01:51,278:INFO:Elastic Net Imported successfully
2022-08-11 23:01:51,281:INFO:Starting cross validation
2022-08-11 23:01:51,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:51,395:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,398:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,401:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,402:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,406:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,409:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,413:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,426:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,433:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,446:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,561:INFO:Calculating mean and std
2022-08-11 23:01:51,563:INFO:Creating metrics dataframe
2022-08-11 23:01:51,566:INFO:Uploading results into container
2022-08-11 23:01:51,567:INFO:Uploading model into container now
2022-08-11 23:01:51,567:INFO:master_model_container: 4
2022-08-11 23:01:51,567:INFO:display_container: 2
2022-08-11 23:01:51,567:INFO:ElasticNet(random_state=6978)
2022-08-11 23:01:51,568:INFO:create_model() successfully completed......................................
2022-08-11 23:01:51,676:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:51,676:INFO:Creating metrics dataframe
2022-08-11 23:01:51,682:INFO:Initializing Least Angle Regression
2022-08-11 23:01:51,682:INFO:Total runtime is 0.04006829659144084 minutes
2022-08-11 23:01:51,684:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:51,684:INFO:Initializing create_model()
2022-08-11 23:01:51,684:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:51,684:INFO:Checking exceptions
2022-08-11 23:01:51,688:INFO:Importing libraries
2022-08-11 23:01:51,688:INFO:Copying training dataset
2022-08-11 23:01:51,696:INFO:Defining folds
2022-08-11 23:01:51,696:INFO:Declaring metric variables
2022-08-11 23:01:51,699:INFO:Importing untrained model
2022-08-11 23:01:51,701:INFO:Least Angle Regression Imported successfully
2022-08-11 23:01:51,705:INFO:Starting cross validation
2022-08-11 23:01:51,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:51,821:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,824:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,825:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,828:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,829:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,834:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,838:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,839:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,843:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,844:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,849:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,853:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,855:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,857:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,858:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,872:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:51,890:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:51,904:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,020:INFO:Calculating mean and std
2022-08-11 23:01:52,021:INFO:Creating metrics dataframe
2022-08-11 23:01:52,025:INFO:Uploading results into container
2022-08-11 23:01:52,025:INFO:Uploading model into container now
2022-08-11 23:01:52,026:INFO:master_model_container: 5
2022-08-11 23:01:52,026:INFO:display_container: 2
2022-08-11 23:01:52,026:INFO:Lars(random_state=6978)
2022-08-11 23:01:52,026:INFO:create_model() successfully completed......................................
2022-08-11 23:01:52,135:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:52,135:INFO:Creating metrics dataframe
2022-08-11 23:01:52,141:INFO:Initializing Lasso Least Angle Regression
2022-08-11 23:01:52,141:INFO:Total runtime is 0.04771788517634074 minutes
2022-08-11 23:01:52,143:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:52,143:INFO:Initializing create_model()
2022-08-11 23:01:52,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:52,143:INFO:Checking exceptions
2022-08-11 23:01:52,148:INFO:Importing libraries
2022-08-11 23:01:52,148:INFO:Copying training dataset
2022-08-11 23:01:52,156:INFO:Defining folds
2022-08-11 23:01:52,156:INFO:Declaring metric variables
2022-08-11 23:01:52,158:INFO:Importing untrained model
2022-08-11 23:01:52,160:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 23:01:52,165:INFO:Starting cross validation
2022-08-11 23:01:52,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:52,273:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,279:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,279:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,282:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,287:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,291:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,290:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,304:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,307:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,311:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,314:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,315:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,317:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,327:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,331:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,340:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,372:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:01:52,381:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,499:INFO:Calculating mean and std
2022-08-11 23:01:52,501:INFO:Creating metrics dataframe
2022-08-11 23:01:52,504:INFO:Uploading results into container
2022-08-11 23:01:52,504:INFO:Uploading model into container now
2022-08-11 23:01:52,505:INFO:master_model_container: 6
2022-08-11 23:01:52,505:INFO:display_container: 2
2022-08-11 23:01:52,505:INFO:LassoLars(random_state=6978)
2022-08-11 23:01:52,505:INFO:create_model() successfully completed......................................
2022-08-11 23:01:52,614:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:52,614:INFO:Creating metrics dataframe
2022-08-11 23:01:52,620:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 23:01:52,620:INFO:Total runtime is 0.05571006536483765 minutes
2022-08-11 23:01:52,622:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:52,622:INFO:Initializing create_model()
2022-08-11 23:01:52,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:52,622:INFO:Checking exceptions
2022-08-11 23:01:52,627:INFO:Importing libraries
2022-08-11 23:01:52,627:INFO:Copying training dataset
2022-08-11 23:01:52,635:INFO:Defining folds
2022-08-11 23:01:52,635:INFO:Declaring metric variables
2022-08-11 23:01:52,637:INFO:Importing untrained model
2022-08-11 23:01:52,640:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 23:01:52,644:INFO:Starting cross validation
2022-08-11 23:01:52,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:52,752:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,755:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,757:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,760:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,764:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,768:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,770:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,770:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,771:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,773:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,775:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,780:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,782:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,784:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,789:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,795:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,801:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,803:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:01:52,814:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:52,933:INFO:Calculating mean and std
2022-08-11 23:01:52,935:INFO:Creating metrics dataframe
2022-08-11 23:01:52,938:INFO:Uploading results into container
2022-08-11 23:01:52,938:INFO:Uploading model into container now
2022-08-11 23:01:52,939:INFO:master_model_container: 7
2022-08-11 23:01:52,939:INFO:display_container: 2
2022-08-11 23:01:52,939:INFO:OrthogonalMatchingPursuit()
2022-08-11 23:01:52,939:INFO:create_model() successfully completed......................................
2022-08-11 23:01:53,047:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:53,047:INFO:Creating metrics dataframe
2022-08-11 23:01:53,054:INFO:Initializing Bayesian Ridge
2022-08-11 23:01:53,054:INFO:Total runtime is 0.06293462912241618 minutes
2022-08-11 23:01:53,056:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:53,056:INFO:Initializing create_model()
2022-08-11 23:01:53,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:53,056:INFO:Checking exceptions
2022-08-11 23:01:53,060:INFO:Importing libraries
2022-08-11 23:01:53,060:INFO:Copying training dataset
2022-08-11 23:01:53,068:INFO:Defining folds
2022-08-11 23:01:53,068:INFO:Declaring metric variables
2022-08-11 23:01:53,070:INFO:Importing untrained model
2022-08-11 23:01:53,073:INFO:Bayesian Ridge Imported successfully
2022-08-11 23:01:53,077:INFO:Starting cross validation
2022-08-11 23:01:53,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:53,416:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,422:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,430:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,438:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,438:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,445:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,446:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,470:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,589:INFO:Calculating mean and std
2022-08-11 23:01:53,591:INFO:Creating metrics dataframe
2022-08-11 23:01:53,594:INFO:Uploading results into container
2022-08-11 23:01:53,594:INFO:Uploading model into container now
2022-08-11 23:01:53,595:INFO:master_model_container: 8
2022-08-11 23:01:53,595:INFO:display_container: 2
2022-08-11 23:01:53,595:INFO:BayesianRidge()
2022-08-11 23:01:53,595:INFO:create_model() successfully completed......................................
2022-08-11 23:01:53,702:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:53,703:INFO:Creating metrics dataframe
2022-08-11 23:01:53,709:INFO:Initializing Passive Aggressive Regressor
2022-08-11 23:01:53,709:INFO:Total runtime is 0.07385420004526774 minutes
2022-08-11 23:01:53,711:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:53,711:INFO:Initializing create_model()
2022-08-11 23:01:53,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:53,711:INFO:Checking exceptions
2022-08-11 23:01:53,716:INFO:Importing libraries
2022-08-11 23:01:53,716:INFO:Copying training dataset
2022-08-11 23:01:53,724:INFO:Defining folds
2022-08-11 23:01:53,724:INFO:Declaring metric variables
2022-08-11 23:01:53,726:INFO:Importing untrained model
2022-08-11 23:01:53,728:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 23:01:53,732:INFO:Starting cross validation
2022-08-11 23:01:53,733:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:53,952:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,954:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,956:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,959:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,964:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,965:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,977:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,981:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:53,986:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:54,105:INFO:Calculating mean and std
2022-08-11 23:01:54,106:INFO:Creating metrics dataframe
2022-08-11 23:01:54,110:INFO:Uploading results into container
2022-08-11 23:01:54,111:INFO:Uploading model into container now
2022-08-11 23:01:54,111:INFO:master_model_container: 9
2022-08-11 23:01:54,111:INFO:display_container: 2
2022-08-11 23:01:54,111:INFO:PassiveAggressiveRegressor(random_state=6978)
2022-08-11 23:01:54,111:INFO:create_model() successfully completed......................................
2022-08-11 23:01:54,224:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:54,225:INFO:Creating metrics dataframe
2022-08-11 23:01:54,232:INFO:Initializing Huber Regressor
2022-08-11 23:01:54,232:INFO:Total runtime is 0.08257819811503092 minutes
2022-08-11 23:01:54,235:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:54,235:INFO:Initializing create_model()
2022-08-11 23:01:54,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:54,235:INFO:Checking exceptions
2022-08-11 23:01:54,239:INFO:Importing libraries
2022-08-11 23:01:54,240:INFO:Copying training dataset
2022-08-11 23:01:54,247:INFO:Defining folds
2022-08-11 23:01:54,247:INFO:Declaring metric variables
2022-08-11 23:01:54,249:INFO:Importing untrained model
2022-08-11 23:01:54,252:INFO:Huber Regressor Imported successfully
2022-08-11 23:01:54,256:INFO:Starting cross validation
2022-08-11 23:01:54,256:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:54,650:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,106:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,135:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,136:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,140:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,140:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,149:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,149:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,156:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,156:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,167:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,168:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,169:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,169:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,199:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:01:55,200:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,319:INFO:Calculating mean and std
2022-08-11 23:01:55,321:INFO:Creating metrics dataframe
2022-08-11 23:01:55,325:INFO:Uploading results into container
2022-08-11 23:01:55,325:INFO:Uploading model into container now
2022-08-11 23:01:55,326:INFO:master_model_container: 10
2022-08-11 23:01:55,326:INFO:display_container: 2
2022-08-11 23:01:55,326:INFO:HuberRegressor()
2022-08-11 23:01:55,326:INFO:create_model() successfully completed......................................
2022-08-11 23:01:55,436:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:55,436:INFO:Creating metrics dataframe
2022-08-11 23:01:55,443:INFO:Initializing K Neighbors Regressor
2022-08-11 23:01:55,443:INFO:Total runtime is 0.10275318225224812 minutes
2022-08-11 23:01:55,445:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:55,445:INFO:Initializing create_model()
2022-08-11 23:01:55,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:55,445:INFO:Checking exceptions
2022-08-11 23:01:55,450:INFO:Importing libraries
2022-08-11 23:01:55,450:INFO:Copying training dataset
2022-08-11 23:01:55,458:INFO:Defining folds
2022-08-11 23:01:55,458:INFO:Declaring metric variables
2022-08-11 23:01:55,460:INFO:Importing untrained model
2022-08-11 23:01:55,463:INFO:K Neighbors Regressor Imported successfully
2022-08-11 23:01:55,467:INFO:Starting cross validation
2022-08-11 23:01:55,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:55,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,577:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,581:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,586:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,592:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,595:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,619:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,623:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:55,638:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:56,731:INFO:Calculating mean and std
2022-08-11 23:01:56,733:INFO:Creating metrics dataframe
2022-08-11 23:01:56,737:INFO:Uploading results into container
2022-08-11 23:01:56,738:INFO:Uploading model into container now
2022-08-11 23:01:56,738:INFO:master_model_container: 11
2022-08-11 23:01:56,738:INFO:display_container: 2
2022-08-11 23:01:56,738:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 23:01:56,738:INFO:create_model() successfully completed......................................
2022-08-11 23:01:56,854:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:56,854:INFO:Creating metrics dataframe
2022-08-11 23:01:56,862:INFO:Initializing Decision Tree Regressor
2022-08-11 23:01:56,862:INFO:Total runtime is 0.12641096512476602 minutes
2022-08-11 23:01:56,865:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:56,865:INFO:Initializing create_model()
2022-08-11 23:01:56,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:56,865:INFO:Checking exceptions
2022-08-11 23:01:56,870:INFO:Importing libraries
2022-08-11 23:01:56,870:INFO:Copying training dataset
2022-08-11 23:01:56,878:INFO:Defining folds
2022-08-11 23:01:56,879:INFO:Declaring metric variables
2022-08-11 23:01:56,881:INFO:Importing untrained model
2022-08-11 23:01:56,883:INFO:Decision Tree Regressor Imported successfully
2022-08-11 23:01:56,888:INFO:Starting cross validation
2022-08-11 23:01:56,889:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:01:58,189:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,225:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,246:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,246:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,272:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,274:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,283:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,314:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,341:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:01:58,459:INFO:Calculating mean and std
2022-08-11 23:01:58,461:INFO:Creating metrics dataframe
2022-08-11 23:01:58,465:INFO:Uploading results into container
2022-08-11 23:01:58,465:INFO:Uploading model into container now
2022-08-11 23:01:58,466:INFO:master_model_container: 12
2022-08-11 23:01:58,466:INFO:display_container: 2
2022-08-11 23:01:58,466:INFO:DecisionTreeRegressor(random_state=6978)
2022-08-11 23:01:58,466:INFO:create_model() successfully completed......................................
2022-08-11 23:01:58,575:INFO:SubProcess create_model() end ==================================
2022-08-11 23:01:58,575:INFO:Creating metrics dataframe
2022-08-11 23:01:58,583:INFO:Initializing Random Forest Regressor
2022-08-11 23:01:58,583:INFO:Total runtime is 0.15508864720662432 minutes
2022-08-11 23:01:58,586:INFO:SubProcess create_model() called ==================================
2022-08-11 23:01:58,586:INFO:Initializing create_model()
2022-08-11 23:01:58,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:01:58,586:INFO:Checking exceptions
2022-08-11 23:01:58,590:INFO:Importing libraries
2022-08-11 23:01:58,590:INFO:Copying training dataset
2022-08-11 23:01:58,598:INFO:Defining folds
2022-08-11 23:01:58,598:INFO:Declaring metric variables
2022-08-11 23:01:58,600:INFO:Importing untrained model
2022-08-11 23:01:58,603:INFO:Random Forest Regressor Imported successfully
2022-08-11 23:01:58,607:INFO:Starting cross validation
2022-08-11 23:01:58,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:03:11,753:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,263:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,449:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,552:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,564:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,583:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,587:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,592:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,686:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,696:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:12,839:INFO:Calculating mean and std
2022-08-11 23:03:12,841:INFO:Creating metrics dataframe
2022-08-11 23:03:12,845:INFO:Uploading results into container
2022-08-11 23:03:12,845:INFO:Uploading model into container now
2022-08-11 23:03:12,846:INFO:master_model_container: 13
2022-08-11 23:03:12,846:INFO:display_container: 2
2022-08-11 23:03:12,846:INFO:RandomForestRegressor(n_jobs=-1, random_state=6978)
2022-08-11 23:03:12,846:INFO:create_model() successfully completed......................................
2022-08-11 23:03:12,957:INFO:SubProcess create_model() end ==================================
2022-08-11 23:03:12,957:INFO:Creating metrics dataframe
2022-08-11 23:03:12,965:INFO:Initializing Extra Trees Regressor
2022-08-11 23:03:12,965:INFO:Total runtime is 1.3947843511899314 minutes
2022-08-11 23:03:12,967:INFO:SubProcess create_model() called ==================================
2022-08-11 23:03:12,967:INFO:Initializing create_model()
2022-08-11 23:03:12,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:03:12,967:INFO:Checking exceptions
2022-08-11 23:03:12,971:INFO:Importing libraries
2022-08-11 23:03:12,971:INFO:Copying training dataset
2022-08-11 23:03:12,979:INFO:Defining folds
2022-08-11 23:03:12,979:INFO:Declaring metric variables
2022-08-11 23:03:12,982:INFO:Importing untrained model
2022-08-11 23:03:12,984:INFO:Extra Trees Regressor Imported successfully
2022-08-11 23:03:12,988:INFO:Starting cross validation
2022-08-11 23:03:12,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:03:40,014:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,085:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,128:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,164:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,243:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,258:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:40,268:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:41,433:INFO:Calculating mean and std
2022-08-11 23:03:41,435:INFO:Creating metrics dataframe
2022-08-11 23:03:41,437:INFO:Uploading results into container
2022-08-11 23:03:41,437:INFO:Uploading model into container now
2022-08-11 23:03:41,438:INFO:master_model_container: 14
2022-08-11 23:03:41,438:INFO:display_container: 2
2022-08-11 23:03:41,438:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6978)
2022-08-11 23:03:41,438:INFO:create_model() successfully completed......................................
2022-08-11 23:03:41,548:INFO:SubProcess create_model() end ==================================
2022-08-11 23:03:41,548:INFO:Creating metrics dataframe
2022-08-11 23:03:41,556:INFO:Initializing AdaBoost Regressor
2022-08-11 23:03:41,556:INFO:Total runtime is 1.87131218512853 minutes
2022-08-11 23:03:41,559:INFO:SubProcess create_model() called ==================================
2022-08-11 23:03:41,559:INFO:Initializing create_model()
2022-08-11 23:03:41,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:03:41,559:INFO:Checking exceptions
2022-08-11 23:03:41,564:INFO:Importing libraries
2022-08-11 23:03:41,564:INFO:Copying training dataset
2022-08-11 23:03:41,573:INFO:Defining folds
2022-08-11 23:03:41,573:INFO:Declaring metric variables
2022-08-11 23:03:41,575:INFO:Importing untrained model
2022-08-11 23:03:41,578:INFO:AdaBoost Regressor Imported successfully
2022-08-11 23:03:41,582:INFO:Starting cross validation
2022-08-11 23:03:41,583:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:03:41,976:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/joblib/externals/loky/process_executor.py:702: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2022-08-11 23:03:46,586:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:46,701:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:46,808:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:47,147:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:47,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:47,296:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:47,696:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:48,154:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:48,324:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:48,546:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:03:48,673:INFO:Calculating mean and std
2022-08-11 23:03:48,676:INFO:Creating metrics dataframe
2022-08-11 23:03:48,681:INFO:Uploading results into container
2022-08-11 23:03:48,681:INFO:Uploading model into container now
2022-08-11 23:03:48,682:INFO:master_model_container: 15
2022-08-11 23:03:48,682:INFO:display_container: 2
2022-08-11 23:03:48,682:INFO:AdaBoostRegressor(random_state=6978)
2022-08-11 23:03:48,682:INFO:create_model() successfully completed......................................
2022-08-11 23:03:48,817:INFO:SubProcess create_model() end ==================================
2022-08-11 23:03:48,817:INFO:Creating metrics dataframe
2022-08-11 23:03:48,826:INFO:Initializing Gradient Boosting Regressor
2022-08-11 23:03:48,826:INFO:Total runtime is 1.9924707651138307 minutes
2022-08-11 23:03:48,828:INFO:SubProcess create_model() called ==================================
2022-08-11 23:03:48,829:INFO:Initializing create_model()
2022-08-11 23:03:48,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:03:48,829:INFO:Checking exceptions
2022-08-11 23:03:48,842:INFO:Importing libraries
2022-08-11 23:03:48,842:INFO:Copying training dataset
2022-08-11 23:03:48,854:INFO:Defining folds
2022-08-11 23:03:48,854:INFO:Declaring metric variables
2022-08-11 23:03:48,856:INFO:Importing untrained model
2022-08-11 23:03:48,859:INFO:Gradient Boosting Regressor Imported successfully
2022-08-11 23:03:48,863:INFO:Starting cross validation
2022-08-11 23:03:48,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:04,375:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,444:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,446:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,448:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,456:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,463:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,467:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,498:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,528:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,579:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:04,700:INFO:Calculating mean and std
2022-08-11 23:04:04,702:INFO:Creating metrics dataframe
2022-08-11 23:04:04,706:INFO:Uploading results into container
2022-08-11 23:04:04,706:INFO:Uploading model into container now
2022-08-11 23:04:04,707:INFO:master_model_container: 16
2022-08-11 23:04:04,707:INFO:display_container: 2
2022-08-11 23:04:04,707:INFO:GradientBoostingRegressor(random_state=6978)
2022-08-11 23:04:04,707:INFO:create_model() successfully completed......................................
2022-08-11 23:04:04,818:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:04,818:INFO:Creating metrics dataframe
2022-08-11 23:04:04,826:INFO:Initializing Extreme Gradient Boosting
2022-08-11 23:04:04,826:INFO:Total runtime is 2.2591424306233727 minutes
2022-08-11 23:04:04,828:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:04,829:INFO:Initializing create_model()
2022-08-11 23:04:04,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:04,829:INFO:Checking exceptions
2022-08-11 23:04:04,839:INFO:Importing libraries
2022-08-11 23:04:04,839:INFO:Copying training dataset
2022-08-11 23:04:04,851:INFO:Defining folds
2022-08-11 23:04:04,852:INFO:Declaring metric variables
2022-08-11 23:04:04,854:INFO:Importing untrained model
2022-08-11 23:04:04,857:INFO:Extreme Gradient Boosting Imported successfully
2022-08-11 23:04:04,861:INFO:Starting cross validation
2022-08-11 23:04:04,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:14,540:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,580:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,607:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,618:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,626:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,670:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,683:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,728:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,801:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:14,928:INFO:Calculating mean and std
2022-08-11 23:04:14,929:INFO:Creating metrics dataframe
2022-08-11 23:04:14,933:INFO:Uploading results into container
2022-08-11 23:04:14,933:INFO:Uploading model into container now
2022-08-11 23:04:14,934:INFO:master_model_container: 17
2022-08-11 23:04:14,934:INFO:display_container: 2
2022-08-11 23:04:14,935:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=6978,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-11 23:04:14,935:INFO:create_model() successfully completed......................................
2022-08-11 23:04:15,044:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:15,044:INFO:Creating metrics dataframe
2022-08-11 23:04:15,053:INFO:Initializing Light Gradient Boosting Machine
2022-08-11 23:04:15,053:INFO:Total runtime is 2.4295833309491477 minutes
2022-08-11 23:04:15,055:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:15,055:INFO:Initializing create_model()
2022-08-11 23:04:15,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:15,055:INFO:Checking exceptions
2022-08-11 23:04:15,061:INFO:Importing libraries
2022-08-11 23:04:15,062:INFO:Copying training dataset
2022-08-11 23:04:15,072:INFO:Defining folds
2022-08-11 23:04:15,072:INFO:Declaring metric variables
2022-08-11 23:04:15,075:INFO:Importing untrained model
2022-08-11 23:04:15,077:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 23:04:15,082:INFO:Starting cross validation
2022-08-11 23:04:15,083:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:15,691:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,692:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,703:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,721:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,734:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,738:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,775:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,778:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:15,913:INFO:Calculating mean and std
2022-08-11 23:04:15,914:INFO:Creating metrics dataframe
2022-08-11 23:04:15,918:INFO:Uploading results into container
2022-08-11 23:04:15,918:INFO:Uploading model into container now
2022-08-11 23:04:15,919:INFO:master_model_container: 18
2022-08-11 23:04:15,919:INFO:display_container: 2
2022-08-11 23:04:15,919:INFO:LGBMRegressor(random_state=6978)
2022-08-11 23:04:15,919:INFO:create_model() successfully completed......................................
2022-08-11 23:04:16,030:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:16,030:INFO:Creating metrics dataframe
2022-08-11 23:04:16,038:INFO:Initializing Dummy Regressor
2022-08-11 23:04:16,038:INFO:Total runtime is 2.446011201540629 minutes
2022-08-11 23:04:16,040:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:16,040:INFO:Initializing create_model()
2022-08-11 23:04:16,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7f0a7b3f10>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:16,040:INFO:Checking exceptions
2022-08-11 23:04:16,045:INFO:Importing libraries
2022-08-11 23:04:16,045:INFO:Copying training dataset
2022-08-11 23:04:16,053:INFO:Defining folds
2022-08-11 23:04:16,053:INFO:Declaring metric variables
2022-08-11 23:04:16,055:INFO:Importing untrained model
2022-08-11 23:04:16,057:INFO:Dummy Regressor Imported successfully
2022-08-11 23:04:16,061:INFO:Starting cross validation
2022-08-11 23:04:16,062:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:16,173:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,174:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,176:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,176:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,179:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,180:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,181:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,195:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,212:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,231:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:16,350:INFO:Calculating mean and std
2022-08-11 23:04:16,352:INFO:Creating metrics dataframe
2022-08-11 23:04:16,355:INFO:Uploading results into container
2022-08-11 23:04:16,356:INFO:Uploading model into container now
2022-08-11 23:04:16,356:INFO:master_model_container: 19
2022-08-11 23:04:16,356:INFO:display_container: 2
2022-08-11 23:04:16,356:INFO:DummyRegressor()
2022-08-11 23:04:16,356:INFO:create_model() successfully completed......................................
2022-08-11 23:04:16,469:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:16,469:INFO:Creating metrics dataframe
2022-08-11 23:04:16,485:INFO:Initializing create_model()
2022-08-11 23:04:16,486:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=LGBMRegressor(random_state=6978), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:16,486:INFO:Checking exceptions
2022-08-11 23:04:16,492:INFO:Importing libraries
2022-08-11 23:04:16,492:INFO:Copying training dataset
2022-08-11 23:04:16,500:INFO:Defining folds
2022-08-11 23:04:16,500:INFO:Declaring metric variables
2022-08-11 23:04:16,500:INFO:Importing untrained model
2022-08-11 23:04:16,500:INFO:Declaring custom model
2022-08-11 23:04:16,501:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 23:04:16,501:INFO:Cross validation set to False
2022-08-11 23:04:16,501:INFO:Fitting Model
2022-08-11 23:04:18,939:INFO:LGBMRegressor(random_state=6978)
2022-08-11 23:04:18,940:INFO:create_model() successfully completed......................................
2022-08-11 23:04:19,072:INFO:master_model_container: 19
2022-08-11 23:04:19,073:INFO:display_container: 2
2022-08-11 23:04:19,073:INFO:LGBMRegressor(random_state=6978)
2022-08-11 23:04:19,073:INFO:compare_models() successfully completed......................................
2022-08-11 23:04:19,078:INFO:Initializing create_model()
2022-08-11 23:04:19,078:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:19,079:INFO:Checking exceptions
2022-08-11 23:04:19,106:INFO:Importing libraries
2022-08-11 23:04:19,106:INFO:Copying training dataset
2022-08-11 23:04:19,125:INFO:Defining folds
2022-08-11 23:04:19,125:INFO:Declaring metric variables
2022-08-11 23:04:19,128:INFO:Importing untrained model
2022-08-11 23:04:19,131:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 23:04:19,135:INFO:Starting cross validation
2022-08-11 23:04:19,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:19,711:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,739:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,740:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,773:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,823:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,830:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,842:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:19,924:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:20,060:INFO:Calculating mean and std
2022-08-11 23:04:20,060:INFO:Creating metrics dataframe
2022-08-11 23:04:20,066:INFO:Finalizing model
2022-08-11 23:04:22,063:INFO:Uploading results into container
2022-08-11 23:04:22,064:INFO:Uploading model into container now
2022-08-11 23:04:22,072:INFO:master_model_container: 20
2022-08-11 23:04:22,072:INFO:display_container: 3
2022-08-11 23:04:22,073:INFO:LGBMRegressor(random_state=6978)
2022-08-11 23:04:22,073:INFO:create_model() successfully completed......................................
2022-08-11 23:04:22,191:INFO:Initializing finalize_model()
2022-08-11 23:04:22,191:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=LGBMRegressor(random_state=6978), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-08-11 23:04:22,192:INFO:Finalizing LGBMRegressor(random_state=6978)
2022-08-11 23:04:22,212:INFO:Initializing create_model()
2022-08-11 23:04:22,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=LGBMRegressor(random_state=6978), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-08-11 23:04:22,213:INFO:Checking exceptions
2022-08-11 23:04:22,214:INFO:Importing libraries
2022-08-11 23:04:22,214:INFO:Copying training dataset
2022-08-11 23:04:22,216:INFO:Defining folds
2022-08-11 23:04:22,216:INFO:Declaring metric variables
2022-08-11 23:04:22,216:INFO:Importing untrained model
2022-08-11 23:04:22,216:INFO:Declaring custom model
2022-08-11 23:04:22,217:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-11 23:04:22,217:INFO:Cross validation set to False
2022-08-11 23:04:22,217:INFO:Fitting Model
2022-08-11 23:04:24,454:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=6978))])
2022-08-11 23:04:24,454:INFO:create_model() successfully completed......................................
2022-08-11 23:04:24,568:INFO:Initializing predict_model()
2022-08-11 23:04:24,568:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=6978))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7cf6569280>)
2022-08-11 23:04:24,568:INFO:Checking exceptions
2022-08-11 23:04:24,569:INFO:Preloading libraries
2022-08-11 23:04:24,576:INFO:Set up data.
2022-08-11 23:04:24,850:INFO:display_container: 4
2022-08-11 23:04:24,850:INFO:master_model_container: 20
2022-08-11 23:04:24,850:INFO:display_container: 4
2022-08-11 23:04:24,854:INFO:Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=6978))])
2022-08-11 23:04:24,855:INFO:finalize_model() successfully completed......................................
2022-08-11 23:04:24,971:INFO:Initializing predict_model()
2022-08-11 23:04:24,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e47977e80>, estimator=Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=6978))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f7e15645940>)
2022-08-11 23:04:24,972:INFO:Checking exceptions
2022-08-11 23:04:24,972:INFO:Preloading libraries
2022-08-11 23:04:24,978:INFO:Set up data.
2022-08-11 23:04:25,353:WARNING:/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/ipykernel_3423/3274266762.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  submit_df['Y_05'] = predict_model(model_y05, data=test_df)['prediction_label']

2022-08-11 23:04:25,357:INFO:PyCaret RegressionExperiment
2022-08-11 23:04:25,357:INFO:Logging name: reg-default-name
2022-08-11 23:04:25,357:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-11 23:04:25,357:INFO:version 3.0.0.rc3
2022-08-11 23:04:25,357:INFO:Initializing setup()
2022-08-11 23:04:25,357:INFO:self.USI: c342
2022-08-11 23:04:25,357:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'exp_id', 'USI', 'y', 'gpu_param', 'X_train', 'logging_param', '_ml_usecase', 'data', 'fold_groups_param', 'n_jobs_param', 'idx', 'transform_target_param', 'X_test', 'fold_shuffle_param', 'master_model_container', '_all_models', '_all_models_internal', 'variable_keys', 'fold_generator', 'html_param', 'memory', 'display_container', 'seed', 'y_test', 'y_train', 'X', 'exp_name_log', 'pipeline', '_all_metrics', 'target_param', 'transform_target_method_param', '_available_plots', 'log_plots_param'}
2022-08-11 23:04:25,357:INFO:Checking environment
2022-08-11 23:04:25,357:INFO:python_version: 3.8.8
2022-08-11 23:04:25,357:INFO:python_build: ('default', 'Apr 13 2021 12:59:45')
2022-08-11 23:04:25,357:INFO:machine: x86_64
2022-08-11 23:04:25,357:INFO:platform: macOS-10.16-x86_64-i386-64bit
2022-08-11 23:04:25,357:INFO:Memory: svmem(total=34359738368, available=4102520832, percent=88.1, used=3803652096, free=716046336, active=3380002816, inactive=3362250752, wired=423649280)
2022-08-11 23:04:25,358:INFO:Physical Core: 10
2022-08-11 23:04:25,358:INFO:Logical Core: 10
2022-08-11 23:04:25,358:INFO:Checking libraries
2022-08-11 23:04:25,358:INFO:System:
2022-08-11 23:04:25,358:INFO:    python: 3.8.8 (default, Apr 13 2021, 12:59:45)  [Clang 10.0.0 ]
2022-08-11 23:04:25,358:INFO:executable: /Users/siwon/miniconda3/envs/your_env/bin/python
2022-08-11 23:04:25,358:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2022-08-11 23:04:25,358:INFO:PyCaret required dependencies:
2022-08-11 23:04:25,358:INFO:                 pip: 22.1.2
2022-08-11 23:04:25,358:INFO:          setuptools: 61.2.0
2022-08-11 23:04:25,358:INFO:             pycaret: 3.0.0rc3
2022-08-11 23:04:25,358:INFO:             IPython: 8.4.0
2022-08-11 23:04:25,358:INFO:          ipywidgets: 7.6.5
2022-08-11 23:04:25,358:INFO:                tqdm: 4.64.0
2022-08-11 23:04:25,358:INFO:               numpy: 1.22.4
2022-08-11 23:04:25,358:INFO:              pandas: 1.4.3
2022-08-11 23:04:25,358:INFO:              jinja2: 3.0.3
2022-08-11 23:04:25,358:INFO:               scipy: 1.5.4
2022-08-11 23:04:25,358:INFO:              joblib: 1.1.0
2022-08-11 23:04:25,358:INFO:             sklearn: 1.1.1
2022-08-11 23:04:25,358:INFO:                pyod: 1.0.4
2022-08-11 23:04:25,358:INFO:            imblearn: 0.9.1
2022-08-11 23:04:25,358:INFO:   category_encoders: 2.5.0
2022-08-11 23:04:25,358:INFO:            lightgbm: 3.2.1
2022-08-11 23:04:25,358:INFO:               numba: 0.55.2
2022-08-11 23:04:25,358:INFO:            requests: 2.28.1
2022-08-11 23:04:25,358:INFO:          matplotlib: 3.5.1
2022-08-11 23:04:25,358:INFO:          scikitplot: 0.3.7
2022-08-11 23:04:25,358:INFO:         yellowbrick: 1.4
2022-08-11 23:04:25,358:INFO:              plotly: 5.9.0
2022-08-11 23:04:25,358:INFO:             kaleido: 0.2.1
2022-08-11 23:04:25,358:INFO:         statsmodels: 0.13.2
2022-08-11 23:04:25,358:INFO:              sktime: 0.13.0
2022-08-11 23:04:25,358:INFO:               tbats: 1.1.0
2022-08-11 23:04:25,358:INFO:            pmdarima: 1.8.5
2022-08-11 23:04:25,358:INFO:              psutil: 5.9.1
2022-08-11 23:04:25,358:INFO:PyCaret optional dependencies:
2022-08-11 23:04:25,358:INFO:                shap: Not installed
2022-08-11 23:04:25,358:INFO:           interpret: Not installed
2022-08-11 23:04:25,358:INFO:                umap: 0.5.3
2022-08-11 23:04:25,358:INFO:    pandas_profiling: 2.9.0
2022-08-11 23:04:25,358:INFO:  explainerdashboard: Not installed
2022-08-11 23:04:25,359:INFO:             autoviz: Not installed
2022-08-11 23:04:25,359:INFO:           fairlearn: Not installed
2022-08-11 23:04:25,359:INFO:             xgboost: 1.6.1
2022-08-11 23:04:25,359:INFO:            catboost: Not installed
2022-08-11 23:04:25,359:INFO:              kmodes: 0.12.1
2022-08-11 23:04:25,359:INFO:             mlxtend: 0.19.0
2022-08-11 23:04:25,359:INFO:       statsforecast: Not installed
2022-08-11 23:04:25,359:INFO:        tune_sklearn: Not installed
2022-08-11 23:04:25,359:INFO:                 ray: Not installed
2022-08-11 23:04:25,359:INFO:            hyperopt: Not installed
2022-08-11 23:04:25,359:INFO:              optuna: Not installed
2022-08-11 23:04:25,359:INFO:               skopt: Not installed
2022-08-11 23:04:25,359:INFO:              mlflow: 1.27.0
2022-08-11 23:04:25,359:INFO:              gradio: Not installed
2022-08-11 23:04:25,359:INFO:             fastapi: Not installed
2022-08-11 23:04:25,359:INFO:             uvicorn: Not installed
2022-08-11 23:04:25,359:INFO:              m2cgen: Not installed
2022-08-11 23:04:25,359:INFO:           evidently: Not installed
2022-08-11 23:04:25,359:INFO:                nltk: 3.7
2022-08-11 23:04:25,359:INFO:            pyLDAvis: 3.2.2
2022-08-11 23:04:25,359:INFO:              gensim: 3.8.3
2022-08-11 23:04:25,359:INFO:               spacy: 2.3.7
2022-08-11 23:04:25,359:INFO:           wordcloud: 1.8.2.2
2022-08-11 23:04:25,359:INFO:            textblob: 0.17.1
2022-08-11 23:04:25,359:INFO:               fugue: Not installed
2022-08-11 23:04:25,359:INFO:           streamlit: Not installed
2022-08-11 23:04:25,359:INFO:             prophet: Not installed
2022-08-11 23:04:25,359:INFO:None
2022-08-11 23:04:25,359:INFO:Set up data.
2022-08-11 23:04:25,393:INFO:Set up train/test split.
2022-08-11 23:04:25,415:INFO:Set up folding strategy.
2022-08-11 23:04:25,415:INFO:Assigning column types.
2022-08-11 23:04:25,422:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-11 23:04:25,422:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,426:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,431:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,490:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,531:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,531:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:25,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:25,534:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,538:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,542:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,603:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,644:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:25,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:25,646:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-11 23:04:25,650:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,654:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,711:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,752:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,752:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:25,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:25,759:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,763:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,820:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,861:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:25,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:25,864:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-11 23:04:25,872:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,969:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:25,970:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:25,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:25,980:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,078:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,080:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-11 23:04:26,145:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,185:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,292:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,295:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-11 23:04:26,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,402:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-11 23:04:26,516:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,519:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-11 23:04:26,630:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,740:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:26,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:26,743:INFO:Preparing preprocessing pipeline...
2022-08-11 23:04:26,744:INFO:Set up simple imputation.
2022-08-11 23:04:26,744:INFO:Set up variance threshold.
2022-08-11 23:04:26,920:INFO:Finished creating preprocessing pipeline.
2022-08-11 23:04:26,924:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/gb/v43j9df96zv1_jvhqtlrd3800000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['X_01', 'X_02', 'X_03', 'X_04',
                                             'X_05', 'X_06', 'X_07', 'X_08',
                                             'X_09', 'X_10', 'X_11', 'X_12',
                                             'X_13', 'X_14', 'X_15', 'X_16',
                                             'X_17', 'X_18', 'X_19', 'X_20',
                                             'X_21', 'X_22', 'X_23', 'X_24',
                                             'X_25', 'X_26', 'X_27', 'X_28',
                                             'X_29', 'X_30', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-11 23:04:26,924:INFO:Creating final display dataframe.
2022-08-11 23:04:27,601:INFO:Setup display_container:                Description             Value
0               Session id              2174
1                   Target              Y_08
2              Target type        Regression
3               Data shape       (39607, 53)
4         Train data shape       (27724, 53)
5          Test data shape       (11883, 53)
6         Numeric features                56
7               Preprocess              True
8          Imputation type            simple
9       Numeric imputation              mean
10  Categorical imputation          constant
11  Low variance threshold                 0
12          Fold Generator             KFold
13             Fold Number                10
14                CPU Jobs                -1
15                 Use GPU             False
16          Log Experiment             False
17         Experiment Name  reg-default-name
18                     USI              c342
2022-08-11 23:04:27,709:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:27,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:27,814:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-11 23:04:27,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-08-11 23:04:27,838:INFO:setup() successfully completed in 2.48s...............
2022-08-11 23:04:27,841:INFO:Initializing compare_models()
2022-08-11 23:04:27,841:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-11 23:04:27,841:INFO:Checking exceptions
2022-08-11 23:04:27,848:INFO:Preparing display monitor
2022-08-11 23:04:27,870:INFO:Initializing Linear Regression
2022-08-11 23:04:27,871:INFO:Total runtime is 3.147125244140625e-06 minutes
2022-08-11 23:04:27,873:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:27,873:INFO:Initializing create_model()
2022-08-11 23:04:27,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:27,873:INFO:Checking exceptions
2022-08-11 23:04:27,880:INFO:Importing libraries
2022-08-11 23:04:27,881:INFO:Copying training dataset
2022-08-11 23:04:27,891:INFO:Defining folds
2022-08-11 23:04:27,891:INFO:Declaring metric variables
2022-08-11 23:04:27,893:INFO:Importing untrained model
2022-08-11 23:04:27,895:INFO:Linear Regression Imported successfully
2022-08-11 23:04:27,899:INFO:Starting cross validation
2022-08-11 23:04:27,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:28,492:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,493:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,497:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,501:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,541:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,543:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,597:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,603:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,751:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:28,981:INFO:Calculating mean and std
2022-08-11 23:04:28,983:INFO:Creating metrics dataframe
2022-08-11 23:04:28,987:INFO:Uploading results into container
2022-08-11 23:04:28,987:INFO:Uploading model into container now
2022-08-11 23:04:28,988:INFO:master_model_container: 1
2022-08-11 23:04:28,988:INFO:display_container: 2
2022-08-11 23:04:28,988:INFO:LinearRegression(n_jobs=-1)
2022-08-11 23:04:28,988:INFO:create_model() successfully completed......................................
2022-08-11 23:04:29,104:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:29,104:INFO:Creating metrics dataframe
2022-08-11 23:04:29,109:INFO:Initializing Lasso Regression
2022-08-11 23:04:29,109:INFO:Total runtime is 0.020649131139119467 minutes
2022-08-11 23:04:29,111:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:29,111:INFO:Initializing create_model()
2022-08-11 23:04:29,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:29,111:INFO:Checking exceptions
2022-08-11 23:04:29,117:INFO:Importing libraries
2022-08-11 23:04:29,118:INFO:Copying training dataset
2022-08-11 23:04:29,127:INFO:Defining folds
2022-08-11 23:04:29,128:INFO:Declaring metric variables
2022-08-11 23:04:29,130:INFO:Importing untrained model
2022-08-11 23:04:29,132:INFO:Lasso Regression Imported successfully
2022-08-11 23:04:29,135:INFO:Starting cross validation
2022-08-11 23:04:29,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:29,264:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,267:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,270:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,270:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,275:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,279:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,286:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,303:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,314:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,433:INFO:Calculating mean and std
2022-08-11 23:04:29,435:INFO:Creating metrics dataframe
2022-08-11 23:04:29,438:INFO:Uploading results into container
2022-08-11 23:04:29,438:INFO:Uploading model into container now
2022-08-11 23:04:29,439:INFO:master_model_container: 2
2022-08-11 23:04:29,439:INFO:display_container: 2
2022-08-11 23:04:29,439:INFO:Lasso(random_state=2174)
2022-08-11 23:04:29,439:INFO:create_model() successfully completed......................................
2022-08-11 23:04:29,548:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:29,548:INFO:Creating metrics dataframe
2022-08-11 23:04:29,554:INFO:Initializing Ridge Regression
2022-08-11 23:04:29,554:INFO:Total runtime is 0.028062979380289715 minutes
2022-08-11 23:04:29,556:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:29,556:INFO:Initializing create_model()
2022-08-11 23:04:29,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:29,556:INFO:Checking exceptions
2022-08-11 23:04:29,562:INFO:Importing libraries
2022-08-11 23:04:29,562:INFO:Copying training dataset
2022-08-11 23:04:29,571:INFO:Defining folds
2022-08-11 23:04:29,572:INFO:Declaring metric variables
2022-08-11 23:04:29,574:INFO:Importing untrained model
2022-08-11 23:04:29,576:INFO:Ridge Regression Imported successfully
2022-08-11 23:04:29,579:INFO:Starting cross validation
2022-08-11 23:04:29,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:29,699:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,700:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,704:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,720:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,723:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,730:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,730:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,745:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:29,864:INFO:Calculating mean and std
2022-08-11 23:04:29,866:INFO:Creating metrics dataframe
2022-08-11 23:04:29,869:INFO:Uploading results into container
2022-08-11 23:04:29,870:INFO:Uploading model into container now
2022-08-11 23:04:29,870:INFO:master_model_container: 3
2022-08-11 23:04:29,870:INFO:display_container: 2
2022-08-11 23:04:29,870:INFO:Ridge(random_state=2174)
2022-08-11 23:04:29,870:INFO:create_model() successfully completed......................................
2022-08-11 23:04:29,982:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:29,982:INFO:Creating metrics dataframe
2022-08-11 23:04:29,988:INFO:Initializing Elastic Net
2022-08-11 23:04:29,989:INFO:Total runtime is 0.03530384699503581 minutes
2022-08-11 23:04:29,991:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:29,991:INFO:Initializing create_model()
2022-08-11 23:04:29,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:29,991:INFO:Checking exceptions
2022-08-11 23:04:29,996:INFO:Importing libraries
2022-08-11 23:04:29,996:INFO:Copying training dataset
2022-08-11 23:04:30,004:INFO:Defining folds
2022-08-11 23:04:30,004:INFO:Declaring metric variables
2022-08-11 23:04:30,006:INFO:Importing untrained model
2022-08-11 23:04:30,008:INFO:Elastic Net Imported successfully
2022-08-11 23:04:30,012:INFO:Starting cross validation
2022-08-11 23:04:30,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:30,125:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,127:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,135:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,146:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,147:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,148:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,168:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,184:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,206:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,326:INFO:Calculating mean and std
2022-08-11 23:04:30,328:INFO:Creating metrics dataframe
2022-08-11 23:04:30,331:INFO:Uploading results into container
2022-08-11 23:04:30,331:INFO:Uploading model into container now
2022-08-11 23:04:30,332:INFO:master_model_container: 4
2022-08-11 23:04:30,332:INFO:display_container: 2
2022-08-11 23:04:30,332:INFO:ElasticNet(random_state=2174)
2022-08-11 23:04:30,333:INFO:create_model() successfully completed......................................
2022-08-11 23:04:30,443:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:30,444:INFO:Creating metrics dataframe
2022-08-11 23:04:30,449:INFO:Initializing Least Angle Regression
2022-08-11 23:04:30,450:INFO:Total runtime is 0.04298558235168457 minutes
2022-08-11 23:04:30,451:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:30,452:INFO:Initializing create_model()
2022-08-11 23:04:30,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:30,452:INFO:Checking exceptions
2022-08-11 23:04:30,456:INFO:Importing libraries
2022-08-11 23:04:30,456:INFO:Copying training dataset
2022-08-11 23:04:30,463:INFO:Defining folds
2022-08-11 23:04:30,464:INFO:Declaring metric variables
2022-08-11 23:04:30,466:INFO:Importing untrained model
2022-08-11 23:04:30,468:INFO:Least Angle Regression Imported successfully
2022-08-11 23:04:30,471:INFO:Starting cross validation
2022-08-11 23:04:30,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:30,584:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,585:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,599:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,600:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,604:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,605:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,607:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,610:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,611:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,612:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,622:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,627:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,628:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,628:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,629:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,630:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:30,646:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:30,764:INFO:Calculating mean and std
2022-08-11 23:04:30,766:INFO:Creating metrics dataframe
2022-08-11 23:04:30,770:INFO:Uploading results into container
2022-08-11 23:04:30,770:INFO:Uploading model into container now
2022-08-11 23:04:30,771:INFO:master_model_container: 5
2022-08-11 23:04:30,771:INFO:display_container: 2
2022-08-11 23:04:30,771:INFO:Lars(random_state=2174)
2022-08-11 23:04:30,771:INFO:create_model() successfully completed......................................
2022-08-11 23:04:30,883:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:30,884:INFO:Creating metrics dataframe
2022-08-11 23:04:30,890:INFO:Initializing Lasso Least Angle Regression
2022-08-11 23:04:30,890:INFO:Total runtime is 0.05032226244608561 minutes
2022-08-11 23:04:30,892:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:30,892:INFO:Initializing create_model()
2022-08-11 23:04:30,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:30,892:INFO:Checking exceptions
2022-08-11 23:04:30,897:INFO:Importing libraries
2022-08-11 23:04:30,897:INFO:Copying training dataset
2022-08-11 23:04:30,904:INFO:Defining folds
2022-08-11 23:04:30,904:INFO:Declaring metric variables
2022-08-11 23:04:30,906:INFO:Importing untrained model
2022-08-11 23:04:30,908:INFO:Lasso Least Angle Regression Imported successfully
2022-08-11 23:04:30,912:INFO:Starting cross validation
2022-08-11 23:04:30,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:31,021:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,023:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,021:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,028:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,039:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,039:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,040:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,041:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,042:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,047:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,050:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,051:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,068:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,078:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,093:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,102:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,108:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-11 23:04:31,118:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,233:INFO:Calculating mean and std
2022-08-11 23:04:31,235:INFO:Creating metrics dataframe
2022-08-11 23:04:31,238:INFO:Uploading results into container
2022-08-11 23:04:31,239:INFO:Uploading model into container now
2022-08-11 23:04:31,239:INFO:master_model_container: 6
2022-08-11 23:04:31,239:INFO:display_container: 2
2022-08-11 23:04:31,240:INFO:LassoLars(random_state=2174)
2022-08-11 23:04:31,240:INFO:create_model() successfully completed......................................
2022-08-11 23:04:31,349:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:31,350:INFO:Creating metrics dataframe
2022-08-11 23:04:31,356:INFO:Initializing Orthogonal Matching Pursuit
2022-08-11 23:04:31,356:INFO:Total runtime is 0.05809351603190104 minutes
2022-08-11 23:04:31,358:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:31,358:INFO:Initializing create_model()
2022-08-11 23:04:31,358:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:31,358:INFO:Checking exceptions
2022-08-11 23:04:31,362:INFO:Importing libraries
2022-08-11 23:04:31,362:INFO:Copying training dataset
2022-08-11 23:04:31,370:INFO:Defining folds
2022-08-11 23:04:31,370:INFO:Declaring metric variables
2022-08-11 23:04:31,372:INFO:Importing untrained model
2022-08-11 23:04:31,374:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-11 23:04:31,377:INFO:Starting cross validation
2022-08-11 23:04:31,378:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:31,486:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,487:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,491:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,492:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,494:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,499:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,500:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,507:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,508:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,509:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,511:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,512:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,512:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,521:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,526:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,537:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,555:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-11 23:04:31,566:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:31,682:INFO:Calculating mean and std
2022-08-11 23:04:31,684:INFO:Creating metrics dataframe
2022-08-11 23:04:31,688:INFO:Uploading results into container
2022-08-11 23:04:31,688:INFO:Uploading model into container now
2022-08-11 23:04:31,689:INFO:master_model_container: 7
2022-08-11 23:04:31,689:INFO:display_container: 2
2022-08-11 23:04:31,689:INFO:OrthogonalMatchingPursuit()
2022-08-11 23:04:31,689:INFO:create_model() successfully completed......................................
2022-08-11 23:04:31,800:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:31,800:INFO:Creating metrics dataframe
2022-08-11 23:04:31,807:INFO:Initializing Bayesian Ridge
2022-08-11 23:04:31,807:INFO:Total runtime is 0.06560346285502117 minutes
2022-08-11 23:04:31,808:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:31,809:INFO:Initializing create_model()
2022-08-11 23:04:31,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:31,809:INFO:Checking exceptions
2022-08-11 23:04:31,813:INFO:Importing libraries
2022-08-11 23:04:31,813:INFO:Copying training dataset
2022-08-11 23:04:31,820:INFO:Defining folds
2022-08-11 23:04:31,821:INFO:Declaring metric variables
2022-08-11 23:04:31,823:INFO:Importing untrained model
2022-08-11 23:04:31,825:INFO:Bayesian Ridge Imported successfully
2022-08-11 23:04:31,828:INFO:Starting cross validation
2022-08-11 23:04:31,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:32,133:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,139:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,141:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,152:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,159:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,191:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,211:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,230:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,241:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,245:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,364:INFO:Calculating mean and std
2022-08-11 23:04:32,366:INFO:Creating metrics dataframe
2022-08-11 23:04:32,370:INFO:Uploading results into container
2022-08-11 23:04:32,371:INFO:Uploading model into container now
2022-08-11 23:04:32,371:INFO:master_model_container: 8
2022-08-11 23:04:32,371:INFO:display_container: 2
2022-08-11 23:04:32,372:INFO:BayesianRidge()
2022-08-11 23:04:32,372:INFO:create_model() successfully completed......................................
2022-08-11 23:04:32,483:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:32,483:INFO:Creating metrics dataframe
2022-08-11 23:04:32,490:INFO:Initializing Passive Aggressive Regressor
2022-08-11 23:04:32,490:INFO:Total runtime is 0.07698979775110881 minutes
2022-08-11 23:04:32,492:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:32,492:INFO:Initializing create_model()
2022-08-11 23:04:32,492:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:32,492:INFO:Checking exceptions
2022-08-11 23:04:32,496:INFO:Importing libraries
2022-08-11 23:04:32,496:INFO:Copying training dataset
2022-08-11 23:04:32,504:INFO:Defining folds
2022-08-11 23:04:32,504:INFO:Declaring metric variables
2022-08-11 23:04:32,506:INFO:Importing untrained model
2022-08-11 23:04:32,508:INFO:Passive Aggressive Regressor Imported successfully
2022-08-11 23:04:32,511:INFO:Starting cross validation
2022-08-11 23:04:32,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:32,705:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,710:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,713:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,714:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,716:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,719:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,727:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,732:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,769:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:32,888:INFO:Calculating mean and std
2022-08-11 23:04:32,890:INFO:Creating metrics dataframe
2022-08-11 23:04:32,893:INFO:Uploading results into container
2022-08-11 23:04:32,894:INFO:Uploading model into container now
2022-08-11 23:04:32,894:INFO:master_model_container: 9
2022-08-11 23:04:32,894:INFO:display_container: 2
2022-08-11 23:04:32,895:INFO:PassiveAggressiveRegressor(random_state=2174)
2022-08-11 23:04:32,895:INFO:create_model() successfully completed......................................
2022-08-11 23:04:33,006:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:33,006:INFO:Creating metrics dataframe
2022-08-11 23:04:33,013:INFO:Initializing Huber Regressor
2022-08-11 23:04:33,013:INFO:Total runtime is 0.0857122818628947 minutes
2022-08-11 23:04:33,015:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:33,015:INFO:Initializing create_model()
2022-08-11 23:04:33,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:33,015:INFO:Checking exceptions
2022-08-11 23:04:33,020:INFO:Importing libraries
2022-08-11 23:04:33,020:INFO:Copying training dataset
2022-08-11 23:04:33,027:INFO:Defining folds
2022-08-11 23:04:33,027:INFO:Declaring metric variables
2022-08-11 23:04:33,029:INFO:Importing untrained model
2022-08-11 23:04:33,031:INFO:Huber Regressor Imported successfully
2022-08-11 23:04:33,035:INFO:Starting cross validation
2022-08-11 23:04:33,035:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:33,885:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,886:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,910:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,911:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,922:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,923:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,940:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,941:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,960:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,961:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,971:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,972:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,982:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,983:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,984:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,984:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:33,989:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:33,989:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/linear_model/_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-11 23:04:34,000:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,119:INFO:Calculating mean and std
2022-08-11 23:04:34,121:INFO:Creating metrics dataframe
2022-08-11 23:04:34,125:INFO:Uploading results into container
2022-08-11 23:04:34,125:INFO:Uploading model into container now
2022-08-11 23:04:34,126:INFO:master_model_container: 10
2022-08-11 23:04:34,126:INFO:display_container: 2
2022-08-11 23:04:34,126:INFO:HuberRegressor()
2022-08-11 23:04:34,126:INFO:create_model() successfully completed......................................
2022-08-11 23:04:34,236:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:34,236:INFO:Creating metrics dataframe
2022-08-11 23:04:34,243:INFO:Initializing K Neighbors Regressor
2022-08-11 23:04:34,243:INFO:Total runtime is 0.10620751380920411 minutes
2022-08-11 23:04:34,245:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:34,245:INFO:Initializing create_model()
2022-08-11 23:04:34,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:34,245:INFO:Checking exceptions
2022-08-11 23:04:34,249:INFO:Importing libraries
2022-08-11 23:04:34,249:INFO:Copying training dataset
2022-08-11 23:04:34,256:INFO:Defining folds
2022-08-11 23:04:34,257:INFO:Declaring metric variables
2022-08-11 23:04:34,259:INFO:Importing untrained model
2022-08-11 23:04:34,261:INFO:K Neighbors Regressor Imported successfully
2022-08-11 23:04:34,264:INFO:Starting cross validation
2022-08-11 23:04:34,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:34,379:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,380:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,380:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,380:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,381:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,382:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,385:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,390:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,406:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:34,432:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:35,543:INFO:Calculating mean and std
2022-08-11 23:04:35,545:INFO:Creating metrics dataframe
2022-08-11 23:04:35,549:INFO:Uploading results into container
2022-08-11 23:04:35,550:INFO:Uploading model into container now
2022-08-11 23:04:35,550:INFO:master_model_container: 11
2022-08-11 23:04:35,550:INFO:display_container: 2
2022-08-11 23:04:35,551:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-11 23:04:35,551:INFO:create_model() successfully completed......................................
2022-08-11 23:04:35,663:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:35,663:INFO:Creating metrics dataframe
2022-08-11 23:04:35,670:INFO:Initializing Decision Tree Regressor
2022-08-11 23:04:35,670:INFO:Total runtime is 0.1299929976463318 minutes
2022-08-11 23:04:35,672:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:35,672:INFO:Initializing create_model()
2022-08-11 23:04:35,672:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:35,672:INFO:Checking exceptions
2022-08-11 23:04:35,677:INFO:Importing libraries
2022-08-11 23:04:35,677:INFO:Copying training dataset
2022-08-11 23:04:35,687:INFO:Defining folds
2022-08-11 23:04:35,687:INFO:Declaring metric variables
2022-08-11 23:04:35,689:INFO:Importing untrained model
2022-08-11 23:04:35,691:INFO:Decision Tree Regressor Imported successfully
2022-08-11 23:04:35,694:INFO:Starting cross validation
2022-08-11 23:04:35,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-11 23:04:36,896:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,927:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,928:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,930:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,956:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,965:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,968:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:36,989:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:37,002:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:37,022:WARNING:/Users/siwon/miniconda3/envs/your_env/lib/python3.8/site-packages/sklearn/utils/metaestimators.py:201: FutureWarning: if_delegate_has_method was deprecated in version 1.1 and will be removed in version 1.3. Use if_available instead.
  warnings.warn(

2022-08-11 23:04:37,141:INFO:Calculating mean and std
2022-08-11 23:04:37,143:INFO:Creating metrics dataframe
2022-08-11 23:04:37,147:INFO:Uploading results into container
2022-08-11 23:04:37,147:INFO:Uploading model into container now
2022-08-11 23:04:37,148:INFO:master_model_container: 12
2022-08-11 23:04:37,148:INFO:display_container: 2
2022-08-11 23:04:37,148:INFO:DecisionTreeRegressor(random_state=2174)
2022-08-11 23:04:37,148:INFO:create_model() successfully completed......................................
2022-08-11 23:04:37,257:INFO:SubProcess create_model() end ==================================
2022-08-11 23:04:37,257:INFO:Creating metrics dataframe
2022-08-11 23:04:37,265:INFO:Initializing Random Forest Regressor
2022-08-11 23:04:37,265:INFO:Total runtime is 0.15657308101654052 minutes
2022-08-11 23:04:37,267:INFO:SubProcess create_model() called ==================================
2022-08-11 23:04:37,267:INFO:Initializing create_model()
2022-08-11 23:04:37,267:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f7e88a3bbb0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f7ece235af0>, model_only=True, return_train_score=False, kwargs={})
2022-08-11 23:04:37,267:INFO:Checking exceptions
2022-08-11 23:04:37,271:INFO:Importing libraries
2022-08-11 23:04:37,271:INFO:Copying training dataset
2022-08-11 23:04:37,279:INFO:Defining folds
2022-08-11 23:04:37,279:INFO:Declaring metric variables
2022-08-11 23:04:37,281:INFO:Importing untrained model
2022-08-11 23:04:37,283:INFO:Random Forest Regressor Imported successfully
2022-08-11 23:04:37,287:INFO:Starting cross validation
2022-08-11 23:04:37,287:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
